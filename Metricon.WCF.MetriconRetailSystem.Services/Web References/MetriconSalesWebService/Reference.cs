//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.239.
// 
#pragma warning disable 1591

namespace Metricon.WCF.MetriconRetailSystem.Services.MetriconSalesWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MetriconSalesSoap", Namespace="http://MetriconSalesWebService/")]
    public partial class MetriconSales : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetSiteDetailsForOpportunityContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteDetailsForOpportunityByContractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteDetailsForOpportunityContractInDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddContractToOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOpportunityHasContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContractOfOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateBlankSiteDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositedContractDetailsForACustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOpportunityRatingFinanceApprovalOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOpportunityRatingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOpportunityFirstHomeBuyerFlagOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositDetailsByOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositDetailsByContractNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveDepositDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositDetailsForOpportunityInDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSalesStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSalesStatusCommentsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGeneralInfoSeminarInfoByOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimaryContactByLeadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrimaryContactByLeadAsDataSetOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFinanceConsultantForAnOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteLeadOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_CreateFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_UpdateFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_GetSharepointFileListInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_GetFolderFileListOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_UploadAttachementOperationCompleted;
        
        private System.Threading.SendOrPostCallback Sharepoint_RemoveFileFromListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractCustomerDetailsByContractNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBCContactsForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestWebServiceOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestBCLinkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCompanyOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSalesCentreListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEventDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromotionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromotionCodeForAContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaleTypeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouncilListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLandDeveloperListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLendingAuthorityListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolicitorListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolicitorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolicitorDetailsFromSQSOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSolicitorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSolicitorDetailsByOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactStatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactTitlesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListForUserSortPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListSortPageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListForUserSortPage2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListSortPage2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetActiveContactListForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListForCustomerWithSequenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerWithKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteContactFromCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractListForCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEstimateListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEstimateListByAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEstimateHeaderDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEstimatePromotionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentEstimateHouseDetailsByContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCurrentEstimateHouseDetailsByEstimateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPromotionDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEstimateCompleteOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateContractWithKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContractForOtherSiteDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepositDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback RegisterEventHFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSiteDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSiteDetailsForSuppliersOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSiteDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsEstimateExpiredOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBudgetDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveBudgetDetailsForContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDependencyForEstimateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractJobNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreliminarySupplierListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPreliminarySupplierDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddItemTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback TestCreateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback AcceptEstimateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnregisterEventOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateContractAfterDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateSalesTypeAfterDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerAfterDepositOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCatCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserInitailAndCatCodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerListForUserSortPageFromCRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCRMContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContactListForCustomerFromCRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCRMContactOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCRMContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetContractOpportunityListForCustomerFromCRMOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOpportunityOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveSiteDetailsForOpportunityContractOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MetriconSales() {
            this.Url = global::Metricon.WCF.MetriconRetailSystem.Services.Properties.Settings.Default.Metricon_WCF_MetriconRetailSystem_Services_MetriconSalesWebService_MetriconSales;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetSiteDetailsForOpportunityContractCompletedEventHandler GetSiteDetailsForOpportunityContractCompleted;
        
        /// <remarks/>
        public event GetSiteDetailsForOpportunityByContractNumberCompletedEventHandler GetSiteDetailsForOpportunityByContractNumberCompleted;
        
        /// <remarks/>
        public event GetSiteDetailsForOpportunityContractInDataSetCompletedEventHandler GetSiteDetailsForOpportunityContractInDataSetCompleted;
        
        /// <remarks/>
        public event AddContractToOpportunityCompletedEventHandler AddContractToOpportunityCompleted;
        
        /// <remarks/>
        public event CheckOpportunityHasContractCompletedEventHandler CheckOpportunityHasContractCompleted;
        
        /// <remarks/>
        public event UpdateContractOfOpportunityCompletedEventHandler UpdateContractOfOpportunityCompleted;
        
        /// <remarks/>
        public event CreateBlankSiteDetailsCompletedEventHandler CreateBlankSiteDetailsCompleted;
        
        /// <remarks/>
        public event GetDepositedContractDetailsForACustomerCompletedEventHandler GetDepositedContractDetailsForACustomerCompleted;
        
        /// <remarks/>
        public event UpdateOpportunityRatingFinanceApprovalCompletedEventHandler UpdateOpportunityRatingFinanceApprovalCompleted;
        
        /// <remarks/>
        public event UpdateOpportunityRatingCompletedEventHandler UpdateOpportunityRatingCompleted;
        
        /// <remarks/>
        public event UpdateOpportunityFirstHomeBuyerFlagCompletedEventHandler UpdateOpportunityFirstHomeBuyerFlagCompleted;
        
        /// <remarks/>
        public event GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventHandler GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompleted;
        
        /// <remarks/>
        public event GetDepositDetailsByOpportunityCompletedEventHandler GetDepositDetailsByOpportunityCompleted;
        
        /// <remarks/>
        public event GetDepositDetailsByContractNoCompletedEventHandler GetDepositDetailsByContractNoCompleted;
        
        /// <remarks/>
        public event SaveDepositDetailsCompletedEventHandler SaveDepositDetailsCompleted;
        
        /// <remarks/>
        public event GetDepositDetailsForOpportunityInDataSetCompletedEventHandler GetDepositDetailsForOpportunityInDataSetCompleted;
        
        /// <remarks/>
        public event UpdateSalesStatusCompletedEventHandler UpdateSalesStatusCompleted;
        
        /// <remarks/>
        public event UpdateSalesStatusCommentsCompletedEventHandler UpdateSalesStatusCommentsCompleted;
        
        /// <remarks/>
        public event GetGeneralInfoSeminarInfoByOpportunityCompletedEventHandler GetGeneralInfoSeminarInfoByOpportunityCompleted;
        
        /// <remarks/>
        public event GetPrimaryContactByLeadCompletedEventHandler GetPrimaryContactByLeadCompleted;
        
        /// <remarks/>
        public event GetPrimaryContactByLeadAsDataSetCompletedEventHandler GetPrimaryContactByLeadAsDataSetCompleted;
        
        /// <remarks/>
        public event UpdateFinanceConsultantForAnOpportunityCompletedEventHandler UpdateFinanceConsultantForAnOpportunityCompleted;
        
        /// <remarks/>
        public event DeleteLeadCompletedEventHandler DeleteLeadCompleted;
        
        /// <remarks/>
        public event GetUserListAsXMLCompletedEventHandler GetUserListAsXMLCompleted;
        
        /// <remarks/>
        public event Sharepoint_CreateFolderCompletedEventHandler Sharepoint_CreateFolderCompleted;
        
        /// <remarks/>
        public event Sharepoint_UpdateFolderNameCompletedEventHandler Sharepoint_UpdateFolderNameCompleted;
        
        /// <remarks/>
        public event Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventHandler Sharepoint_GetSharepointFolderInfoByOpportunityIDCompleted;
        
        /// <remarks/>
        public event Sharepoint_GetSharepointFileListInFolderCompletedEventHandler Sharepoint_GetSharepointFileListInFolderCompleted;
        
        /// <remarks/>
        public event Sharepoint_GetFolderFileListCompletedEventHandler Sharepoint_GetFolderFileListCompleted;
        
        /// <remarks/>
        public event Sharepoint_UploadAttachementCompletedEventHandler Sharepoint_UploadAttachementCompleted;
        
        /// <remarks/>
        public event Sharepoint_RemoveFileFromListCompletedEventHandler Sharepoint_RemoveFileFromListCompleted;
        
        /// <remarks/>
        public event GetContractCustomerDetailsByContractNumberCompletedEventHandler GetContractCustomerDetailsByContractNumberCompleted;
        
        /// <remarks/>
        public event GetBCContactsForCustomerCompletedEventHandler GetBCContactsForCustomerCompleted;
        
        /// <remarks/>
        public event ReconnectCompletedEventHandler ReconnectCompleted;
        
        /// <remarks/>
        public event TestWebServiceCompletedEventHandler TestWebServiceCompleted;
        
        /// <remarks/>
        public event TestBCLinkCompletedEventHandler TestBCLinkCompleted;
        
        /// <remarks/>
        public event GetUserListCompletedEventHandler GetUserListCompleted;
        
        /// <remarks/>
        public event GetCompanyListCompletedEventHandler GetCompanyListCompleted;
        
        /// <remarks/>
        public event GetCompanyCompletedEventHandler GetCompanyCompleted;
        
        /// <remarks/>
        public event GetSalesCentreListCompletedEventHandler GetSalesCentreListCompleted;
        
        /// <remarks/>
        public event GetEventDetailsForContractCompletedEventHandler GetEventDetailsForContractCompleted;
        
        /// <remarks/>
        public event GetPromotionListCompletedEventHandler GetPromotionListCompleted;
        
        /// <remarks/>
        public event GetPromotionCodeForAContractCompletedEventHandler GetPromotionCodeForAContractCompleted;
        
        /// <remarks/>
        public event GetSaleTypeListCompletedEventHandler GetSaleTypeListCompleted;
        
        /// <remarks/>
        public event GetCouncilListCompletedEventHandler GetCouncilListCompleted;
        
        /// <remarks/>
        public event GetLandDeveloperListCompletedEventHandler GetLandDeveloperListCompleted;
        
        /// <remarks/>
        public event GetLendingAuthorityListCompletedEventHandler GetLendingAuthorityListCompleted;
        
        /// <remarks/>
        public event GetSolicitorListCompletedEventHandler GetSolicitorListCompleted;
        
        /// <remarks/>
        public event GetSolicitorDetailsCompletedEventHandler GetSolicitorDetailsCompleted;
        
        /// <remarks/>
        public event GetSolicitorDetailsFromSQSCompletedEventHandler GetSolicitorDetailsFromSQSCompleted;
        
        /// <remarks/>
        public event SaveSolicitorDetailsCompletedEventHandler SaveSolicitorDetailsCompleted;
        
        /// <remarks/>
        public event GetSolicitorDetailsByOpportunityCompletedEventHandler GetSolicitorDetailsByOpportunityCompleted;
        
        /// <remarks/>
        public event GetContactStatesCompletedEventHandler GetContactStatesCompleted;
        
        /// <remarks/>
        public event GetContactTitlesCompletedEventHandler GetContactTitlesCompleted;
        
        /// <remarks/>
        public event GetCustomerListForUserSortPageCompletedEventHandler GetCustomerListForUserSortPageCompleted;
        
        /// <remarks/>
        public event GetCustomerListSortPageCompletedEventHandler GetCustomerListSortPageCompleted;
        
        /// <remarks/>
        public event GetCustomerListForUserSortPage2CompletedEventHandler GetCustomerListForUserSortPage2Completed;
        
        /// <remarks/>
        public event GetCustomerListSortPage2CompletedEventHandler GetCustomerListSortPage2Completed;
        
        /// <remarks/>
        public event GetContactListForCustomerCompletedEventHandler GetContactListForCustomerCompleted;
        
        /// <remarks/>
        public event GetActiveContactListForCustomerCompletedEventHandler GetActiveContactListForCustomerCompleted;
        
        /// <remarks/>
        public event GetContactListForCustomerWithSequenceCompletedEventHandler GetContactListForCustomerWithSequenceCompleted;
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        public event CreateCustomerWithKeyCompletedEventHandler CreateCustomerWithKeyCompleted;
        
        /// <remarks/>
        public event CreateContactCompletedEventHandler CreateContactCompleted;
        
        /// <remarks/>
        public event UpdateContactCompletedEventHandler UpdateContactCompleted;
        
        /// <remarks/>
        public event DeleteContactFromCustomerCompletedEventHandler DeleteContactFromCustomerCompleted;
        
        /// <remarks/>
        public event GetContractListForCustomerCompletedEventHandler GetContractListForCustomerCompleted;
        
        /// <remarks/>
        public event GetEstimateListCompletedEventHandler GetEstimateListCompleted;
        
        /// <remarks/>
        public event GetEstimateListByAccountCompletedEventHandler GetEstimateListByAccountCompleted;
        
        /// <remarks/>
        public event GetEstimateHeaderDetailsCompletedEventHandler GetEstimateHeaderDetailsCompleted;
        
        /// <remarks/>
        public event GetEstimatePromotionCompletedEventHandler GetEstimatePromotionCompleted;
        
        /// <remarks/>
        public event GetCurrentEstimateHouseDetailsByContractCompletedEventHandler GetCurrentEstimateHouseDetailsByContractCompleted;
        
        /// <remarks/>
        public event GetCurrentEstimateHouseDetailsByEstimateCompletedEventHandler GetCurrentEstimateHouseDetailsByEstimateCompleted;
        
        /// <remarks/>
        public event GetPromotionDetailsCompletedEventHandler GetPromotionDetailsCompleted;
        
        /// <remarks/>
        public event IsEstimateCompleteCompletedEventHandler IsEstimateCompleteCompleted;
        
        /// <remarks/>
        public event GetContractDetailsCompletedEventHandler GetContractDetailsCompleted;
        
        /// <remarks/>
        public event CreateContractCompletedEventHandler CreateContractCompleted;
        
        /// <remarks/>
        public event CreateContractWithKeyCompletedEventHandler CreateContractWithKeyCompleted;
        
        /// <remarks/>
        public event UpdateContractCompletedEventHandler UpdateContractCompleted;
        
        /// <remarks/>
        public event UpdateContractForOtherSiteDetailsCompletedEventHandler UpdateContractForOtherSiteDetailsCompleted;
        
        /// <remarks/>
        public event GetDepositDetailsForContractCompletedEventHandler GetDepositDetailsForContractCompleted;
        
        /// <remarks/>
        public event AcceptDepositCompletedEventHandler AcceptDepositCompleted;
        
        /// <remarks/>
        public event RegisterEventHFCompletedEventHandler RegisterEventHFCompleted;
        
        /// <remarks/>
        public event GetSiteDetailsForContractCompletedEventHandler GetSiteDetailsForContractCompleted;
        
        /// <remarks/>
        public event SaveSiteDetailsForSuppliersCompletedEventHandler SaveSiteDetailsForSuppliersCompleted;
        
        /// <remarks/>
        public event SaveSiteDetailsForContractCompletedEventHandler SaveSiteDetailsForContractCompleted;
        
        /// <remarks/>
        public event IsEstimateExpiredCompletedEventHandler IsEstimateExpiredCompleted;
        
        /// <remarks/>
        public event GetBudgetDetailsForContractCompletedEventHandler GetBudgetDetailsForContractCompleted;
        
        /// <remarks/>
        public event SaveBudgetDetailsForContractCompletedEventHandler SaveBudgetDetailsForContractCompleted;
        
        /// <remarks/>
        public event GetDependencyForEstimateCompletedEventHandler GetDependencyForEstimateCompleted;
        
        /// <remarks/>
        public event GetContractJobNumberCompletedEventHandler GetContractJobNumberCompleted;
        
        /// <remarks/>
        public event GetPreliminarySupplierListCompletedEventHandler GetPreliminarySupplierListCompleted;
        
        /// <remarks/>
        public event GetPreliminarySupplierDetailsCompletedEventHandler GetPreliminarySupplierDetailsCompleted;
        
        /// <remarks/>
        public event AddItemTestCompletedEventHandler AddItemTestCompleted;
        
        /// <remarks/>
        public event TestCreateCustomerCompletedEventHandler TestCreateCustomerCompleted;
        
        /// <remarks/>
        public event AcceptEstimateCompletedEventHandler AcceptEstimateCompleted;
        
        /// <remarks/>
        public event UnregisterEventCompletedEventHandler UnregisterEventCompleted;
        
        /// <remarks/>
        public event UpdateContractAfterDepositCompletedEventHandler UpdateContractAfterDepositCompleted;
        
        /// <remarks/>
        public event UpdateSalesTypeAfterDepositCompletedEventHandler UpdateSalesTypeAfterDepositCompleted;
        
        /// <remarks/>
        public event UpdateCustomerAfterDepositCompletedEventHandler UpdateCustomerAfterDepositCompleted;
        
        /// <remarks/>
        public event GetUserCatCodeCompletedEventHandler GetUserCatCodeCompleted;
        
        /// <remarks/>
        public event GetUserInitailAndCatCodeCompletedEventHandler GetUserInitailAndCatCodeCompleted;
        
        /// <remarks/>
        public event GetCustomerListForUserSortPageFromCRMCompletedEventHandler GetCustomerListForUserSortPageFromCRMCompleted;
        
        /// <remarks/>
        public event AddCRMContactCompletedEventHandler AddCRMContactCompleted;
        
        /// <remarks/>
        public event GetContactListForCustomerFromCRMCompletedEventHandler GetContactListForCustomerFromCRMCompleted;
        
        /// <remarks/>
        public event UpdateCRMContactCompletedEventHandler UpdateCRMContactCompleted;
        
        /// <remarks/>
        public event UpdateCRMContractCompletedEventHandler UpdateCRMContractCompleted;
        
        /// <remarks/>
        public event GetContractOpportunityListForCustomerFromCRMCompletedEventHandler GetContractOpportunityListForCustomerFromCRMCompleted;
        
        /// <remarks/>
        public event AddOpportunityCompletedEventHandler AddOpportunityCompleted;
        
        /// <remarks/>
        public event SaveSiteDetailsForOpportunityContractCompletedEventHandler SaveSiteDetailsForOpportunityContractCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSiteDetailsForOpportunityContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SiteDetails", IsNullable=true)]
        public SiteDetails GetSiteDetailsForOpportunityContract(string opportunityid) {
            object[] results = this.Invoke("GetSiteDetailsForOpportunityContract", new object[] {
                        opportunityid});
            return ((SiteDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityContractAsync(string opportunityid) {
            this.GetSiteDetailsForOpportunityContractAsync(opportunityid, null);
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityContractAsync(string opportunityid, object userState) {
            if ((this.GetSiteDetailsForOpportunityContractOperationCompleted == null)) {
                this.GetSiteDetailsForOpportunityContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsForOpportunityContractOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetailsForOpportunityContract", new object[] {
                        opportunityid}, this.GetSiteDetailsForOpportunityContractOperationCompleted, userState);
        }
        
        private void OnGetSiteDetailsForOpportunityContractOperationCompleted(object arg) {
            if ((this.GetSiteDetailsForOpportunityContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsForOpportunityContractCompleted(this, new GetSiteDetailsForOpportunityContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSiteDetailsForOpportunityByContractNumber", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("SiteDetails", IsNullable=true)]
        public SiteDetails GetSiteDetailsForOpportunityByContractNumber(string contractno) {
            object[] results = this.Invoke("GetSiteDetailsForOpportunityByContractNumber", new object[] {
                        contractno});
            return ((SiteDetails)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityByContractNumberAsync(string contractno) {
            this.GetSiteDetailsForOpportunityByContractNumberAsync(contractno, null);
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityByContractNumberAsync(string contractno, object userState) {
            if ((this.GetSiteDetailsForOpportunityByContractNumberOperationCompleted == null)) {
                this.GetSiteDetailsForOpportunityByContractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsForOpportunityByContractNumberOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetailsForOpportunityByContractNumber", new object[] {
                        contractno}, this.GetSiteDetailsForOpportunityByContractNumberOperationCompleted, userState);
        }
        
        private void OnGetSiteDetailsForOpportunityByContractNumberOperationCompleted(object arg) {
            if ((this.GetSiteDetailsForOpportunityByContractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsForOpportunityByContractNumberCompleted(this, new GetSiteDetailsForOpportunityByContractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSiteDetailsForOpportunityContractInDataSet", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSiteDetailsForOpportunityContractInDataSet(string opportunityid) {
            object[] results = this.Invoke("GetSiteDetailsForOpportunityContractInDataSet", new object[] {
                        opportunityid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityContractInDataSetAsync(string opportunityid) {
            this.GetSiteDetailsForOpportunityContractInDataSetAsync(opportunityid, null);
        }
        
        /// <remarks/>
        public void GetSiteDetailsForOpportunityContractInDataSetAsync(string opportunityid, object userState) {
            if ((this.GetSiteDetailsForOpportunityContractInDataSetOperationCompleted == null)) {
                this.GetSiteDetailsForOpportunityContractInDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsForOpportunityContractInDataSetOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetailsForOpportunityContractInDataSet", new object[] {
                        opportunityid}, this.GetSiteDetailsForOpportunityContractInDataSetOperationCompleted, userState);
        }
        
        private void OnGetSiteDetailsForOpportunityContractInDataSetOperationCompleted(object arg) {
            if ((this.GetSiteDetailsForOpportunityContractInDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsForOpportunityContractInDataSetCompleted(this, new GetSiteDetailsForOpportunityContractInDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AddContractToOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddContractToOpportunity(string pOpportynityID, string customercode, string contractno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails, string usercode, string ESAUserID, string jobnumber) {
            object[] results = this.Invoke("AddContractToOpportunity", new object[] {
                        pOpportynityID,
                        customercode,
                        contractno,
                        SiteDetails,
                        usercode,
                        ESAUserID,
                        jobnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddContractToOpportunityAsync(string pOpportynityID, string customercode, string contractno, SiteDetails SiteDetails, string usercode, string ESAUserID, string jobnumber) {
            this.AddContractToOpportunityAsync(pOpportynityID, customercode, contractno, SiteDetails, usercode, ESAUserID, jobnumber, null);
        }
        
        /// <remarks/>
        public void AddContractToOpportunityAsync(string pOpportynityID, string customercode, string contractno, SiteDetails SiteDetails, string usercode, string ESAUserID, string jobnumber, object userState) {
            if ((this.AddContractToOpportunityOperationCompleted == null)) {
                this.AddContractToOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddContractToOpportunityOperationCompleted);
            }
            this.InvokeAsync("AddContractToOpportunity", new object[] {
                        pOpportynityID,
                        customercode,
                        contractno,
                        SiteDetails,
                        usercode,
                        ESAUserID,
                        jobnumber}, this.AddContractToOpportunityOperationCompleted, userState);
        }
        
        private void OnAddContractToOpportunityOperationCompleted(object arg) {
            if ((this.AddContractToOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddContractToOpportunityCompleted(this, new AddContractToOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CheckOpportunityHasContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOpportunityHasContract(string pOpportunityID, string contractno, string ESAUserName) {
            object[] results = this.Invoke("CheckOpportunityHasContract", new object[] {
                        pOpportunityID,
                        contractno,
                        ESAUserName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOpportunityHasContractAsync(string pOpportunityID, string contractno, string ESAUserName) {
            this.CheckOpportunityHasContractAsync(pOpportunityID, contractno, ESAUserName, null);
        }
        
        /// <remarks/>
        public void CheckOpportunityHasContractAsync(string pOpportunityID, string contractno, string ESAUserName, object userState) {
            if ((this.CheckOpportunityHasContractOperationCompleted == null)) {
                this.CheckOpportunityHasContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOpportunityHasContractOperationCompleted);
            }
            this.InvokeAsync("CheckOpportunityHasContract", new object[] {
                        pOpportunityID,
                        contractno,
                        ESAUserName}, this.CheckOpportunityHasContractOperationCompleted, userState);
        }
        
        private void OnCheckOpportunityHasContractOperationCompleted(object arg) {
            if ((this.CheckOpportunityHasContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOpportunityHasContractCompleted(this, new CheckOpportunityHasContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateContractOfOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContractOfOpportunity(string pOpportynityID, string customercode, string contractno, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails, string usercode, string ESAUserName) {
            object[] results = this.Invoke("UpdateContractOfOpportunity", new object[] {
                        pOpportynityID,
                        customercode,
                        contractno,
                        SiteDetails,
                        usercode,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContractOfOpportunityAsync(string pOpportynityID, string customercode, string contractno, SiteDetails SiteDetails, string usercode, string ESAUserName) {
            this.UpdateContractOfOpportunityAsync(pOpportynityID, customercode, contractno, SiteDetails, usercode, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateContractOfOpportunityAsync(string pOpportynityID, string customercode, string contractno, SiteDetails SiteDetails, string usercode, string ESAUserName, object userState) {
            if ((this.UpdateContractOfOpportunityOperationCompleted == null)) {
                this.UpdateContractOfOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContractOfOpportunityOperationCompleted);
            }
            this.InvokeAsync("UpdateContractOfOpportunity", new object[] {
                        pOpportynityID,
                        customercode,
                        contractno,
                        SiteDetails,
                        usercode,
                        ESAUserName}, this.UpdateContractOfOpportunityOperationCompleted, userState);
        }
        
        private void OnUpdateContractOfOpportunityOperationCompleted(object arg) {
            if ((this.UpdateContractOfOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContractOfOpportunityCompleted(this, new UpdateContractOfOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateBlankSiteDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CreateBlankSiteDetails(string accountid, string opportunityid, string ESAUserName, string company) {
            this.Invoke("CreateBlankSiteDetails", new object[] {
                        accountid,
                        opportunityid,
                        ESAUserName,
                        company});
        }
        
        /// <remarks/>
        public void CreateBlankSiteDetailsAsync(string accountid, string opportunityid, string ESAUserName, string company) {
            this.CreateBlankSiteDetailsAsync(accountid, opportunityid, ESAUserName, company, null);
        }
        
        /// <remarks/>
        public void CreateBlankSiteDetailsAsync(string accountid, string opportunityid, string ESAUserName, string company, object userState) {
            if ((this.CreateBlankSiteDetailsOperationCompleted == null)) {
                this.CreateBlankSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBlankSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("CreateBlankSiteDetails", new object[] {
                        accountid,
                        opportunityid,
                        ESAUserName,
                        company}, this.CreateBlankSiteDetailsOperationCompleted, userState);
        }
        
        private void OnCreateBlankSiteDetailsOperationCompleted(object arg) {
            if ((this.CreateBlankSiteDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBlankSiteDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDepositedContractDetailsForACustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepositedContractDetailsForACustomer(string sCustomerCode, string company) {
            object[] results = this.Invoke("GetDepositedContractDetailsForACustomer", new object[] {
                        sCustomerCode,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositedContractDetailsForACustomerAsync(string sCustomerCode, string company) {
            this.GetDepositedContractDetailsForACustomerAsync(sCustomerCode, company, null);
        }
        
        /// <remarks/>
        public void GetDepositedContractDetailsForACustomerAsync(string sCustomerCode, string company, object userState) {
            if ((this.GetDepositedContractDetailsForACustomerOperationCompleted == null)) {
                this.GetDepositedContractDetailsForACustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositedContractDetailsForACustomerOperationCompleted);
            }
            this.InvokeAsync("GetDepositedContractDetailsForACustomer", new object[] {
                        sCustomerCode,
                        company}, this.GetDepositedContractDetailsForACustomerOperationCompleted, userState);
        }
        
        private void OnGetDepositedContractDetailsForACustomerOperationCompleted(object arg) {
            if ((this.GetDepositedContractDetailsForACustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositedContractDetailsForACustomerCompleted(this, new GetDepositedContractDetailsForACustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateOpportunityRatingFinanceApproval", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOpportunityRatingFinanceApproval(string pOpportunityID, bool firsthomebuyer, int rkey, string rvalue, bool finanacepreapproval, bool approvalletterrecieved, string ESAUserName) {
            object[] results = this.Invoke("UpdateOpportunityRatingFinanceApproval", new object[] {
                        pOpportunityID,
                        firsthomebuyer,
                        rkey,
                        rvalue,
                        finanacepreapproval,
                        approvalletterrecieved,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOpportunityRatingFinanceApprovalAsync(string pOpportunityID, bool firsthomebuyer, int rkey, string rvalue, bool finanacepreapproval, bool approvalletterrecieved, string ESAUserName) {
            this.UpdateOpportunityRatingFinanceApprovalAsync(pOpportunityID, firsthomebuyer, rkey, rvalue, finanacepreapproval, approvalletterrecieved, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateOpportunityRatingFinanceApprovalAsync(string pOpportunityID, bool firsthomebuyer, int rkey, string rvalue, bool finanacepreapproval, bool approvalletterrecieved, string ESAUserName, object userState) {
            if ((this.UpdateOpportunityRatingFinanceApprovalOperationCompleted == null)) {
                this.UpdateOpportunityRatingFinanceApprovalOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOpportunityRatingFinanceApprovalOperationCompleted);
            }
            this.InvokeAsync("UpdateOpportunityRatingFinanceApproval", new object[] {
                        pOpportunityID,
                        firsthomebuyer,
                        rkey,
                        rvalue,
                        finanacepreapproval,
                        approvalletterrecieved,
                        ESAUserName}, this.UpdateOpportunityRatingFinanceApprovalOperationCompleted, userState);
        }
        
        private void OnUpdateOpportunityRatingFinanceApprovalOperationCompleted(object arg) {
            if ((this.UpdateOpportunityRatingFinanceApprovalCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOpportunityRatingFinanceApprovalCompleted(this, new UpdateOpportunityRatingFinanceApprovalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateOpportunityRating", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOpportunityRating(string pOpportunityID, int rkey, string rvalue, string ESAUserName) {
            object[] results = this.Invoke("UpdateOpportunityRating", new object[] {
                        pOpportunityID,
                        rkey,
                        rvalue,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOpportunityRatingAsync(string pOpportunityID, int rkey, string rvalue, string ESAUserName) {
            this.UpdateOpportunityRatingAsync(pOpportunityID, rkey, rvalue, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateOpportunityRatingAsync(string pOpportunityID, int rkey, string rvalue, string ESAUserName, object userState) {
            if ((this.UpdateOpportunityRatingOperationCompleted == null)) {
                this.UpdateOpportunityRatingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOpportunityRatingOperationCompleted);
            }
            this.InvokeAsync("UpdateOpportunityRating", new object[] {
                        pOpportunityID,
                        rkey,
                        rvalue,
                        ESAUserName}, this.UpdateOpportunityRatingOperationCompleted, userState);
        }
        
        private void OnUpdateOpportunityRatingOperationCompleted(object arg) {
            if ((this.UpdateOpportunityRatingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOpportunityRatingCompleted(this, new UpdateOpportunityRatingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateOpportunityFirstHomeBuyerFlag", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateOpportunityFirstHomeBuyerFlag(string pOpportunityID, bool firsthomebuyer, string ESAUserName) {
            object[] results = this.Invoke("UpdateOpportunityFirstHomeBuyerFlag", new object[] {
                        pOpportunityID,
                        firsthomebuyer,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateOpportunityFirstHomeBuyerFlagAsync(string pOpportunityID, bool firsthomebuyer, string ESAUserName) {
            this.UpdateOpportunityFirstHomeBuyerFlagAsync(pOpportunityID, firsthomebuyer, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateOpportunityFirstHomeBuyerFlagAsync(string pOpportunityID, bool firsthomebuyer, string ESAUserName, object userState) {
            if ((this.UpdateOpportunityFirstHomeBuyerFlagOperationCompleted == null)) {
                this.UpdateOpportunityFirstHomeBuyerFlagOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOpportunityFirstHomeBuyerFlagOperationCompleted);
            }
            this.InvokeAsync("UpdateOpportunityFirstHomeBuyerFlag", new object[] {
                        pOpportunityID,
                        firsthomebuyer,
                        ESAUserName}, this.UpdateOpportunityFirstHomeBuyerFlagOperationCompleted, userState);
        }
        
        private void OnUpdateOpportunityFirstHomeBuyerFlagOperationCompleted(object arg) {
            if ((this.UpdateOpportunityFirstHomeBuyerFlagCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOpportunityFirstHomeBuyerFlagCompleted(this, new UpdateOpportunityFirstHomeBuyerFlagCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetOpportunitySalesStatusRatingFinanceApprovalAttr" +
            "ibutes", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOpportunitySalesStatusRatingFinanceApprovalAttributes(string pOpportunityID) {
            object[] results = this.Invoke("GetOpportunitySalesStatusRatingFinanceApprovalAttributes", new object[] {
                        pOpportunityID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOpportunitySalesStatusRatingFinanceApprovalAttributesAsync(string pOpportunityID) {
            this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesAsync(pOpportunityID, null);
        }
        
        /// <remarks/>
        public void GetOpportunitySalesStatusRatingFinanceApprovalAttributesAsync(string pOpportunityID, object userState) {
            if ((this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted == null)) {
                this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted);
            }
            this.InvokeAsync("GetOpportunitySalesStatusRatingFinanceApprovalAttributes", new object[] {
                        pOpportunityID}, this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted, userState);
        }
        
        private void OnGetOpportunitySalesStatusRatingFinanceApprovalAttributesOperationCompleted(object arg) {
            if ((this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompleted(this, new GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDepositDetailsByOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Deposit GetDepositDetailsByOpportunity(string pOpportunityID) {
            object[] results = this.Invoke("GetDepositDetailsByOpportunity", new object[] {
                        pOpportunityID});
            return ((Deposit)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositDetailsByOpportunityAsync(string pOpportunityID) {
            this.GetDepositDetailsByOpportunityAsync(pOpportunityID, null);
        }
        
        /// <remarks/>
        public void GetDepositDetailsByOpportunityAsync(string pOpportunityID, object userState) {
            if ((this.GetDepositDetailsByOpportunityOperationCompleted == null)) {
                this.GetDepositDetailsByOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositDetailsByOpportunityOperationCompleted);
            }
            this.InvokeAsync("GetDepositDetailsByOpportunity", new object[] {
                        pOpportunityID}, this.GetDepositDetailsByOpportunityOperationCompleted, userState);
        }
        
        private void OnGetDepositDetailsByOpportunityOperationCompleted(object arg) {
            if ((this.GetDepositDetailsByOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositDetailsByOpportunityCompleted(this, new GetDepositDetailsByOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDepositDetailsByContractNo", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Deposit GetDepositDetailsByContractNo(string contractNo) {
            object[] results = this.Invoke("GetDepositDetailsByContractNo", new object[] {
                        contractNo});
            return ((Deposit)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositDetailsByContractNoAsync(string contractNo) {
            this.GetDepositDetailsByContractNoAsync(contractNo, null);
        }
        
        /// <remarks/>
        public void GetDepositDetailsByContractNoAsync(string contractNo, object userState) {
            if ((this.GetDepositDetailsByContractNoOperationCompleted == null)) {
                this.GetDepositDetailsByContractNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositDetailsByContractNoOperationCompleted);
            }
            this.InvokeAsync("GetDepositDetailsByContractNo", new object[] {
                        contractNo}, this.GetDepositDetailsByContractNoOperationCompleted, userState);
        }
        
        private void OnGetDepositDetailsByContractNoOperationCompleted(object arg) {
            if ((this.GetDepositDetailsByContractNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositDetailsByContractNoCompleted(this, new GetDepositDetailsByContractNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveDepositDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveDepositDetails(Deposit dp) {
            this.Invoke("SaveDepositDetails", new object[] {
                        dp});
        }
        
        /// <remarks/>
        public void SaveDepositDetailsAsync(Deposit dp) {
            this.SaveDepositDetailsAsync(dp, null);
        }
        
        /// <remarks/>
        public void SaveDepositDetailsAsync(Deposit dp, object userState) {
            if ((this.SaveDepositDetailsOperationCompleted == null)) {
                this.SaveDepositDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveDepositDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveDepositDetails", new object[] {
                        dp}, this.SaveDepositDetailsOperationCompleted, userState);
        }
        
        private void OnSaveDepositDetailsOperationCompleted(object arg) {
            if ((this.SaveDepositDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveDepositDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDepositDetailsForOpportunityInDataSet", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepositDetailsForOpportunityInDataSet(string opportunityid) {
            object[] results = this.Invoke("GetDepositDetailsForOpportunityInDataSet", new object[] {
                        opportunityid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositDetailsForOpportunityInDataSetAsync(string opportunityid) {
            this.GetDepositDetailsForOpportunityInDataSetAsync(opportunityid, null);
        }
        
        /// <remarks/>
        public void GetDepositDetailsForOpportunityInDataSetAsync(string opportunityid, object userState) {
            if ((this.GetDepositDetailsForOpportunityInDataSetOperationCompleted == null)) {
                this.GetDepositDetailsForOpportunityInDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositDetailsForOpportunityInDataSetOperationCompleted);
            }
            this.InvokeAsync("GetDepositDetailsForOpportunityInDataSet", new object[] {
                        opportunityid}, this.GetDepositDetailsForOpportunityInDataSetOperationCompleted, userState);
        }
        
        private void OnGetDepositDetailsForOpportunityInDataSetOperationCompleted(object arg) {
            if ((this.GetDepositDetailsForOpportunityInDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositDetailsForOpportunityInDataSetCompleted(this, new GetDepositDetailsForOpportunityInDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateSalesStatus", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSalesStatus(string opportunityid, System.DateTime AppointmentDate, System.DateTime WalkthroughDate, System.DateTime EstimatePresentedDate, System.DateTime DepositDate, System.DateTime EstimateAcceptDate, string ESAUserName) {
            object[] results = this.Invoke("UpdateSalesStatus", new object[] {
                        opportunityid,
                        AppointmentDate,
                        WalkthroughDate,
                        EstimatePresentedDate,
                        DepositDate,
                        EstimateAcceptDate,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSalesStatusAsync(string opportunityid, System.DateTime AppointmentDate, System.DateTime WalkthroughDate, System.DateTime EstimatePresentedDate, System.DateTime DepositDate, System.DateTime EstimateAcceptDate, string ESAUserName) {
            this.UpdateSalesStatusAsync(opportunityid, AppointmentDate, WalkthroughDate, EstimatePresentedDate, DepositDate, EstimateAcceptDate, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateSalesStatusAsync(string opportunityid, System.DateTime AppointmentDate, System.DateTime WalkthroughDate, System.DateTime EstimatePresentedDate, System.DateTime DepositDate, System.DateTime EstimateAcceptDate, string ESAUserName, object userState) {
            if ((this.UpdateSalesStatusOperationCompleted == null)) {
                this.UpdateSalesStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSalesStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateSalesStatus", new object[] {
                        opportunityid,
                        AppointmentDate,
                        WalkthroughDate,
                        EstimatePresentedDate,
                        DepositDate,
                        EstimateAcceptDate,
                        ESAUserName}, this.UpdateSalesStatusOperationCompleted, userState);
        }
        
        private void OnUpdateSalesStatusOperationCompleted(object arg) {
            if ((this.UpdateSalesStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSalesStatusCompleted(this, new UpdateSalesStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateSalesStatusComments", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSalesStatusComments(string opportunityid, string AppointmentComment, string WalkthroughComment, string EstimatePresentedComment, string DepositComment, string EstimateAcceptComment, string GeneralComments, string ESAUserName) {
            object[] results = this.Invoke("UpdateSalesStatusComments", new object[] {
                        opportunityid,
                        AppointmentComment,
                        WalkthroughComment,
                        EstimatePresentedComment,
                        DepositComment,
                        EstimateAcceptComment,
                        GeneralComments,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSalesStatusCommentsAsync(string opportunityid, string AppointmentComment, string WalkthroughComment, string EstimatePresentedComment, string DepositComment, string EstimateAcceptComment, string GeneralComments, string ESAUserName) {
            this.UpdateSalesStatusCommentsAsync(opportunityid, AppointmentComment, WalkthroughComment, EstimatePresentedComment, DepositComment, EstimateAcceptComment, GeneralComments, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateSalesStatusCommentsAsync(string opportunityid, string AppointmentComment, string WalkthroughComment, string EstimatePresentedComment, string DepositComment, string EstimateAcceptComment, string GeneralComments, string ESAUserName, object userState) {
            if ((this.UpdateSalesStatusCommentsOperationCompleted == null)) {
                this.UpdateSalesStatusCommentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSalesStatusCommentsOperationCompleted);
            }
            this.InvokeAsync("UpdateSalesStatusComments", new object[] {
                        opportunityid,
                        AppointmentComment,
                        WalkthroughComment,
                        EstimatePresentedComment,
                        DepositComment,
                        EstimateAcceptComment,
                        GeneralComments,
                        ESAUserName}, this.UpdateSalesStatusCommentsOperationCompleted, userState);
        }
        
        private void OnUpdateSalesStatusCommentsOperationCompleted(object arg) {
            if ((this.UpdateSalesStatusCommentsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSalesStatusCommentsCompleted(this, new UpdateSalesStatusCommentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetGeneralInfoSeminarInfoByOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRMLeadGenralSeminarInfo GetGeneralInfoSeminarInfoByOpportunity(string opportunityid, int type) {
            object[] results = this.Invoke("GetGeneralInfoSeminarInfoByOpportunity", new object[] {
                        opportunityid,
                        type});
            return ((CRMLeadGenralSeminarInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetGeneralInfoSeminarInfoByOpportunityAsync(string opportunityid, int type) {
            this.GetGeneralInfoSeminarInfoByOpportunityAsync(opportunityid, type, null);
        }
        
        /// <remarks/>
        public void GetGeneralInfoSeminarInfoByOpportunityAsync(string opportunityid, int type, object userState) {
            if ((this.GetGeneralInfoSeminarInfoByOpportunityOperationCompleted == null)) {
                this.GetGeneralInfoSeminarInfoByOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGeneralInfoSeminarInfoByOpportunityOperationCompleted);
            }
            this.InvokeAsync("GetGeneralInfoSeminarInfoByOpportunity", new object[] {
                        opportunityid,
                        type}, this.GetGeneralInfoSeminarInfoByOpportunityOperationCompleted, userState);
        }
        
        private void OnGetGeneralInfoSeminarInfoByOpportunityOperationCompleted(object arg) {
            if ((this.GetGeneralInfoSeminarInfoByOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGeneralInfoSeminarInfoByOpportunityCompleted(this, new GetGeneralInfoSeminarInfoByOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPrimaryContactByLead", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public CRMContact GetPrimaryContactByLead(string leadid) {
            object[] results = this.Invoke("GetPrimaryContactByLead", new object[] {
                        leadid});
            return ((CRMContact)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimaryContactByLeadAsync(string leadid) {
            this.GetPrimaryContactByLeadAsync(leadid, null);
        }
        
        /// <remarks/>
        public void GetPrimaryContactByLeadAsync(string leadid, object userState) {
            if ((this.GetPrimaryContactByLeadOperationCompleted == null)) {
                this.GetPrimaryContactByLeadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryContactByLeadOperationCompleted);
            }
            this.InvokeAsync("GetPrimaryContactByLead", new object[] {
                        leadid}, this.GetPrimaryContactByLeadOperationCompleted, userState);
        }
        
        private void OnGetPrimaryContactByLeadOperationCompleted(object arg) {
            if ((this.GetPrimaryContactByLeadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimaryContactByLeadCompleted(this, new GetPrimaryContactByLeadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPrimaryContactByLeadAsDataSet", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPrimaryContactByLeadAsDataSet(string leadid) {
            object[] results = this.Invoke("GetPrimaryContactByLeadAsDataSet", new object[] {
                        leadid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPrimaryContactByLeadAsDataSetAsync(string leadid) {
            this.GetPrimaryContactByLeadAsDataSetAsync(leadid, null);
        }
        
        /// <remarks/>
        public void GetPrimaryContactByLeadAsDataSetAsync(string leadid, object userState) {
            if ((this.GetPrimaryContactByLeadAsDataSetOperationCompleted == null)) {
                this.GetPrimaryContactByLeadAsDataSetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrimaryContactByLeadAsDataSetOperationCompleted);
            }
            this.InvokeAsync("GetPrimaryContactByLeadAsDataSet", new object[] {
                        leadid}, this.GetPrimaryContactByLeadAsDataSetOperationCompleted, userState);
        }
        
        private void OnGetPrimaryContactByLeadAsDataSetOperationCompleted(object arg) {
            if ((this.GetPrimaryContactByLeadAsDataSetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrimaryContactByLeadAsDataSetCompleted(this, new GetPrimaryContactByLeadAsDataSetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateFinanceConsultantForAnOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateFinanceConsultantForAnOpportunity(string opportunityid, string financeconsultantid, string ESAUserName) {
            object[] results = this.Invoke("UpdateFinanceConsultantForAnOpportunity", new object[] {
                        opportunityid,
                        financeconsultantid,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateFinanceConsultantForAnOpportunityAsync(string opportunityid, string financeconsultantid, string ESAUserName) {
            this.UpdateFinanceConsultantForAnOpportunityAsync(opportunityid, financeconsultantid, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateFinanceConsultantForAnOpportunityAsync(string opportunityid, string financeconsultantid, string ESAUserName, object userState) {
            if ((this.UpdateFinanceConsultantForAnOpportunityOperationCompleted == null)) {
                this.UpdateFinanceConsultantForAnOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFinanceConsultantForAnOpportunityOperationCompleted);
            }
            this.InvokeAsync("UpdateFinanceConsultantForAnOpportunity", new object[] {
                        opportunityid,
                        financeconsultantid,
                        ESAUserName}, this.UpdateFinanceConsultantForAnOpportunityOperationCompleted, userState);
        }
        
        private void OnUpdateFinanceConsultantForAnOpportunityOperationCompleted(object arg) {
            if ((this.UpdateFinanceConsultantForAnOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFinanceConsultantForAnOpportunityCompleted(this, new UpdateFinanceConsultantForAnOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/DeleteLead", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteLead(string leadid, string ESAUserName) {
            this.Invoke("DeleteLead", new object[] {
                        leadid,
                        ESAUserName});
        }
        
        /// <remarks/>
        public void DeleteLeadAsync(string leadid, string ESAUserName) {
            this.DeleteLeadAsync(leadid, ESAUserName, null);
        }
        
        /// <remarks/>
        public void DeleteLeadAsync(string leadid, string ESAUserName, object userState) {
            if ((this.DeleteLeadOperationCompleted == null)) {
                this.DeleteLeadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteLeadOperationCompleted);
            }
            this.InvokeAsync("DeleteLead", new object[] {
                        leadid,
                        ESAUserName}, this.DeleteLeadOperationCompleted, userState);
        }
        
        private void OnDeleteLeadOperationCompleted(object arg) {
            if ((this.DeleteLeadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteLeadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetUserListAsXML", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserListAsXML() {
            object[] results = this.Invoke("GetUserListAsXML", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsXMLAsync() {
            this.GetUserListAsXMLAsync(null);
        }
        
        /// <remarks/>
        public void GetUserListAsXMLAsync(object userState) {
            if ((this.GetUserListAsXMLOperationCompleted == null)) {
                this.GetUserListAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetUserListAsXML", new object[0], this.GetUserListAsXMLOperationCompleted, userState);
        }
        
        private void OnGetUserListAsXMLOperationCompleted(object arg) {
            if ((this.GetUserListAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListAsXMLCompleted(this, new GetUserListAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_CreateFolder", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sharepoint_CreateFolder(string foldername) {
            this.Invoke("Sharepoint_CreateFolder", new object[] {
                        foldername});
        }
        
        /// <remarks/>
        public void Sharepoint_CreateFolderAsync(string foldername) {
            this.Sharepoint_CreateFolderAsync(foldername, null);
        }
        
        /// <remarks/>
        public void Sharepoint_CreateFolderAsync(string foldername, object userState) {
            if ((this.Sharepoint_CreateFolderOperationCompleted == null)) {
                this.Sharepoint_CreateFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_CreateFolderOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_CreateFolder", new object[] {
                        foldername}, this.Sharepoint_CreateFolderOperationCompleted, userState);
        }
        
        private void OnSharepoint_CreateFolderOperationCompleted(object arg) {
            if ((this.Sharepoint_CreateFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_CreateFolderCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_UpdateFolderName", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sharepoint_UpdateFolderName(string docid, string newname, string oldname) {
            this.Invoke("Sharepoint_UpdateFolderName", new object[] {
                        docid,
                        newname,
                        oldname});
        }
        
        /// <remarks/>
        public void Sharepoint_UpdateFolderNameAsync(string docid, string newname, string oldname) {
            this.Sharepoint_UpdateFolderNameAsync(docid, newname, oldname, null);
        }
        
        /// <remarks/>
        public void Sharepoint_UpdateFolderNameAsync(string docid, string newname, string oldname, object userState) {
            if ((this.Sharepoint_UpdateFolderNameOperationCompleted == null)) {
                this.Sharepoint_UpdateFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_UpdateFolderNameOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_UpdateFolderName", new object[] {
                        docid,
                        newname,
                        oldname}, this.Sharepoint_UpdateFolderNameOperationCompleted, userState);
        }
        
        private void OnSharepoint_UpdateFolderNameOperationCompleted(object arg) {
            if ((this.Sharepoint_UpdateFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_UpdateFolderNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_GetSharepointFolderInfoByOpportunityID", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Sharepoint_GetSharepointFolderInfoByOpportunityID(string opportunityid, out string oldname) {
            object[] results = this.Invoke("Sharepoint_GetSharepointFolderInfoByOpportunityID", new object[] {
                        opportunityid});
            oldname = ((string)(results[1]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Sharepoint_GetSharepointFolderInfoByOpportunityIDAsync(string opportunityid) {
            this.Sharepoint_GetSharepointFolderInfoByOpportunityIDAsync(opportunityid, null);
        }
        
        /// <remarks/>
        public void Sharepoint_GetSharepointFolderInfoByOpportunityIDAsync(string opportunityid, object userState) {
            if ((this.Sharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted == null)) {
                this.Sharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_GetSharepointFolderInfoByOpportunityID", new object[] {
                        opportunityid}, this.Sharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted, userState);
        }
        
        private void OnSharepoint_GetSharepointFolderInfoByOpportunityIDOperationCompleted(object arg) {
            if ((this.Sharepoint_GetSharepointFolderInfoByOpportunityIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_GetSharepointFolderInfoByOpportunityIDCompleted(this, new Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_GetSharepointFileListInFolder", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Sharepoint_GetSharepointFileListInFolder(string opportunityid, string contractno) {
            object[] results = this.Invoke("Sharepoint_GetSharepointFileListInFolder", new object[] {
                        opportunityid,
                        contractno});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Sharepoint_GetSharepointFileListInFolderAsync(string opportunityid, string contractno) {
            this.Sharepoint_GetSharepointFileListInFolderAsync(opportunityid, contractno, null);
        }
        
        /// <remarks/>
        public void Sharepoint_GetSharepointFileListInFolderAsync(string opportunityid, string contractno, object userState) {
            if ((this.Sharepoint_GetSharepointFileListInFolderOperationCompleted == null)) {
                this.Sharepoint_GetSharepointFileListInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_GetSharepointFileListInFolderOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_GetSharepointFileListInFolder", new object[] {
                        opportunityid,
                        contractno}, this.Sharepoint_GetSharepointFileListInFolderOperationCompleted, userState);
        }
        
        private void OnSharepoint_GetSharepointFileListInFolderOperationCompleted(object arg) {
            if ((this.Sharepoint_GetSharepointFileListInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_GetSharepointFileListInFolderCompleted(this, new Sharepoint_GetSharepointFileListInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_GetFolderFileList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable Sharepoint_GetFolderFileList(string opportunityid, string oldname, string category, string documenttype, out int listcount) {
            object[] results = this.Invoke("Sharepoint_GetFolderFileList", new object[] {
                        opportunityid,
                        oldname,
                        category,
                        documenttype});
            listcount = ((int)(results[1]));
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void Sharepoint_GetFolderFileListAsync(string opportunityid, string oldname, string category, string documenttype) {
            this.Sharepoint_GetFolderFileListAsync(opportunityid, oldname, category, documenttype, null);
        }
        
        /// <remarks/>
        public void Sharepoint_GetFolderFileListAsync(string opportunityid, string oldname, string category, string documenttype, object userState) {
            if ((this.Sharepoint_GetFolderFileListOperationCompleted == null)) {
                this.Sharepoint_GetFolderFileListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_GetFolderFileListOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_GetFolderFileList", new object[] {
                        opportunityid,
                        oldname,
                        category,
                        documenttype}, this.Sharepoint_GetFolderFileListOperationCompleted, userState);
        }
        
        private void OnSharepoint_GetFolderFileListOperationCompleted(object arg) {
            if ((this.Sharepoint_GetFolderFileListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_GetFolderFileListCompleted(this, new Sharepoint_GetFolderFileListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_UploadAttachement", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sharepoint_UploadAttachement(string copySource, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, string paperworkgroup) {
            this.Invoke("Sharepoint_UploadAttachement", new object[] {
                        copySource,
                        contents,
                        oldname,
                        opportunityid,
                        doccategory,
                        doctype,
                        paperworkgroup});
        }
        
        /// <remarks/>
        public void Sharepoint_UploadAttachementAsync(string copySource, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, string paperworkgroup) {
            this.Sharepoint_UploadAttachementAsync(copySource, contents, oldname, opportunityid, doccategory, doctype, paperworkgroup, null);
        }
        
        /// <remarks/>
        public void Sharepoint_UploadAttachementAsync(string copySource, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, string paperworkgroup, object userState) {
            if ((this.Sharepoint_UploadAttachementOperationCompleted == null)) {
                this.Sharepoint_UploadAttachementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_UploadAttachementOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_UploadAttachement", new object[] {
                        copySource,
                        contents,
                        oldname,
                        opportunityid,
                        doccategory,
                        doctype,
                        paperworkgroup}, this.Sharepoint_UploadAttachementOperationCompleted, userState);
        }
        
        private void OnSharepoint_UploadAttachementOperationCompleted(object arg) {
            if ((this.Sharepoint_UploadAttachementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_UploadAttachementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Sharepoint_RemoveFileFromList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Sharepoint_RemoveFileFromList(string opprotunityid, string oldname, string fileid, string filename) {
            this.Invoke("Sharepoint_RemoveFileFromList", new object[] {
                        opprotunityid,
                        oldname,
                        fileid,
                        filename});
        }
        
        /// <remarks/>
        public void Sharepoint_RemoveFileFromListAsync(string opprotunityid, string oldname, string fileid, string filename) {
            this.Sharepoint_RemoveFileFromListAsync(opprotunityid, oldname, fileid, filename, null);
        }
        
        /// <remarks/>
        public void Sharepoint_RemoveFileFromListAsync(string opprotunityid, string oldname, string fileid, string filename, object userState) {
            if ((this.Sharepoint_RemoveFileFromListOperationCompleted == null)) {
                this.Sharepoint_RemoveFileFromListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSharepoint_RemoveFileFromListOperationCompleted);
            }
            this.InvokeAsync("Sharepoint_RemoveFileFromList", new object[] {
                        opprotunityid,
                        oldname,
                        fileid,
                        filename}, this.Sharepoint_RemoveFileFromListOperationCompleted, userState);
        }
        
        private void OnSharepoint_RemoveFileFromListOperationCompleted(object arg) {
            if ((this.Sharepoint_RemoveFileFromListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Sharepoint_RemoveFileFromListCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContractCustomerDetailsByContractNumber", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContractCustomerDetailsByContractNumber(string contractnumber, string company) {
            object[] results = this.Invoke("GetContractCustomerDetailsByContractNumber", new object[] {
                        contractnumber,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractCustomerDetailsByContractNumberAsync(string contractnumber, string company) {
            this.GetContractCustomerDetailsByContractNumberAsync(contractnumber, company, null);
        }
        
        /// <remarks/>
        public void GetContractCustomerDetailsByContractNumberAsync(string contractnumber, string company, object userState) {
            if ((this.GetContractCustomerDetailsByContractNumberOperationCompleted == null)) {
                this.GetContractCustomerDetailsByContractNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractCustomerDetailsByContractNumberOperationCompleted);
            }
            this.InvokeAsync("GetContractCustomerDetailsByContractNumber", new object[] {
                        contractnumber,
                        company}, this.GetContractCustomerDetailsByContractNumberOperationCompleted, userState);
        }
        
        private void OnGetContractCustomerDetailsByContractNumberOperationCompleted(object arg) {
            if ((this.GetContractCustomerDetailsByContractNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractCustomerDetailsByContractNumberCompleted(this, new GetContractCustomerDetailsByContractNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetBCContactsForCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBCContactsForCustomer(string customercode, string company) {
            object[] results = this.Invoke("GetBCContactsForCustomer", new object[] {
                        customercode,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBCContactsForCustomerAsync(string customercode, string company) {
            this.GetBCContactsForCustomerAsync(customercode, company, null);
        }
        
        /// <remarks/>
        public void GetBCContactsForCustomerAsync(string customercode, string company, object userState) {
            if ((this.GetBCContactsForCustomerOperationCompleted == null)) {
                this.GetBCContactsForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBCContactsForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetBCContactsForCustomer", new object[] {
                        customercode,
                        company}, this.GetBCContactsForCustomerOperationCompleted, userState);
        }
        
        private void OnGetBCContactsForCustomerOperationCompleted(object arg) {
            if ((this.GetBCContactsForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBCContactsForCustomerCompleted(this, new GetBCContactsForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/Reconnect", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Reconnect(string company) {
            this.Invoke("Reconnect", new object[] {
                        company});
        }
        
        /// <remarks/>
        public void ReconnectAsync(string company) {
            this.ReconnectAsync(company, null);
        }
        
        /// <remarks/>
        public void ReconnectAsync(string company, object userState) {
            if ((this.ReconnectOperationCompleted == null)) {
                this.ReconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReconnectOperationCompleted);
            }
            this.InvokeAsync("Reconnect", new object[] {
                        company}, this.ReconnectOperationCompleted, userState);
        }
        
        private void OnReconnectOperationCompleted(object arg) {
            if ((this.ReconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/TestWebService", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string TestWebService(string testString) {
            object[] results = this.Invoke("TestWebService", new object[] {
                        testString});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void TestWebServiceAsync(string testString) {
            this.TestWebServiceAsync(testString, null);
        }
        
        /// <remarks/>
        public void TestWebServiceAsync(string testString, object userState) {
            if ((this.TestWebServiceOperationCompleted == null)) {
                this.TestWebServiceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestWebServiceOperationCompleted);
            }
            this.InvokeAsync("TestWebService", new object[] {
                        testString}, this.TestWebServiceOperationCompleted, userState);
        }
        
        private void OnTestWebServiceOperationCompleted(object arg) {
            if ((this.TestWebServiceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestWebServiceCompleted(this, new TestWebServiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/TestBCLink", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TestBCLink() {
            object[] results = this.Invoke("TestBCLink", new object[0]);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TestBCLinkAsync() {
            this.TestBCLinkAsync(null);
        }
        
        /// <remarks/>
        public void TestBCLinkAsync(object userState) {
            if ((this.TestBCLinkOperationCompleted == null)) {
                this.TestBCLinkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestBCLinkOperationCompleted);
            }
            this.InvokeAsync("TestBCLink", new object[0], this.TestBCLinkOperationCompleted, userState);
        }
        
        private void OnTestBCLinkOperationCompleted(object arg) {
            if ((this.TestBCLinkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestBCLinkCompleted(this, new TestBCLinkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetUserList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserList(string displayName, string company) {
            object[] results = this.Invoke("GetUserList", new object[] {
                        displayName,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserListAsync(string displayName, string company) {
            this.GetUserListAsync(displayName, company, null);
        }
        
        /// <remarks/>
        public void GetUserListAsync(string displayName, string company, object userState) {
            if ((this.GetUserListOperationCompleted == null)) {
                this.GetUserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserListOperationCompleted);
            }
            this.InvokeAsync("GetUserList", new object[] {
                        displayName,
                        company}, this.GetUserListOperationCompleted, userState);
        }
        
        private void OnGetUserListOperationCompleted(object arg) {
            if ((this.GetUserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCompanyList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCompanyList() {
            object[] results = this.Invoke("GetCompanyList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyListAsync() {
            this.GetCompanyListAsync(null);
        }
        
        /// <remarks/>
        public void GetCompanyListAsync(object userState) {
            if ((this.GetCompanyListOperationCompleted == null)) {
                this.GetCompanyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyListOperationCompleted);
            }
            this.InvokeAsync("GetCompanyList", new object[0], this.GetCompanyListOperationCompleted, userState);
        }
        
        private void OnGetCompanyListOperationCompleted(object arg) {
            if ((this.GetCompanyListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyListCompleted(this, new GetCompanyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCompany", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCompany() {
            object[] results = this.Invoke("GetCompany", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCompanyAsync() {
            this.GetCompanyAsync(null);
        }
        
        /// <remarks/>
        public void GetCompanyAsync(object userState) {
            if ((this.GetCompanyOperationCompleted == null)) {
                this.GetCompanyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCompanyOperationCompleted);
            }
            this.InvokeAsync("GetCompany", new object[0], this.GetCompanyOperationCompleted, userState);
        }
        
        private void OnGetCompanyOperationCompleted(object arg) {
            if ((this.GetCompanyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCompanyCompleted(this, new GetCompanyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSalesCentreList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSalesCentreList(string company) {
            object[] results = this.Invoke("GetSalesCentreList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSalesCentreListAsync(string company) {
            this.GetSalesCentreListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetSalesCentreListAsync(string company, object userState) {
            if ((this.GetSalesCentreListOperationCompleted == null)) {
                this.GetSalesCentreListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSalesCentreListOperationCompleted);
            }
            this.InvokeAsync("GetSalesCentreList", new object[] {
                        company}, this.GetSalesCentreListOperationCompleted, userState);
        }
        
        private void OnGetSalesCentreListOperationCompleted(object arg) {
            if ((this.GetSalesCentreListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSalesCentreListCompleted(this, new GetSalesCentreListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetEventDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEventDetailsForContract(string company, string contractnumber, string eventcode) {
            object[] results = this.Invoke("GetEventDetailsForContract", new object[] {
                        company,
                        contractnumber,
                        eventcode});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEventDetailsForContractAsync(string company, string contractnumber, string eventcode) {
            this.GetEventDetailsForContractAsync(company, contractnumber, eventcode, null);
        }
        
        /// <remarks/>
        public void GetEventDetailsForContractAsync(string company, string contractnumber, string eventcode, object userState) {
            if ((this.GetEventDetailsForContractOperationCompleted == null)) {
                this.GetEventDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEventDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("GetEventDetailsForContract", new object[] {
                        company,
                        contractnumber,
                        eventcode}, this.GetEventDetailsForContractOperationCompleted, userState);
        }
        
        private void OnGetEventDetailsForContractOperationCompleted(object arg) {
            if ((this.GetEventDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEventDetailsForContractCompleted(this, new GetEventDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPromotionList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPromotionList(string company) {
            object[] results = this.Invoke("GetPromotionList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromotionListAsync(string company) {
            this.GetPromotionListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetPromotionListAsync(string company, object userState) {
            if ((this.GetPromotionListOperationCompleted == null)) {
                this.GetPromotionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromotionListOperationCompleted);
            }
            this.InvokeAsync("GetPromotionList", new object[] {
                        company}, this.GetPromotionListOperationCompleted, userState);
        }
        
        private void OnGetPromotionListOperationCompleted(object arg) {
            if ((this.GetPromotionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromotionListCompleted(this, new GetPromotionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPromotionCodeForAContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPromotionCodeForAContract(string contractNo, string company) {
            object[] results = this.Invoke("GetPromotionCodeForAContract", new object[] {
                        contractNo,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromotionCodeForAContractAsync(string contractNo, string company) {
            this.GetPromotionCodeForAContractAsync(contractNo, company, null);
        }
        
        /// <remarks/>
        public void GetPromotionCodeForAContractAsync(string contractNo, string company, object userState) {
            if ((this.GetPromotionCodeForAContractOperationCompleted == null)) {
                this.GetPromotionCodeForAContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromotionCodeForAContractOperationCompleted);
            }
            this.InvokeAsync("GetPromotionCodeForAContract", new object[] {
                        contractNo,
                        company}, this.GetPromotionCodeForAContractOperationCompleted, userState);
        }
        
        private void OnGetPromotionCodeForAContractOperationCompleted(object arg) {
            if ((this.GetPromotionCodeForAContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromotionCodeForAContractCompleted(this, new GetPromotionCodeForAContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSaleTypeList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSaleTypeList(string company) {
            object[] results = this.Invoke("GetSaleTypeList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSaleTypeListAsync(string company) {
            this.GetSaleTypeListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetSaleTypeListAsync(string company, object userState) {
            if ((this.GetSaleTypeListOperationCompleted == null)) {
                this.GetSaleTypeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaleTypeListOperationCompleted);
            }
            this.InvokeAsync("GetSaleTypeList", new object[] {
                        company}, this.GetSaleTypeListOperationCompleted, userState);
        }
        
        private void OnGetSaleTypeListOperationCompleted(object arg) {
            if ((this.GetSaleTypeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaleTypeListCompleted(this, new GetSaleTypeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCouncilList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCouncilList(string company) {
            object[] results = this.Invoke("GetCouncilList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouncilListAsync(string company) {
            this.GetCouncilListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetCouncilListAsync(string company, object userState) {
            if ((this.GetCouncilListOperationCompleted == null)) {
                this.GetCouncilListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouncilListOperationCompleted);
            }
            this.InvokeAsync("GetCouncilList", new object[] {
                        company}, this.GetCouncilListOperationCompleted, userState);
        }
        
        private void OnGetCouncilListOperationCompleted(object arg) {
            if ((this.GetCouncilListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouncilListCompleted(this, new GetCouncilListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetLandDeveloperList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLandDeveloperList(string company) {
            object[] results = this.Invoke("GetLandDeveloperList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLandDeveloperListAsync(string company) {
            this.GetLandDeveloperListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetLandDeveloperListAsync(string company, object userState) {
            if ((this.GetLandDeveloperListOperationCompleted == null)) {
                this.GetLandDeveloperListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLandDeveloperListOperationCompleted);
            }
            this.InvokeAsync("GetLandDeveloperList", new object[] {
                        company}, this.GetLandDeveloperListOperationCompleted, userState);
        }
        
        private void OnGetLandDeveloperListOperationCompleted(object arg) {
            if ((this.GetLandDeveloperListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLandDeveloperListCompleted(this, new GetLandDeveloperListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetLendingAuthorityList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetLendingAuthorityList(string company) {
            object[] results = this.Invoke("GetLendingAuthorityList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetLendingAuthorityListAsync(string company) {
            this.GetLendingAuthorityListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetLendingAuthorityListAsync(string company, object userState) {
            if ((this.GetLendingAuthorityListOperationCompleted == null)) {
                this.GetLendingAuthorityListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLendingAuthorityListOperationCompleted);
            }
            this.InvokeAsync("GetLendingAuthorityList", new object[] {
                        company}, this.GetLendingAuthorityListOperationCompleted, userState);
        }
        
        private void OnGetLendingAuthorityListOperationCompleted(object arg) {
            if ((this.GetLendingAuthorityListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLendingAuthorityListCompleted(this, new GetLendingAuthorityListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSolicitorList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSolicitorList(string company) {
            object[] results = this.Invoke("GetSolicitorList", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolicitorListAsync(string company) {
            this.GetSolicitorListAsync(company, null);
        }
        
        /// <remarks/>
        public void GetSolicitorListAsync(string company, object userState) {
            if ((this.GetSolicitorListOperationCompleted == null)) {
                this.GetSolicitorListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolicitorListOperationCompleted);
            }
            this.InvokeAsync("GetSolicitorList", new object[] {
                        company}, this.GetSolicitorListOperationCompleted, userState);
        }
        
        private void OnGetSolicitorListOperationCompleted(object arg) {
            if ((this.GetSolicitorListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolicitorListCompleted(this, new GetSolicitorListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSolicitorDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSolicitorDetails(string ContractID, string company) {
            object[] results = this.Invoke("GetSolicitorDetails", new object[] {
                        ContractID,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsAsync(string ContractID, string company) {
            this.GetSolicitorDetailsAsync(ContractID, company, null);
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsAsync(string ContractID, string company, object userState) {
            if ((this.GetSolicitorDetailsOperationCompleted == null)) {
                this.GetSolicitorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolicitorDetailsOperationCompleted);
            }
            this.InvokeAsync("GetSolicitorDetails", new object[] {
                        ContractID,
                        company}, this.GetSolicitorDetailsOperationCompleted, userState);
        }
        
        private void OnGetSolicitorDetailsOperationCompleted(object arg) {
            if ((this.GetSolicitorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolicitorDetailsCompleted(this, new GetSolicitorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSolicitorDetailsFromSQS", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSolicitorDetailsFromSQS(string opportunityid, string company) {
            object[] results = this.Invoke("GetSolicitorDetailsFromSQS", new object[] {
                        opportunityid,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsFromSQSAsync(string opportunityid, string company) {
            this.GetSolicitorDetailsFromSQSAsync(opportunityid, company, null);
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsFromSQSAsync(string opportunityid, string company, object userState) {
            if ((this.GetSolicitorDetailsFromSQSOperationCompleted == null)) {
                this.GetSolicitorDetailsFromSQSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolicitorDetailsFromSQSOperationCompleted);
            }
            this.InvokeAsync("GetSolicitorDetailsFromSQS", new object[] {
                        opportunityid,
                        company}, this.GetSolicitorDetailsFromSQSOperationCompleted, userState);
        }
        
        private void OnGetSolicitorDetailsFromSQSOperationCompleted(object arg) {
            if ((this.GetSolicitorDetailsFromSQSCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolicitorDetailsFromSQSCompleted(this, new GetSolicitorDetailsFromSQSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveSolicitorDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSolicitorDetails(Solicitor aSolicitor) {
            this.Invoke("SaveSolicitorDetails", new object[] {
                        aSolicitor});
        }
        
        /// <remarks/>
        public void SaveSolicitorDetailsAsync(Solicitor aSolicitor) {
            this.SaveSolicitorDetailsAsync(aSolicitor, null);
        }
        
        /// <remarks/>
        public void SaveSolicitorDetailsAsync(Solicitor aSolicitor, object userState) {
            if ((this.SaveSolicitorDetailsOperationCompleted == null)) {
                this.SaveSolicitorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSolicitorDetailsOperationCompleted);
            }
            this.InvokeAsync("SaveSolicitorDetails", new object[] {
                        aSolicitor}, this.SaveSolicitorDetailsOperationCompleted, userState);
        }
        
        private void OnSaveSolicitorDetailsOperationCompleted(object arg) {
            if ((this.SaveSolicitorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSolicitorDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSolicitorDetailsByOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Solicitor GetSolicitorDetailsByOpportunity(string opportunityid) {
            object[] results = this.Invoke("GetSolicitorDetailsByOpportunity", new object[] {
                        opportunityid});
            return ((Solicitor)(results[0]));
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsByOpportunityAsync(string opportunityid) {
            this.GetSolicitorDetailsByOpportunityAsync(opportunityid, null);
        }
        
        /// <remarks/>
        public void GetSolicitorDetailsByOpportunityAsync(string opportunityid, object userState) {
            if ((this.GetSolicitorDetailsByOpportunityOperationCompleted == null)) {
                this.GetSolicitorDetailsByOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSolicitorDetailsByOpportunityOperationCompleted);
            }
            this.InvokeAsync("GetSolicitorDetailsByOpportunity", new object[] {
                        opportunityid}, this.GetSolicitorDetailsByOpportunityOperationCompleted, userState);
        }
        
        private void OnGetSolicitorDetailsByOpportunityOperationCompleted(object arg) {
            if ((this.GetSolicitorDetailsByOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSolicitorDetailsByOpportunityCompleted(this, new GetSolicitorDetailsByOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContactStates", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactStates() {
            object[] results = this.Invoke("GetContactStates", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactStatesAsync() {
            this.GetContactStatesAsync(null);
        }
        
        /// <remarks/>
        public void GetContactStatesAsync(object userState) {
            if ((this.GetContactStatesOperationCompleted == null)) {
                this.GetContactStatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactStatesOperationCompleted);
            }
            this.InvokeAsync("GetContactStates", new object[0], this.GetContactStatesOperationCompleted, userState);
        }
        
        private void OnGetContactStatesOperationCompleted(object arg) {
            if ((this.GetContactStatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactStatesCompleted(this, new GetContactStatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContactTitles", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactTitles() {
            object[] results = this.Invoke("GetContactTitles", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactTitlesAsync() {
            this.GetContactTitlesAsync(null);
        }
        
        /// <remarks/>
        public void GetContactTitlesAsync(object userState) {
            if ((this.GetContactTitlesOperationCompleted == null)) {
                this.GetContactTitlesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactTitlesOperationCompleted);
            }
            this.InvokeAsync("GetContactTitles", new object[0], this.GetContactTitlesOperationCompleted, userState);
        }
        
        private void OnGetContactTitlesOperationCompleted(object arg) {
            if ((this.GetContactTitlesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactTitlesCompleted(this, new GetContactTitlesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCustomerListForUserSortPage", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerListForUserSortPage(int pageSize, int pageNumber, string sortColumn, string sortOrder, ref int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetCustomerListForUserSortPage", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        sCustomerType,
                        bc,
                        company});
            totalRows = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPageAsync(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company) {
            this.GetCustomerListForUserSortPageAsync(pageSize, pageNumber, sortColumn, sortOrder, totalRows, sCustomerName, sCustomerNumber, sCustomerType, bc, company, null);
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPageAsync(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company, object userState) {
            if ((this.GetCustomerListForUserSortPageOperationCompleted == null)) {
                this.GetCustomerListForUserSortPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListForUserSortPageOperationCompleted);
            }
            this.InvokeAsync("GetCustomerListForUserSortPage", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        sCustomerType,
                        bc,
                        company}, this.GetCustomerListForUserSortPageOperationCompleted, userState);
        }
        
        private void OnGetCustomerListForUserSortPageOperationCompleted(object arg) {
            if ((this.GetCustomerListForUserSortPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListForUserSortPageCompleted(this, new GetCustomerListForUserSortPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCustomerListSortPage", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerListSortPage(int pageSize, int pageNumber, string sortColumn, string sortOrder, ref int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetCustomerListSortPage", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        sCustomerType,
                        bc,
                        company});
            totalRows = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListSortPageAsync(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company) {
            this.GetCustomerListSortPageAsync(pageSize, pageNumber, sortColumn, sortOrder, totalRows, sCustomerName, sCustomerNumber, sCustomerType, bc, company, null);
        }
        
        /// <remarks/>
        public void GetCustomerListSortPageAsync(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, string sCustomerType, BCCredentials bc, string company, object userState) {
            if ((this.GetCustomerListSortPageOperationCompleted == null)) {
                this.GetCustomerListSortPageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListSortPageOperationCompleted);
            }
            this.InvokeAsync("GetCustomerListSortPage", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        sCustomerType,
                        bc,
                        company}, this.GetCustomerListSortPageOperationCompleted, userState);
        }
        
        private void OnGetCustomerListSortPageOperationCompleted(object arg) {
            if ((this.GetCustomerListSortPageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListSortPageCompleted(this, new GetCustomerListSortPageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCustomerListForUserSortPage2", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerListForUserSortPage2(int pageSize, int pageNumber, string sortColumn, string sortOrder, ref int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetCustomerListForUserSortPage2", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        bc,
                        company});
            totalRows = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPage2Async(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company) {
            this.GetCustomerListForUserSortPage2Async(pageSize, pageNumber, sortColumn, sortOrder, totalRows, sCustomerName, sCustomerNumber, bc, company, null);
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPage2Async(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company, object userState) {
            if ((this.GetCustomerListForUserSortPage2OperationCompleted == null)) {
                this.GetCustomerListForUserSortPage2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListForUserSortPage2OperationCompleted);
            }
            this.InvokeAsync("GetCustomerListForUserSortPage2", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        bc,
                        company}, this.GetCustomerListForUserSortPage2OperationCompleted, userState);
        }
        
        private void OnGetCustomerListForUserSortPage2OperationCompleted(object arg) {
            if ((this.GetCustomerListForUserSortPage2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListForUserSortPage2Completed(this, new GetCustomerListForUserSortPage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCustomerListSortPage2", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerListSortPage2(int pageSize, int pageNumber, string sortColumn, string sortOrder, ref int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetCustomerListSortPage2", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        bc,
                        company});
            totalRows = ((int)(results[1]));
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListSortPage2Async(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company) {
            this.GetCustomerListSortPage2Async(pageSize, pageNumber, sortColumn, sortOrder, totalRows, sCustomerName, sCustomerNumber, bc, company, null);
        }
        
        /// <remarks/>
        public void GetCustomerListSortPage2Async(int pageSize, int pageNumber, string sortColumn, string sortOrder, int totalRows, string sCustomerName, string sCustomerNumber, BCCredentials bc, string company, object userState) {
            if ((this.GetCustomerListSortPage2OperationCompleted == null)) {
                this.GetCustomerListSortPage2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListSortPage2OperationCompleted);
            }
            this.InvokeAsync("GetCustomerListSortPage2", new object[] {
                        pageSize,
                        pageNumber,
                        sortColumn,
                        sortOrder,
                        totalRows,
                        sCustomerName,
                        sCustomerNumber,
                        bc,
                        company}, this.GetCustomerListSortPage2OperationCompleted, userState);
        }
        
        private void OnGetCustomerListSortPage2OperationCompleted(object arg) {
            if ((this.GetCustomerListSortPage2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListSortPage2Completed(this, new GetCustomerListSortPage2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContactListForCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactListForCustomer(string sCustomerNumber, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetContactListForCustomer", new object[] {
                        sCustomerNumber,
                        bc,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListForCustomerAsync(string sCustomerNumber, BCCredentials bc, string company) {
            this.GetContactListForCustomerAsync(sCustomerNumber, bc, company, null);
        }
        
        /// <remarks/>
        public void GetContactListForCustomerAsync(string sCustomerNumber, BCCredentials bc, string company, object userState) {
            if ((this.GetContactListForCustomerOperationCompleted == null)) {
                this.GetContactListForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetContactListForCustomer", new object[] {
                        sCustomerNumber,
                        bc,
                        company}, this.GetContactListForCustomerOperationCompleted, userState);
        }
        
        private void OnGetContactListForCustomerOperationCompleted(object arg) {
            if ((this.GetContactListForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListForCustomerCompleted(this, new GetContactListForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetActiveContactListForCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetActiveContactListForCustomer(string sCustomerNumber, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetActiveContactListForCustomer", new object[] {
                        sCustomerNumber,
                        bc,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetActiveContactListForCustomerAsync(string sCustomerNumber, BCCredentials bc, string company) {
            this.GetActiveContactListForCustomerAsync(sCustomerNumber, bc, company, null);
        }
        
        /// <remarks/>
        public void GetActiveContactListForCustomerAsync(string sCustomerNumber, BCCredentials bc, string company, object userState) {
            if ((this.GetActiveContactListForCustomerOperationCompleted == null)) {
                this.GetActiveContactListForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetActiveContactListForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetActiveContactListForCustomer", new object[] {
                        sCustomerNumber,
                        bc,
                        company}, this.GetActiveContactListForCustomerOperationCompleted, userState);
        }
        
        private void OnGetActiveContactListForCustomerOperationCompleted(object arg) {
            if ((this.GetActiveContactListForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetActiveContactListForCustomerCompleted(this, new GetActiveContactListForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContactListForCustomerWithSequence", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactListForCustomerWithSequence([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, int sequence, BCCredentials bc, string company) {
            object[] results = this.Invoke("GetContactListForCustomerWithSequence", new object[] {
                        Customer,
                        sequence,
                        bc,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListForCustomerWithSequenceAsync(Customer Customer, int sequence, BCCredentials bc, string company) {
            this.GetContactListForCustomerWithSequenceAsync(Customer, sequence, bc, company, null);
        }
        
        /// <remarks/>
        public void GetContactListForCustomerWithSequenceAsync(Customer Customer, int sequence, BCCredentials bc, string company, object userState) {
            if ((this.GetContactListForCustomerWithSequenceOperationCompleted == null)) {
                this.GetContactListForCustomerWithSequenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListForCustomerWithSequenceOperationCompleted);
            }
            this.InvokeAsync("GetContactListForCustomerWithSequence", new object[] {
                        Customer,
                        sequence,
                        bc,
                        company}, this.GetContactListForCustomerWithSequenceOperationCompleted, userState);
        }
        
        private void OnGetContactListForCustomerWithSequenceOperationCompleted(object arg) {
            if ((this.GetContactListForCustomerWithSequenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListForCustomerWithSequenceCompleted(this, new GetContactListForCustomerWithSequenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, BCCredentials bc, string company) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        Customer,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer Customer, BCCredentials bc, string company) {
            this.CreateCustomerAsync(Customer, bc, company, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(Customer Customer, BCCredentials bc, string company, object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        Customer,
                        bc,
                        company}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateCustomerWithKey", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateCustomerWithKey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, BCCredentials bc, string company, string key) {
            object[] results = this.Invoke("CreateCustomerWithKey", new object[] {
                        Customer,
                        bc,
                        company,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerWithKeyAsync(Customer Customer, BCCredentials bc, string company, string key) {
            this.CreateCustomerWithKeyAsync(Customer, bc, company, key, null);
        }
        
        /// <remarks/>
        public void CreateCustomerWithKeyAsync(Customer Customer, BCCredentials bc, string company, string key, object userState) {
            if ((this.CreateCustomerWithKeyOperationCompleted == null)) {
                this.CreateCustomerWithKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerWithKeyOperationCompleted);
            }
            this.InvokeAsync("CreateCustomerWithKey", new object[] {
                        Customer,
                        bc,
                        company,
                        key}, this.CreateCustomerWithKeyOperationCompleted, userState);
        }
        
        private void OnCreateCustomerWithKeyOperationCompleted(object arg) {
            if ((this.CreateCustomerWithKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerWithKeyCompleted(this, new CreateCustomerWithKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateContact", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateContact([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, BCCredentials bc, string company) {
            object[] results = this.Invoke("CreateContact", new object[] {
                        Customer,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContactAsync(Customer Customer, BCCredentials bc, string company) {
            this.CreateContactAsync(Customer, bc, company, null);
        }
        
        /// <remarks/>
        public void CreateContactAsync(Customer Customer, BCCredentials bc, string company, object userState) {
            if ((this.CreateContactOperationCompleted == null)) {
                this.CreateContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContactOperationCompleted);
            }
            this.InvokeAsync("CreateContact", new object[] {
                        Customer,
                        bc,
                        company}, this.CreateContactOperationCompleted, userState);
        }
        
        private void OnCreateContactOperationCompleted(object arg) {
            if ((this.CreateContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContactCompleted(this, new CreateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateContact", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContact([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, BCCredentials bc, string company) {
            object[] results = this.Invoke("UpdateContact", new object[] {
                        Customer,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContactAsync(Customer Customer, BCCredentials bc, string company) {
            this.UpdateContactAsync(Customer, bc, company, null);
        }
        
        /// <remarks/>
        public void UpdateContactAsync(Customer Customer, BCCredentials bc, string company, object userState) {
            if ((this.UpdateContactOperationCompleted == null)) {
                this.UpdateContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContactOperationCompleted);
            }
            this.InvokeAsync("UpdateContact", new object[] {
                        Customer,
                        bc,
                        company}, this.UpdateContactOperationCompleted, userState);
        }
        
        private void OnUpdateContactOperationCompleted(object arg) {
            if ((this.UpdateContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContactCompleted(this, new UpdateContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/DeleteContactFromCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteContactFromCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Customer Customer, BCCredentials bc, string company) {
            this.Invoke("DeleteContactFromCustomer", new object[] {
                        Customer,
                        bc,
                        company});
        }
        
        /// <remarks/>
        public void DeleteContactFromCustomerAsync(Customer Customer, BCCredentials bc, string company) {
            this.DeleteContactFromCustomerAsync(Customer, bc, company, null);
        }
        
        /// <remarks/>
        public void DeleteContactFromCustomerAsync(Customer Customer, BCCredentials bc, string company, object userState) {
            if ((this.DeleteContactFromCustomerOperationCompleted == null)) {
                this.DeleteContactFromCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteContactFromCustomerOperationCompleted);
            }
            this.InvokeAsync("DeleteContactFromCustomer", new object[] {
                        Customer,
                        bc,
                        company}, this.DeleteContactFromCustomerOperationCompleted, userState);
        }
        
        private void OnDeleteContactFromCustomerOperationCompleted(object arg) {
            if ((this.DeleteContactFromCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteContactFromCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContractListForCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContractListForCustomer(string sCustomerNumber, string company) {
            object[] results = this.Invoke("GetContractListForCustomer", new object[] {
                        sCustomerNumber,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractListForCustomerAsync(string sCustomerNumber, string company) {
            this.GetContractListForCustomerAsync(sCustomerNumber, company, null);
        }
        
        /// <remarks/>
        public void GetContractListForCustomerAsync(string sCustomerNumber, string company, object userState) {
            if ((this.GetContractListForCustomerOperationCompleted == null)) {
                this.GetContractListForCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractListForCustomerOperationCompleted);
            }
            this.InvokeAsync("GetContractListForCustomer", new object[] {
                        sCustomerNumber,
                        company}, this.GetContractListForCustomerOperationCompleted, userState);
        }
        
        private void OnGetContractListForCustomerOperationCompleted(object arg) {
            if ((this.GetContractListForCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractListForCustomerCompleted(this, new GetContractListForCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetEstimateList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEstimateList(string customerID) {
            object[] results = this.Invoke("GetEstimateList", new object[] {
                        customerID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEstimateListAsync(string customerID) {
            this.GetEstimateListAsync(customerID, null);
        }
        
        /// <remarks/>
        public void GetEstimateListAsync(string customerID, object userState) {
            if ((this.GetEstimateListOperationCompleted == null)) {
                this.GetEstimateListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEstimateListOperationCompleted);
            }
            this.InvokeAsync("GetEstimateList", new object[] {
                        customerID}, this.GetEstimateListOperationCompleted, userState);
        }
        
        private void OnGetEstimateListOperationCompleted(object arg) {
            if ((this.GetEstimateListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEstimateListCompleted(this, new GetEstimateListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetEstimateListByAccount", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEstimateListByAccount(string accountid) {
            object[] results = this.Invoke("GetEstimateListByAccount", new object[] {
                        accountid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEstimateListByAccountAsync(string accountid) {
            this.GetEstimateListByAccountAsync(accountid, null);
        }
        
        /// <remarks/>
        public void GetEstimateListByAccountAsync(string accountid, object userState) {
            if ((this.GetEstimateListByAccountOperationCompleted == null)) {
                this.GetEstimateListByAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEstimateListByAccountOperationCompleted);
            }
            this.InvokeAsync("GetEstimateListByAccount", new object[] {
                        accountid}, this.GetEstimateListByAccountOperationCompleted, userState);
        }
        
        private void OnGetEstimateListByAccountOperationCompleted(object arg) {
            if ((this.GetEstimateListByAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEstimateListByAccountCompleted(this, new GetEstimateListByAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetEstimateHeaderDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEstimateHeaderDetails(string accountid, int estimateID, int mergesurcharge) {
            object[] results = this.Invoke("GetEstimateHeaderDetails", new object[] {
                        accountid,
                        estimateID,
                        mergesurcharge});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEstimateHeaderDetailsAsync(string accountid, int estimateID, int mergesurcharge) {
            this.GetEstimateHeaderDetailsAsync(accountid, estimateID, mergesurcharge, null);
        }
        
        /// <remarks/>
        public void GetEstimateHeaderDetailsAsync(string accountid, int estimateID, int mergesurcharge, object userState) {
            if ((this.GetEstimateHeaderDetailsOperationCompleted == null)) {
                this.GetEstimateHeaderDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEstimateHeaderDetailsOperationCompleted);
            }
            this.InvokeAsync("GetEstimateHeaderDetails", new object[] {
                        accountid,
                        estimateID,
                        mergesurcharge}, this.GetEstimateHeaderDetailsOperationCompleted, userState);
        }
        
        private void OnGetEstimateHeaderDetailsOperationCompleted(object arg) {
            if ((this.GetEstimateHeaderDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEstimateHeaderDetailsCompleted(this, new GetEstimateHeaderDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetEstimatePromotion", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetEstimatePromotion(string EstimateID) {
            object[] results = this.Invoke("GetEstimatePromotion", new object[] {
                        EstimateID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetEstimatePromotionAsync(string EstimateID) {
            this.GetEstimatePromotionAsync(EstimateID, null);
        }
        
        /// <remarks/>
        public void GetEstimatePromotionAsync(string EstimateID, object userState) {
            if ((this.GetEstimatePromotionOperationCompleted == null)) {
                this.GetEstimatePromotionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEstimatePromotionOperationCompleted);
            }
            this.InvokeAsync("GetEstimatePromotion", new object[] {
                        EstimateID}, this.GetEstimatePromotionOperationCompleted, userState);
        }
        
        private void OnGetEstimatePromotionOperationCompleted(object arg) {
            if ((this.GetEstimatePromotionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEstimatePromotionCompleted(this, new GetEstimatePromotionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCurrentEstimateHouseDetailsByContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrentEstimateHouseDetailsByContract(string ContractID) {
            object[] results = this.Invoke("GetCurrentEstimateHouseDetailsByContract", new object[] {
                        ContractID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentEstimateHouseDetailsByContractAsync(string ContractID) {
            this.GetCurrentEstimateHouseDetailsByContractAsync(ContractID, null);
        }
        
        /// <remarks/>
        public void GetCurrentEstimateHouseDetailsByContractAsync(string ContractID, object userState) {
            if ((this.GetCurrentEstimateHouseDetailsByContractOperationCompleted == null)) {
                this.GetCurrentEstimateHouseDetailsByContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentEstimateHouseDetailsByContractOperationCompleted);
            }
            this.InvokeAsync("GetCurrentEstimateHouseDetailsByContract", new object[] {
                        ContractID}, this.GetCurrentEstimateHouseDetailsByContractOperationCompleted, userState);
        }
        
        private void OnGetCurrentEstimateHouseDetailsByContractOperationCompleted(object arg) {
            if ((this.GetCurrentEstimateHouseDetailsByContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentEstimateHouseDetailsByContractCompleted(this, new GetCurrentEstimateHouseDetailsByContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCurrentEstimateHouseDetailsByEstimate", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCurrentEstimateHouseDetailsByEstimate(string EstimateID) {
            object[] results = this.Invoke("GetCurrentEstimateHouseDetailsByEstimate", new object[] {
                        EstimateID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCurrentEstimateHouseDetailsByEstimateAsync(string EstimateID) {
            this.GetCurrentEstimateHouseDetailsByEstimateAsync(EstimateID, null);
        }
        
        /// <remarks/>
        public void GetCurrentEstimateHouseDetailsByEstimateAsync(string EstimateID, object userState) {
            if ((this.GetCurrentEstimateHouseDetailsByEstimateOperationCompleted == null)) {
                this.GetCurrentEstimateHouseDetailsByEstimateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCurrentEstimateHouseDetailsByEstimateOperationCompleted);
            }
            this.InvokeAsync("GetCurrentEstimateHouseDetailsByEstimate", new object[] {
                        EstimateID}, this.GetCurrentEstimateHouseDetailsByEstimateOperationCompleted, userState);
        }
        
        private void OnGetCurrentEstimateHouseDetailsByEstimateOperationCompleted(object arg) {
            if ((this.GetCurrentEstimateHouseDetailsByEstimateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCurrentEstimateHouseDetailsByEstimateCompleted(this, new GetCurrentEstimateHouseDetailsByEstimateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPromotionDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPromotionDetails(string PromotionID) {
            object[] results = this.Invoke("GetPromotionDetails", new object[] {
                        PromotionID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPromotionDetailsAsync(string PromotionID) {
            this.GetPromotionDetailsAsync(PromotionID, null);
        }
        
        /// <remarks/>
        public void GetPromotionDetailsAsync(string PromotionID, object userState) {
            if ((this.GetPromotionDetailsOperationCompleted == null)) {
                this.GetPromotionDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPromotionDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPromotionDetails", new object[] {
                        PromotionID}, this.GetPromotionDetailsOperationCompleted, userState);
        }
        
        private void OnGetPromotionDetailsOperationCompleted(object arg) {
            if ((this.GetPromotionDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPromotionDetailsCompleted(this, new GetPromotionDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/IsEstimateComplete", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsEstimateComplete(int estimateID) {
            object[] results = this.Invoke("IsEstimateComplete", new object[] {
                        estimateID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsEstimateCompleteAsync(int estimateID) {
            this.IsEstimateCompleteAsync(estimateID, null);
        }
        
        /// <remarks/>
        public void IsEstimateCompleteAsync(int estimateID, object userState) {
            if ((this.IsEstimateCompleteOperationCompleted == null)) {
                this.IsEstimateCompleteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEstimateCompleteOperationCompleted);
            }
            this.InvokeAsync("IsEstimateComplete", new object[] {
                        estimateID}, this.IsEstimateCompleteOperationCompleted, userState);
        }
        
        private void OnIsEstimateCompleteOperationCompleted(object arg) {
            if ((this.IsEstimateCompleteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEstimateCompleteCompleted(this, new IsEstimateCompleteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContractDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContractDetails(string sContractNumber, string company) {
            object[] results = this.Invoke("GetContractDetails", new object[] {
                        sContractNumber,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractDetailsAsync(string sContractNumber, string company) {
            this.GetContractDetailsAsync(sContractNumber, company, null);
        }
        
        /// <remarks/>
        public void GetContractDetailsAsync(string sContractNumber, string company, object userState) {
            if ((this.GetContractDetailsOperationCompleted == null)) {
                this.GetContractDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractDetailsOperationCompleted);
            }
            this.InvokeAsync("GetContractDetails", new object[] {
                        sContractNumber,
                        company}, this.GetContractDetailsOperationCompleted, userState);
        }
        
        private void OnGetContractDetailsOperationCompleted(object arg) {
            if ((this.GetContractDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractDetailsCompleted(this, new GetContractDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Contract Contract, BCCredentials bc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails, string company) {
            object[] results = this.Invoke("CreateContract", new object[] {
                        Contract,
                        bc,
                        SiteDetails,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractAsync(Contract Contract, BCCredentials bc, SiteDetails SiteDetails, string company) {
            this.CreateContractAsync(Contract, bc, SiteDetails, company, null);
        }
        
        /// <remarks/>
        public void CreateContractAsync(Contract Contract, BCCredentials bc, SiteDetails SiteDetails, string company, object userState) {
            if ((this.CreateContractOperationCompleted == null)) {
                this.CreateContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractOperationCompleted);
            }
            this.InvokeAsync("CreateContract", new object[] {
                        Contract,
                        bc,
                        SiteDetails,
                        company}, this.CreateContractOperationCompleted, userState);
        }
        
        private void OnCreateContractOperationCompleted(object arg) {
            if ((this.CreateContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractCompleted(this, new CreateContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/CreateContractWithKey", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateContractWithKey([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Contract Contract, BCCredentials bc, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails, string company, string key) {
            object[] results = this.Invoke("CreateContractWithKey", new object[] {
                        Contract,
                        bc,
                        SiteDetails,
                        company,
                        key});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateContractWithKeyAsync(Contract Contract, BCCredentials bc, SiteDetails SiteDetails, string company, string key) {
            this.CreateContractWithKeyAsync(Contract, bc, SiteDetails, company, key, null);
        }
        
        /// <remarks/>
        public void CreateContractWithKeyAsync(Contract Contract, BCCredentials bc, SiteDetails SiteDetails, string company, string key, object userState) {
            if ((this.CreateContractWithKeyOperationCompleted == null)) {
                this.CreateContractWithKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateContractWithKeyOperationCompleted);
            }
            this.InvokeAsync("CreateContractWithKey", new object[] {
                        Contract,
                        bc,
                        SiteDetails,
                        company,
                        key}, this.CreateContractWithKeyOperationCompleted, userState);
        }
        
        private void OnCreateContractWithKeyOperationCompleted(object arg) {
            if ((this.CreateContractWithKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateContractWithKeyCompleted(this, new CreateContractWithKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Contract Contract, BCCredentials bc, string company) {
            object[] results = this.Invoke("UpdateContract", new object[] {
                        Contract,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContractAsync(Contract Contract, BCCredentials bc, string company) {
            this.UpdateContractAsync(Contract, bc, company, null);
        }
        
        /// <remarks/>
        public void UpdateContractAsync(Contract Contract, BCCredentials bc, string company, object userState) {
            if ((this.UpdateContractOperationCompleted == null)) {
                this.UpdateContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContractOperationCompleted);
            }
            this.InvokeAsync("UpdateContract", new object[] {
                        Contract,
                        bc,
                        company}, this.UpdateContractOperationCompleted, userState);
        }
        
        private void OnUpdateContractOperationCompleted(object arg) {
            if ((this.UpdateContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContractCompleted(this, new UpdateContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateContractForOtherSiteDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContractForOtherSiteDetails([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Contract Contract, BCCredentials bc, string company) {
            object[] results = this.Invoke("UpdateContractForOtherSiteDetails", new object[] {
                        Contract,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContractForOtherSiteDetailsAsync(Contract Contract, BCCredentials bc, string company) {
            this.UpdateContractForOtherSiteDetailsAsync(Contract, bc, company, null);
        }
        
        /// <remarks/>
        public void UpdateContractForOtherSiteDetailsAsync(Contract Contract, BCCredentials bc, string company, object userState) {
            if ((this.UpdateContractForOtherSiteDetailsOperationCompleted == null)) {
                this.UpdateContractForOtherSiteDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContractForOtherSiteDetailsOperationCompleted);
            }
            this.InvokeAsync("UpdateContractForOtherSiteDetails", new object[] {
                        Contract,
                        bc,
                        company}, this.UpdateContractForOtherSiteDetailsOperationCompleted, userState);
        }
        
        private void OnUpdateContractForOtherSiteDetailsOperationCompleted(object arg) {
            if ((this.UpdateContractForOtherSiteDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContractForOtherSiteDetailsCompleted(this, new UpdateContractForOtherSiteDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDepositDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetDepositDetailsForContract(string contractNumber) {
            object[] results = this.Invoke("GetDepositDetailsForContract", new object[] {
                        contractNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepositDetailsForContractAsync(string contractNumber) {
            this.GetDepositDetailsForContractAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void GetDepositDetailsForContractAsync(string contractNumber, object userState) {
            if ((this.GetDepositDetailsForContractOperationCompleted == null)) {
                this.GetDepositDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepositDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("GetDepositDetailsForContract", new object[] {
                        contractNumber}, this.GetDepositDetailsForContractOperationCompleted, userState);
        }
        
        private void OnGetDepositDetailsForContractOperationCompleted(object arg) {
            if ((this.GetDepositDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepositDetailsForContractCompleted(this, new GetDepositDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AcceptDeposit", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AcceptDeposit(Deposit aDeposit, string aJobNumber, string company) {
            object[] results = this.Invoke("AcceptDeposit", new object[] {
                        aDeposit,
                        aJobNumber,
                        company});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptDepositAsync(Deposit aDeposit, string aJobNumber, string company) {
            this.AcceptDepositAsync(aDeposit, aJobNumber, company, null);
        }
        
        /// <remarks/>
        public void AcceptDepositAsync(Deposit aDeposit, string aJobNumber, string company, object userState) {
            if ((this.AcceptDepositOperationCompleted == null)) {
                this.AcceptDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptDepositOperationCompleted);
            }
            this.InvokeAsync("AcceptDeposit", new object[] {
                        aDeposit,
                        aJobNumber,
                        company}, this.AcceptDepositOperationCompleted, userState);
        }
        
        private void OnAcceptDepositOperationCompleted(object arg) {
            if ((this.AcceptDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptDepositCompleted(this, new AcceptDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/RegisterEventHF", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RegisterEventHF(string eventcode, string aJobNumber, string company, System.DateTime regdate, string usercode, out string errormessage) {
            object[] results = this.Invoke("RegisterEventHF", new object[] {
                        eventcode,
                        aJobNumber,
                        company,
                        regdate,
                        usercode});
            errormessage = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RegisterEventHFAsync(string eventcode, string aJobNumber, string company, System.DateTime regdate, string usercode) {
            this.RegisterEventHFAsync(eventcode, aJobNumber, company, regdate, usercode, null);
        }
        
        /// <remarks/>
        public void RegisterEventHFAsync(string eventcode, string aJobNumber, string company, System.DateTime regdate, string usercode, object userState) {
            if ((this.RegisterEventHFOperationCompleted == null)) {
                this.RegisterEventHFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRegisterEventHFOperationCompleted);
            }
            this.InvokeAsync("RegisterEventHF", new object[] {
                        eventcode,
                        aJobNumber,
                        company,
                        regdate,
                        usercode}, this.RegisterEventHFOperationCompleted, userState);
        }
        
        private void OnRegisterEventHFOperationCompleted(object arg) {
            if ((this.RegisterEventHFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RegisterEventHFCompleted(this, new RegisterEventHFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetSiteDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetSiteDetailsForContract(string contractNumber) {
            object[] results = this.Invoke("GetSiteDetailsForContract", new object[] {
                        contractNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetSiteDetailsForContractAsync(string contractNumber) {
            this.GetSiteDetailsForContractAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void GetSiteDetailsForContractAsync(string contractNumber, object userState) {
            if ((this.GetSiteDetailsForContractOperationCompleted == null)) {
                this.GetSiteDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSiteDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("GetSiteDetailsForContract", new object[] {
                        contractNumber}, this.GetSiteDetailsForContractOperationCompleted, userState);
        }
        
        private void OnGetSiteDetailsForContractOperationCompleted(object arg) {
            if ((this.GetSiteDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSiteDetailsForContractCompleted(this, new GetSiteDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveSiteDetailsForSuppliers", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveSiteDetailsForSuppliers(string opportunityid, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails) {
            object[] results = this.Invoke("SaveSiteDetailsForSuppliers", new object[] {
                        opportunityid,
                        SiteDetails});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForSuppliersAsync(string opportunityid, SiteDetails SiteDetails) {
            this.SaveSiteDetailsForSuppliersAsync(opportunityid, SiteDetails, null);
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForSuppliersAsync(string opportunityid, SiteDetails SiteDetails, object userState) {
            if ((this.SaveSiteDetailsForSuppliersOperationCompleted == null)) {
                this.SaveSiteDetailsForSuppliersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSiteDetailsForSuppliersOperationCompleted);
            }
            this.InvokeAsync("SaveSiteDetailsForSuppliers", new object[] {
                        opportunityid,
                        SiteDetails}, this.SaveSiteDetailsForSuppliersOperationCompleted, userState);
        }
        
        private void OnSaveSiteDetailsForSuppliersOperationCompleted(object arg) {
            if ((this.SaveSiteDetailsForSuppliersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSiteDetailsForSuppliersCompleted(this, new SaveSiteDetailsForSuppliersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveSiteDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveSiteDetailsForContract(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails) {
            object[] results = this.Invoke("SaveSiteDetailsForContract", new object[] {
                        contractNumber,
                        SiteDetails});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForContractAsync(string contractNumber, SiteDetails SiteDetails) {
            this.SaveSiteDetailsForContractAsync(contractNumber, SiteDetails, null);
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForContractAsync(string contractNumber, SiteDetails SiteDetails, object userState) {
            if ((this.SaveSiteDetailsForContractOperationCompleted == null)) {
                this.SaveSiteDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSiteDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("SaveSiteDetailsForContract", new object[] {
                        contractNumber,
                        SiteDetails}, this.SaveSiteDetailsForContractOperationCompleted, userState);
        }
        
        private void OnSaveSiteDetailsForContractOperationCompleted(object arg) {
            if ((this.SaveSiteDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSiteDetailsForContractCompleted(this, new SaveSiteDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/IsEstimateExpired", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsEstimateExpired(int estimateID) {
            object[] results = this.Invoke("IsEstimateExpired", new object[] {
                        estimateID});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsEstimateExpiredAsync(int estimateID) {
            this.IsEstimateExpiredAsync(estimateID, null);
        }
        
        /// <remarks/>
        public void IsEstimateExpiredAsync(int estimateID, object userState) {
            if ((this.IsEstimateExpiredOperationCompleted == null)) {
                this.IsEstimateExpiredOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsEstimateExpiredOperationCompleted);
            }
            this.InvokeAsync("IsEstimateExpired", new object[] {
                        estimateID}, this.IsEstimateExpiredOperationCompleted, userState);
        }
        
        private void OnIsEstimateExpiredOperationCompleted(object arg) {
            if ((this.IsEstimateExpiredCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsEstimateExpiredCompleted(this, new IsEstimateExpiredCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetBudgetDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetBudgetDetailsForContract(string contractNumber) {
            object[] results = this.Invoke("GetBudgetDetailsForContract", new object[] {
                        contractNumber});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetBudgetDetailsForContractAsync(string contractNumber) {
            this.GetBudgetDetailsForContractAsync(contractNumber, null);
        }
        
        /// <remarks/>
        public void GetBudgetDetailsForContractAsync(string contractNumber, object userState) {
            if ((this.GetBudgetDetailsForContractOperationCompleted == null)) {
                this.GetBudgetDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBudgetDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("GetBudgetDetailsForContract", new object[] {
                        contractNumber}, this.GetBudgetDetailsForContractOperationCompleted, userState);
        }
        
        private void OnGetBudgetDetailsForContractOperationCompleted(object arg) {
            if ((this.GetBudgetDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBudgetDetailsForContractCompleted(this, new GetBudgetDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveBudgetDetailsForContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SaveBudgetDetailsForContract(string contractNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] BudgetDetails BudgetDetails) {
            object[] results = this.Invoke("SaveBudgetDetailsForContract", new object[] {
                        contractNumber,
                        BudgetDetails});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SaveBudgetDetailsForContractAsync(string contractNumber, BudgetDetails BudgetDetails) {
            this.SaveBudgetDetailsForContractAsync(contractNumber, BudgetDetails, null);
        }
        
        /// <remarks/>
        public void SaveBudgetDetailsForContractAsync(string contractNumber, BudgetDetails BudgetDetails, object userState) {
            if ((this.SaveBudgetDetailsForContractOperationCompleted == null)) {
                this.SaveBudgetDetailsForContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveBudgetDetailsForContractOperationCompleted);
            }
            this.InvokeAsync("SaveBudgetDetailsForContract", new object[] {
                        contractNumber,
                        BudgetDetails}, this.SaveBudgetDetailsForContractOperationCompleted, userState);
        }
        
        private void OnSaveBudgetDetailsForContractOperationCompleted(object arg) {
            if ((this.SaveBudgetDetailsForContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveBudgetDetailsForContractCompleted(this, new SaveBudgetDetailsForContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetDependencyForEstimate", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDependencyForEstimate(int estimateID) {
            object[] results = this.Invoke("GetDependencyForEstimate", new object[] {
                        estimateID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDependencyForEstimateAsync(int estimateID) {
            this.GetDependencyForEstimateAsync(estimateID, null);
        }
        
        /// <remarks/>
        public void GetDependencyForEstimateAsync(int estimateID, object userState) {
            if ((this.GetDependencyForEstimateOperationCompleted == null)) {
                this.GetDependencyForEstimateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDependencyForEstimateOperationCompleted);
            }
            this.InvokeAsync("GetDependencyForEstimate", new object[] {
                        estimateID}, this.GetDependencyForEstimateOperationCompleted, userState);
        }
        
        private void OnGetDependencyForEstimateOperationCompleted(object arg) {
            if ((this.GetDependencyForEstimateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDependencyForEstimateCompleted(this, new GetDependencyForEstimateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContractJobNumber", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetContractJobNumber(string contractNumber, string company) {
            object[] results = this.Invoke("GetContractJobNumber", new object[] {
                        contractNumber,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractJobNumberAsync(string contractNumber, string company) {
            this.GetContractJobNumberAsync(contractNumber, company, null);
        }
        
        /// <remarks/>
        public void GetContractJobNumberAsync(string contractNumber, string company, object userState) {
            if ((this.GetContractJobNumberOperationCompleted == null)) {
                this.GetContractJobNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractJobNumberOperationCompleted);
            }
            this.InvokeAsync("GetContractJobNumber", new object[] {
                        contractNumber,
                        company}, this.GetContractJobNumberOperationCompleted, userState);
        }
        
        private void OnGetContractJobNumberOperationCompleted(object arg) {
            if ((this.GetContractJobNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractJobNumberCompleted(this, new GetContractJobNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPreliminarySupplierList", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPreliminarySupplierList() {
            object[] results = this.Invoke("GetPreliminarySupplierList", new object[0]);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreliminarySupplierListAsync() {
            this.GetPreliminarySupplierListAsync(null);
        }
        
        /// <remarks/>
        public void GetPreliminarySupplierListAsync(object userState) {
            if ((this.GetPreliminarySupplierListOperationCompleted == null)) {
                this.GetPreliminarySupplierListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreliminarySupplierListOperationCompleted);
            }
            this.InvokeAsync("GetPreliminarySupplierList", new object[0], this.GetPreliminarySupplierListOperationCompleted, userState);
        }
        
        private void OnGetPreliminarySupplierListOperationCompleted(object arg) {
            if ((this.GetPreliminarySupplierListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreliminarySupplierListCompleted(this, new GetPreliminarySupplierListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetPreliminarySupplierDetails", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetPreliminarySupplierDetails(int supplierID) {
            object[] results = this.Invoke("GetPreliminarySupplierDetails", new object[] {
                        supplierID});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetPreliminarySupplierDetailsAsync(int supplierID) {
            this.GetPreliminarySupplierDetailsAsync(supplierID, null);
        }
        
        /// <remarks/>
        public void GetPreliminarySupplierDetailsAsync(int supplierID, object userState) {
            if ((this.GetPreliminarySupplierDetailsOperationCompleted == null)) {
                this.GetPreliminarySupplierDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPreliminarySupplierDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPreliminarySupplierDetails", new object[] {
                        supplierID}, this.GetPreliminarySupplierDetailsOperationCompleted, userState);
        }
        
        private void OnGetPreliminarySupplierDetailsOperationCompleted(object arg) {
            if ((this.GetPreliminarySupplierDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPreliminarySupplierDetailsCompleted(this, new GetPreliminarySupplierDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AddItemTest", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddItemTest() {
            object[] results = this.Invoke("AddItemTest", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddItemTestAsync() {
            this.AddItemTestAsync(null);
        }
        
        /// <remarks/>
        public void AddItemTestAsync(object userState) {
            if ((this.AddItemTestOperationCompleted == null)) {
                this.AddItemTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddItemTestOperationCompleted);
            }
            this.InvokeAsync("AddItemTest", new object[0], this.AddItemTestOperationCompleted, userState);
        }
        
        private void OnAddItemTestOperationCompleted(object arg) {
            if ((this.AddItemTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddItemTestCompleted(this, new AddItemTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/TestCreateCustomer", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TestCreateCustomer() {
            this.Invoke("TestCreateCustomer", new object[0]);
        }
        
        /// <remarks/>
        public void TestCreateCustomerAsync() {
            this.TestCreateCustomerAsync(null);
        }
        
        /// <remarks/>
        public void TestCreateCustomerAsync(object userState) {
            if ((this.TestCreateCustomerOperationCompleted == null)) {
                this.TestCreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTestCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("TestCreateCustomer", new object[0], this.TestCreateCustomerOperationCompleted, userState);
        }
        
        private void OnTestCreateCustomerOperationCompleted(object arg) {
            if ((this.TestCreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TestCreateCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AcceptEstimate", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AcceptEstimate(string estimateID, string contractNumber, string contractStatus, string houseDependency, string houseID, string userCode, BCCredentials bc, string company) {
            object[] results = this.Invoke("AcceptEstimate", new object[] {
                        estimateID,
                        contractNumber,
                        contractStatus,
                        houseDependency,
                        houseID,
                        userCode,
                        bc,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AcceptEstimateAsync(string estimateID, string contractNumber, string contractStatus, string houseDependency, string houseID, string userCode, BCCredentials bc, string company) {
            this.AcceptEstimateAsync(estimateID, contractNumber, contractStatus, houseDependency, houseID, userCode, bc, company, null);
        }
        
        /// <remarks/>
        public void AcceptEstimateAsync(string estimateID, string contractNumber, string contractStatus, string houseDependency, string houseID, string userCode, BCCredentials bc, string company, object userState) {
            if ((this.AcceptEstimateOperationCompleted == null)) {
                this.AcceptEstimateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAcceptEstimateOperationCompleted);
            }
            this.InvokeAsync("AcceptEstimate", new object[] {
                        estimateID,
                        contractNumber,
                        contractStatus,
                        houseDependency,
                        houseID,
                        userCode,
                        bc,
                        company}, this.AcceptEstimateOperationCompleted, userState);
        }
        
        private void OnAcceptEstimateOperationCompleted(object arg) {
            if ((this.AcceptEstimateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AcceptEstimateCompleted(this, new AcceptEstimateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UnregisterEvent", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnregisterEvent(int aContractNumber, int anEventCode, string company) {
            object[] results = this.Invoke("UnregisterEvent", new object[] {
                        aContractNumber,
                        anEventCode,
                        company});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnregisterEventAsync(int aContractNumber, int anEventCode, string company) {
            this.UnregisterEventAsync(aContractNumber, anEventCode, company, null);
        }
        
        /// <remarks/>
        public void UnregisterEventAsync(int aContractNumber, int anEventCode, string company, object userState) {
            if ((this.UnregisterEventOperationCompleted == null)) {
                this.UnregisterEventOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnregisterEventOperationCompleted);
            }
            this.InvokeAsync("UnregisterEvent", new object[] {
                        aContractNumber,
                        anEventCode,
                        company}, this.UnregisterEventOperationCompleted, userState);
        }
        
        private void OnUnregisterEventOperationCompleted(object arg) {
            if ((this.UnregisterEventCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnregisterEventCompleted(this, new UnregisterEventCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateContractAfterDeposit", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateContractAfterDeposit(BCCredentials bc, string contractNumber, string saletype, string paymentMethods, string company) {
            object[] results = this.Invoke("UpdateContractAfterDeposit", new object[] {
                        bc,
                        contractNumber,
                        saletype,
                        paymentMethods,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateContractAfterDepositAsync(BCCredentials bc, string contractNumber, string saletype, string paymentMethods, string company) {
            this.UpdateContractAfterDepositAsync(bc, contractNumber, saletype, paymentMethods, company, null);
        }
        
        /// <remarks/>
        public void UpdateContractAfterDepositAsync(BCCredentials bc, string contractNumber, string saletype, string paymentMethods, string company, object userState) {
            if ((this.UpdateContractAfterDepositOperationCompleted == null)) {
                this.UpdateContractAfterDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateContractAfterDepositOperationCompleted);
            }
            this.InvokeAsync("UpdateContractAfterDeposit", new object[] {
                        bc,
                        contractNumber,
                        saletype,
                        paymentMethods,
                        company}, this.UpdateContractAfterDepositOperationCompleted, userState);
        }
        
        private void OnUpdateContractAfterDepositOperationCompleted(object arg) {
            if ((this.UpdateContractAfterDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateContractAfterDepositCompleted(this, new UpdateContractAfterDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateSalesTypeAfterDeposit", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateSalesTypeAfterDeposit(BCCredentials bc, string contractNumber, string saletype, string company) {
            object[] results = this.Invoke("UpdateSalesTypeAfterDeposit", new object[] {
                        bc,
                        contractNumber,
                        saletype,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateSalesTypeAfterDepositAsync(BCCredentials bc, string contractNumber, string saletype, string company) {
            this.UpdateSalesTypeAfterDepositAsync(bc, contractNumber, saletype, company, null);
        }
        
        /// <remarks/>
        public void UpdateSalesTypeAfterDepositAsync(BCCredentials bc, string contractNumber, string saletype, string company, object userState) {
            if ((this.UpdateSalesTypeAfterDepositOperationCompleted == null)) {
                this.UpdateSalesTypeAfterDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSalesTypeAfterDepositOperationCompleted);
            }
            this.InvokeAsync("UpdateSalesTypeAfterDeposit", new object[] {
                        bc,
                        contractNumber,
                        saletype,
                        company}, this.UpdateSalesTypeAfterDepositOperationCompleted, userState);
        }
        
        private void OnUpdateSalesTypeAfterDepositOperationCompleted(object arg) {
            if ((this.UpdateSalesTypeAfterDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSalesTypeAfterDepositCompleted(this, new UpdateSalesTypeAfterDepositCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateCustomerAfterDeposit", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCustomerAfterDeposit(BCCredentials bc, string customerCode, string cemail, string company) {
            this.Invoke("UpdateCustomerAfterDeposit", new object[] {
                        bc,
                        customerCode,
                        cemail,
                        company});
        }
        
        /// <remarks/>
        public void UpdateCustomerAfterDepositAsync(BCCredentials bc, string customerCode, string cemail, string company) {
            this.UpdateCustomerAfterDepositAsync(bc, customerCode, cemail, company, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAfterDepositAsync(BCCredentials bc, string customerCode, string cemail, string company, object userState) {
            if ((this.UpdateCustomerAfterDepositOperationCompleted == null)) {
                this.UpdateCustomerAfterDepositOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerAfterDepositOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomerAfterDeposit", new object[] {
                        bc,
                        customerCode,
                        cemail,
                        company}, this.UpdateCustomerAfterDepositOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerAfterDepositOperationCompleted(object arg) {
            if ((this.UpdateCustomerAfterDepositCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerAfterDepositCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetUserCatCode", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserCatCode(string company) {
            object[] results = this.Invoke("GetUserCatCode", new object[] {
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCatCodeAsync(string company) {
            this.GetUserCatCodeAsync(company, null);
        }
        
        /// <remarks/>
        public void GetUserCatCodeAsync(string company, object userState) {
            if ((this.GetUserCatCodeOperationCompleted == null)) {
                this.GetUserCatCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCatCodeOperationCompleted);
            }
            this.InvokeAsync("GetUserCatCode", new object[] {
                        company}, this.GetUserCatCodeOperationCompleted, userState);
        }
        
        private void OnGetUserCatCodeOperationCompleted(object arg) {
            if ((this.GetUserCatCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCatCodeCompleted(this, new GetUserCatCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetUserInitailAndCatCode", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetUserInitailAndCatCode(string userName, string company) {
            object[] results = this.Invoke("GetUserInitailAndCatCode", new object[] {
                        userName,
                        company});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserInitailAndCatCodeAsync(string userName, string company) {
            this.GetUserInitailAndCatCodeAsync(userName, company, null);
        }
        
        /// <remarks/>
        public void GetUserInitailAndCatCodeAsync(string userName, string company, object userState) {
            if ((this.GetUserInitailAndCatCodeOperationCompleted == null)) {
                this.GetUserInitailAndCatCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserInitailAndCatCodeOperationCompleted);
            }
            this.InvokeAsync("GetUserInitailAndCatCode", new object[] {
                        userName,
                        company}, this.GetUserInitailAndCatCodeOperationCompleted, userState);
        }
        
        private void OnGetUserInitailAndCatCodeOperationCompleted(object arg) {
            if ((this.GetUserInitailAndCatCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserInitailAndCatCodeCompleted(this, new GetUserInitailAndCatCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetCustomerListForUserSortPageFromCRM", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetCustomerListForUserSortPageFromCRM(string sCustomerName, string sCustomerNumber, string sContractNumber, string username, string newlyassigned, int showall) {
            object[] results = this.Invoke("GetCustomerListForUserSortPageFromCRM", new object[] {
                        sCustomerName,
                        sCustomerNumber,
                        sContractNumber,
                        username,
                        newlyassigned,
                        showall});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPageFromCRMAsync(string sCustomerName, string sCustomerNumber, string sContractNumber, string username, string newlyassigned, int showall) {
            this.GetCustomerListForUserSortPageFromCRMAsync(sCustomerName, sCustomerNumber, sContractNumber, username, newlyassigned, showall, null);
        }
        
        /// <remarks/>
        public void GetCustomerListForUserSortPageFromCRMAsync(string sCustomerName, string sCustomerNumber, string sContractNumber, string username, string newlyassigned, int showall, object userState) {
            if ((this.GetCustomerListForUserSortPageFromCRMOperationCompleted == null)) {
                this.GetCustomerListForUserSortPageFromCRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerListForUserSortPageFromCRMOperationCompleted);
            }
            this.InvokeAsync("GetCustomerListForUserSortPageFromCRM", new object[] {
                        sCustomerName,
                        sCustomerNumber,
                        sContractNumber,
                        username,
                        newlyassigned,
                        showall}, this.GetCustomerListForUserSortPageFromCRMOperationCompleted, userState);
        }
        
        private void OnGetCustomerListForUserSortPageFromCRMOperationCompleted(object arg) {
            if ((this.GetCustomerListForUserSortPageFromCRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerListForUserSortPageFromCRMCompleted(this, new GetCustomerListForUserSortPageFromCRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AddCRMContact", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddCRMContact(CRMContact pContact, string username, string pAccountid, string ESAUserID, string pOriginalLeadID, string company) {
            object[] results = this.Invoke("AddCRMContact", new object[] {
                        pContact,
                        username,
                        pAccountid,
                        ESAUserID,
                        pOriginalLeadID,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddCRMContactAsync(CRMContact pContact, string username, string pAccountid, string ESAUserID, string pOriginalLeadID, string company) {
            this.AddCRMContactAsync(pContact, username, pAccountid, ESAUserID, pOriginalLeadID, company, null);
        }
        
        /// <remarks/>
        public void AddCRMContactAsync(CRMContact pContact, string username, string pAccountid, string ESAUserID, string pOriginalLeadID, string company, object userState) {
            if ((this.AddCRMContactOperationCompleted == null)) {
                this.AddCRMContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCRMContactOperationCompleted);
            }
            this.InvokeAsync("AddCRMContact", new object[] {
                        pContact,
                        username,
                        pAccountid,
                        ESAUserID,
                        pOriginalLeadID,
                        company}, this.AddCRMContactOperationCompleted, userState);
        }
        
        private void OnAddCRMContactOperationCompleted(object arg) {
            if ((this.AddCRMContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCRMContactCompleted(this, new AddCRMContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContactListForCustomerFromCRM", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContactListForCustomerFromCRM(string aAccountID, string aContactID, string pType) {
            object[] results = this.Invoke("GetContactListForCustomerFromCRM", new object[] {
                        aAccountID,
                        aContactID,
                        pType});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContactListForCustomerFromCRMAsync(string aAccountID, string aContactID, string pType) {
            this.GetContactListForCustomerFromCRMAsync(aAccountID, aContactID, pType, null);
        }
        
        /// <remarks/>
        public void GetContactListForCustomerFromCRMAsync(string aAccountID, string aContactID, string pType, object userState) {
            if ((this.GetContactListForCustomerFromCRMOperationCompleted == null)) {
                this.GetContactListForCustomerFromCRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContactListForCustomerFromCRMOperationCompleted);
            }
            this.InvokeAsync("GetContactListForCustomerFromCRM", new object[] {
                        aAccountID,
                        aContactID,
                        pType}, this.GetContactListForCustomerFromCRMOperationCompleted, userState);
        }
        
        private void OnGetContactListForCustomerFromCRMOperationCompleted(object arg) {
            if ((this.GetContactListForCustomerFromCRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContactListForCustomerFromCRMCompleted(this, new GetContactListForCustomerFromCRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateCRMContact", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCRMContact(CRMContact pContact, string ESAUserName) {
            object[] results = this.Invoke("UpdateCRMContact", new object[] {
                        pContact,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCRMContactAsync(CRMContact pContact, string ESAUserName) {
            this.UpdateCRMContactAsync(pContact, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateCRMContactAsync(CRMContact pContact, string ESAUserName, object userState) {
            if ((this.UpdateCRMContactOperationCompleted == null)) {
                this.UpdateCRMContactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCRMContactOperationCompleted);
            }
            this.InvokeAsync("UpdateCRMContact", new object[] {
                        pContact,
                        ESAUserName}, this.UpdateCRMContactOperationCompleted, userState);
        }
        
        private void OnUpdateCRMContactOperationCompleted(object arg) {
            if ((this.UpdateCRMContactCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCRMContactCompleted(this, new UpdateCRMContactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/UpdateCRMContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpdateCRMContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] Contract Contract, string pContractID, string ESAUserName) {
            object[] results = this.Invoke("UpdateCRMContract", new object[] {
                        Contract,
                        pContractID,
                        ESAUserName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateCRMContractAsync(Contract Contract, string pContractID, string ESAUserName) {
            this.UpdateCRMContractAsync(Contract, pContractID, ESAUserName, null);
        }
        
        /// <remarks/>
        public void UpdateCRMContractAsync(Contract Contract, string pContractID, string ESAUserName, object userState) {
            if ((this.UpdateCRMContractOperationCompleted == null)) {
                this.UpdateCRMContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCRMContractOperationCompleted);
            }
            this.InvokeAsync("UpdateCRMContract", new object[] {
                        Contract,
                        pContractID,
                        ESAUserName}, this.UpdateCRMContractOperationCompleted, userState);
        }
        
        private void OnUpdateCRMContractOperationCompleted(object arg) {
            if ((this.UpdateCRMContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCRMContractCompleted(this, new UpdateCRMContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/GetContractOpportunityListForCustomerFromCRM", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetContractOpportunityListForCustomerFromCRM(string pAccountid) {
            object[] results = this.Invoke("GetContractOpportunityListForCustomerFromCRM", new object[] {
                        pAccountid});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetContractOpportunityListForCustomerFromCRMAsync(string pAccountid) {
            this.GetContractOpportunityListForCustomerFromCRMAsync(pAccountid, null);
        }
        
        /// <remarks/>
        public void GetContractOpportunityListForCustomerFromCRMAsync(string pAccountid, object userState) {
            if ((this.GetContractOpportunityListForCustomerFromCRMOperationCompleted == null)) {
                this.GetContractOpportunityListForCustomerFromCRMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetContractOpportunityListForCustomerFromCRMOperationCompleted);
            }
            this.InvokeAsync("GetContractOpportunityListForCustomerFromCRM", new object[] {
                        pAccountid}, this.GetContractOpportunityListForCustomerFromCRMOperationCompleted, userState);
        }
        
        private void OnGetContractOpportunityListForCustomerFromCRMOperationCompleted(object arg) {
            if ((this.GetContractOpportunityListForCustomerFromCRMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetContractOpportunityListForCustomerFromCRMCompleted(this, new GetContractOpportunityListForCustomerFromCRMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/AddOpportunity", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddOpportunity(string pAccountID, string ESAUserID, string originatingleadid, string company) {
            object[] results = this.Invoke("AddOpportunity", new object[] {
                        pAccountID,
                        ESAUserID,
                        originatingleadid,
                        company});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddOpportunityAsync(string pAccountID, string ESAUserID, string originatingleadid, string company) {
            this.AddOpportunityAsync(pAccountID, ESAUserID, originatingleadid, company, null);
        }
        
        /// <remarks/>
        public void AddOpportunityAsync(string pAccountID, string ESAUserID, string originatingleadid, string company, object userState) {
            if ((this.AddOpportunityOperationCompleted == null)) {
                this.AddOpportunityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOpportunityOperationCompleted);
            }
            this.InvokeAsync("AddOpportunity", new object[] {
                        pAccountID,
                        ESAUserID,
                        originatingleadid,
                        company}, this.AddOpportunityOperationCompleted, userState);
        }
        
        private void OnAddOpportunityOperationCompleted(object arg) {
            if ((this.AddOpportunityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOpportunityCompleted(this, new AddOpportunityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://MetriconSalesWebService/SaveSiteDetailsForOpportunityContract", RequestNamespace="http://MetriconSalesWebService/", ResponseNamespace="http://MetriconSalesWebService/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SaveSiteDetailsForOpportunityContract([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] SiteDetails SiteDetails, string ESAUserName, string company) {
            this.Invoke("SaveSiteDetailsForOpportunityContract", new object[] {
                        SiteDetails,
                        ESAUserName,
                        company});
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForOpportunityContractAsync(SiteDetails SiteDetails, string ESAUserName, string company) {
            this.SaveSiteDetailsForOpportunityContractAsync(SiteDetails, ESAUserName, company, null);
        }
        
        /// <remarks/>
        public void SaveSiteDetailsForOpportunityContractAsync(SiteDetails SiteDetails, string ESAUserName, string company, object userState) {
            if ((this.SaveSiteDetailsForOpportunityContractOperationCompleted == null)) {
                this.SaveSiteDetailsForOpportunityContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveSiteDetailsForOpportunityContractOperationCompleted);
            }
            this.InvokeAsync("SaveSiteDetailsForOpportunityContract", new object[] {
                        SiteDetails,
                        ESAUserName,
                        company}, this.SaveSiteDetailsForOpportunityContractOperationCompleted, userState);
        }
        
        private void OnSaveSiteDetailsForOpportunityContractOperationCompleted(object arg) {
            if ((this.SaveSiteDetailsForOpportunityContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveSiteDetailsForOpportunityContractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class SiteDetails {
        
        private string siteDetailsIDField;
        
        private string estateNameField;
        
        private string buildingAreaField;
        
        private string brandTypeField;
        
        private bool hasLandSettledField;
        
        private bool hasTitleSettledField;
        
        private System.Nullable<System.DateTime> landSettlementDateField;
        
        private System.Nullable<System.DateTime> titleReleasedDateField;
        
        private System.Nullable<System.DateTime> regoDueDateField;
        
        private string siteDetailsCommentsField;
        
        private string orderPropertyInformationVendorCodeField;
        
        private string orderTitleSearchVendorCodeField;
        
        private string orderFeatureSurveyVendorCodeField;
        
        private string orderSoilReportVendorCodeField;
        
        private string orderSlopeStabilityVendorCodeField;
        
        private string orderBushfireReportsVendorCodeField;
        
        private string orderConservationSurveyVendorCodeField;
        
        private string orderOnSiteAssessmentVendorCodeField;
        
        private bool houseAndLandPKGField;
        
        private bool demolitionField;
        
        private string regionIDField;
        
        private string councilCodeField;
        
        private string areaProfileIDField;
        
        private string opportunityIDField;
        
        private string lotAddressField;
        
        private string streetNumberField;
        
        private string streetNameField;
        
        private string suburbField;
        
        private string postCodeField;
        
        private string stateField;
        
        private string countryField;
        
        private string salesCentreField;
        
        private string contractStatusField;
        
        private string contractNumberField;
        
        private bool firstHomeBuyerField;
        
        private string mapTypeField;
        
        private string mapRefenrenceField;
        
        private string districtCodeField;
        
        private string salesTypeField;
        
        private string accountIDField;
        
        /// <remarks/>
        public string SiteDetailsID {
            get {
                return this.siteDetailsIDField;
            }
            set {
                this.siteDetailsIDField = value;
            }
        }
        
        /// <remarks/>
        public string EstateName {
            get {
                return this.estateNameField;
            }
            set {
                this.estateNameField = value;
            }
        }
        
        /// <remarks/>
        public string BuildingArea {
            get {
                return this.buildingAreaField;
            }
            set {
                this.buildingAreaField = value;
            }
        }
        
        /// <remarks/>
        public string BrandType {
            get {
                return this.brandTypeField;
            }
            set {
                this.brandTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool HasLandSettled {
            get {
                return this.hasLandSettledField;
            }
            set {
                this.hasLandSettledField = value;
            }
        }
        
        /// <remarks/>
        public bool HasTitleSettled {
            get {
                return this.hasTitleSettledField;
            }
            set {
                this.hasTitleSettledField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> LandSettlementDate {
            get {
                return this.landSettlementDateField;
            }
            set {
                this.landSettlementDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> TitleReleasedDate {
            get {
                return this.titleReleasedDateField;
            }
            set {
                this.titleReleasedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RegoDueDate {
            get {
                return this.regoDueDateField;
            }
            set {
                this.regoDueDateField = value;
            }
        }
        
        /// <remarks/>
        public string SiteDetailsComments {
            get {
                return this.siteDetailsCommentsField;
            }
            set {
                this.siteDetailsCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string OrderPropertyInformationVendorCode {
            get {
                return this.orderPropertyInformationVendorCodeField;
            }
            set {
                this.orderPropertyInformationVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderTitleSearchVendorCode {
            get {
                return this.orderTitleSearchVendorCodeField;
            }
            set {
                this.orderTitleSearchVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderFeatureSurveyVendorCode {
            get {
                return this.orderFeatureSurveyVendorCodeField;
            }
            set {
                this.orderFeatureSurveyVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderSoilReportVendorCode {
            get {
                return this.orderSoilReportVendorCodeField;
            }
            set {
                this.orderSoilReportVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderSlopeStabilityVendorCode {
            get {
                return this.orderSlopeStabilityVendorCodeField;
            }
            set {
                this.orderSlopeStabilityVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderBushfireReportsVendorCode {
            get {
                return this.orderBushfireReportsVendorCodeField;
            }
            set {
                this.orderBushfireReportsVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderConservationSurveyVendorCode {
            get {
                return this.orderConservationSurveyVendorCodeField;
            }
            set {
                this.orderConservationSurveyVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public string OrderOnSiteAssessmentVendorCode {
            get {
                return this.orderOnSiteAssessmentVendorCodeField;
            }
            set {
                this.orderOnSiteAssessmentVendorCodeField = value;
            }
        }
        
        /// <remarks/>
        public bool HouseAndLandPKG {
            get {
                return this.houseAndLandPKGField;
            }
            set {
                this.houseAndLandPKGField = value;
            }
        }
        
        /// <remarks/>
        public bool Demolition {
            get {
                return this.demolitionField;
            }
            set {
                this.demolitionField = value;
            }
        }
        
        /// <remarks/>
        public string RegionID {
            get {
                return this.regionIDField;
            }
            set {
                this.regionIDField = value;
            }
        }
        
        /// <remarks/>
        public string CouncilCode {
            get {
                return this.councilCodeField;
            }
            set {
                this.councilCodeField = value;
            }
        }
        
        /// <remarks/>
        public string AreaProfileID {
            get {
                return this.areaProfileIDField;
            }
            set {
                this.areaProfileIDField = value;
            }
        }
        
        /// <remarks/>
        public string OpportunityID {
            get {
                return this.opportunityIDField;
            }
            set {
                this.opportunityIDField = value;
            }
        }
        
        /// <remarks/>
        public string LotAddress {
            get {
                return this.lotAddressField;
            }
            set {
                this.lotAddressField = value;
            }
        }
        
        /// <remarks/>
        public string StreetNumber {
            get {
                return this.streetNumberField;
            }
            set {
                this.streetNumberField = value;
            }
        }
        
        /// <remarks/>
        public string StreetName {
            get {
                return this.streetNameField;
            }
            set {
                this.streetNameField = value;
            }
        }
        
        /// <remarks/>
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        public string PostCode {
            get {
                return this.postCodeField;
            }
            set {
                this.postCodeField = value;
            }
        }
        
        /// <remarks/>
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string SalesCentre {
            get {
                return this.salesCentreField;
            }
            set {
                this.salesCentreField = value;
            }
        }
        
        /// <remarks/>
        public string ContractStatus {
            get {
                return this.contractStatusField;
            }
            set {
                this.contractStatusField = value;
            }
        }
        
        /// <remarks/>
        public string ContractNumber {
            get {
                return this.contractNumberField;
            }
            set {
                this.contractNumberField = value;
            }
        }
        
        /// <remarks/>
        public bool FirstHomeBuyer {
            get {
                return this.firstHomeBuyerField;
            }
            set {
                this.firstHomeBuyerField = value;
            }
        }
        
        /// <remarks/>
        public string MapType {
            get {
                return this.mapTypeField;
            }
            set {
                this.mapTypeField = value;
            }
        }
        
        /// <remarks/>
        public string MapRefenrence {
            get {
                return this.mapRefenrenceField;
            }
            set {
                this.mapRefenrenceField = value;
            }
        }
        
        /// <remarks/>
        public string DistrictCode {
            get {
                return this.districtCodeField;
            }
            set {
                this.districtCodeField = value;
            }
        }
        
        /// <remarks/>
        public string SalesType {
            get {
                return this.salesTypeField;
            }
            set {
                this.salesTypeField = value;
            }
        }
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class BudgetDetails {
        
        private double savingsPerMonthField;
        
        private int numberOfMonthsField;
        
        private double siteCostsField;
        
        private double landPriceField;
        
        private double feesToOthersField;
        
        private double equityField;
        
        private double fHOGField;
        
        private double cashField;
        
        private double otherField;
        
        private double otherCostField;
        
        /// <remarks/>
        public double SavingsPerMonth {
            get {
                return this.savingsPerMonthField;
            }
            set {
                this.savingsPerMonthField = value;
            }
        }
        
        /// <remarks/>
        public int NumberOfMonths {
            get {
                return this.numberOfMonthsField;
            }
            set {
                this.numberOfMonthsField = value;
            }
        }
        
        /// <remarks/>
        public double SiteCosts {
            get {
                return this.siteCostsField;
            }
            set {
                this.siteCostsField = value;
            }
        }
        
        /// <remarks/>
        public double LandPrice {
            get {
                return this.landPriceField;
            }
            set {
                this.landPriceField = value;
            }
        }
        
        /// <remarks/>
        public double FeesToOthers {
            get {
                return this.feesToOthersField;
            }
            set {
                this.feesToOthersField = value;
            }
        }
        
        /// <remarks/>
        public double Equity {
            get {
                return this.equityField;
            }
            set {
                this.equityField = value;
            }
        }
        
        /// <remarks/>
        public double FHOG {
            get {
                return this.fHOGField;
            }
            set {
                this.fHOGField = value;
            }
        }
        
        /// <remarks/>
        public double Cash {
            get {
                return this.cashField;
            }
            set {
                this.cashField = value;
            }
        }
        
        /// <remarks/>
        public double Other {
            get {
                return this.otherField;
            }
            set {
                this.otherField = value;
            }
        }
        
        /// <remarks/>
        public double OtherCost {
            get {
                return this.otherCostField;
            }
            set {
                this.otherCostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class Contract {
        
        private string bldgsupvField;
        
        private string opCentreField;
        
        private string salesCodeField;
        
        private string custSatisfField;
        
        private string statusField;
        
        private string jobNumberField;
        
        private string mapXField;
        
        private string mapYField;
        
        private string estateField;
        
        private string mapCodeField;
        
        private int mapPageField;
        
        private string saleTypeField;
        
        private string progressBillingField;
        
        private string developerField;
        
        private string developerContactField;
        
        private string developerPhoneField;
        
        private string companySolicitorPhoneField;
        
        private string lenderCodeField;
        
        private string lenderContactField;
        
        private string lenderBranchField;
        
        private string lenderAddressField;
        
        private string lenderCityField;
        
        private string lenderStateField;
        
        private string lenderZipField;
        
        private string lenderPhoneField;
        
        private string lenderFaxField;
        
        private int contractNumberField;
        
        private string customerNumberField;
        
        private string lotNumberField;
        
        private string streetNumberField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string cityField;
        
        private string stateField;
        
        private string zipField;
        
        private string dpField;
        
        private string volumeField;
        
        private string folioField;
        
        private string districtField;
        
        private string salesConsultantField;
        
        private string salePromotionField;
        
        private string saleCentreField;
        
        private string comment1Field;
        
        private string comment2Field;
        
        private string comment3Field;
        
        private string houseDepField;
        
        private string councilField;
        
        private string companySolicitorField;
        
        private string companySolicitorNameField;
        
        private string customerSolicitorField;
        
        private string customerSolicitorNameField;
        
        private string customerSolicitorPhoneField;
        
        private string houseField;
        
        /// <remarks/>
        public string Bldgsupv {
            get {
                return this.bldgsupvField;
            }
            set {
                this.bldgsupvField = value;
            }
        }
        
        /// <remarks/>
        public string OpCentre {
            get {
                return this.opCentreField;
            }
            set {
                this.opCentreField = value;
            }
        }
        
        /// <remarks/>
        public string SalesCode {
            get {
                return this.salesCodeField;
            }
            set {
                this.salesCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CustSatisf {
            get {
                return this.custSatisfField;
            }
            set {
                this.custSatisfField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string JobNumber {
            get {
                return this.jobNumberField;
            }
            set {
                this.jobNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MapX {
            get {
                return this.mapXField;
            }
            set {
                this.mapXField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MapY {
            get {
                return this.mapYField;
            }
            set {
                this.mapYField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Estate {
            get {
                return this.estateField;
            }
            set {
                this.estateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MapCode {
            get {
                return this.mapCodeField;
            }
            set {
                this.mapCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int MapPage {
            get {
                return this.mapPageField;
            }
            set {
                this.mapPageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleType {
            get {
                return this.saleTypeField;
            }
            set {
                this.saleTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProgressBilling {
            get {
                return this.progressBillingField;
            }
            set {
                this.progressBillingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Developer {
            get {
                return this.developerField;
            }
            set {
                this.developerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DeveloperContact {
            get {
                return this.developerContactField;
            }
            set {
                this.developerContactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DeveloperPhone {
            get {
                return this.developerPhoneField;
            }
            set {
                this.developerPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CompanySolicitorPhone {
            get {
                return this.companySolicitorPhoneField;
            }
            set {
                this.companySolicitorPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderCode {
            get {
                return this.lenderCodeField;
            }
            set {
                this.lenderCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderContact {
            get {
                return this.lenderContactField;
            }
            set {
                this.lenderContactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderBranch {
            get {
                return this.lenderBranchField;
            }
            set {
                this.lenderBranchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderAddress {
            get {
                return this.lenderAddressField;
            }
            set {
                this.lenderAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderCity {
            get {
                return this.lenderCityField;
            }
            set {
                this.lenderCityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderState {
            get {
                return this.lenderStateField;
            }
            set {
                this.lenderStateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderZip {
            get {
                return this.lenderZipField;
            }
            set {
                this.lenderZipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderPhone {
            get {
                return this.lenderPhoneField;
            }
            set {
                this.lenderPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LenderFax {
            get {
                return this.lenderFaxField;
            }
            set {
                this.lenderFaxField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ContractNumber {
            get {
                return this.contractNumberField;
            }
            set {
                this.contractNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string LotNumber {
            get {
                return this.lotNumberField;
            }
            set {
                this.lotNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StreetNumber {
            get {
                return this.streetNumberField;
            }
            set {
                this.streetNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string City {
            get {
                return this.cityField;
            }
            set {
                this.cityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Zip {
            get {
                return this.zipField;
            }
            set {
                this.zipField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DP {
            get {
                return this.dpField;
            }
            set {
                this.dpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Folio {
            get {
                return this.folioField;
            }
            set {
                this.folioField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string District {
            get {
                return this.districtField;
            }
            set {
                this.districtField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SalesConsultant {
            get {
                return this.salesConsultantField;
            }
            set {
                this.salesConsultantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SalePromotion {
            get {
                return this.salePromotionField;
            }
            set {
                this.salePromotionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SaleCentre {
            get {
                return this.saleCentreField;
            }
            set {
                this.saleCentreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comment1 {
            get {
                return this.comment1Field;
            }
            set {
                this.comment1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comment2 {
            get {
                return this.comment2Field;
            }
            set {
                this.comment2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Comment3 {
            get {
                return this.comment3Field;
            }
            set {
                this.comment3Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string HouseDep {
            get {
                return this.houseDepField;
            }
            set {
                this.houseDepField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Council {
            get {
                return this.councilField;
            }
            set {
                this.councilField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CompanySolicitor {
            get {
                return this.companySolicitorField;
            }
            set {
                this.companySolicitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CompanySolicitorName {
            get {
                return this.companySolicitorNameField;
            }
            set {
                this.companySolicitorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerSolicitor {
            get {
                return this.customerSolicitorField;
            }
            set {
                this.customerSolicitorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerSolicitorName {
            get {
                return this.customerSolicitorNameField;
            }
            set {
                this.customerSolicitorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerSolicitorPhone {
            get {
                return this.customerSolicitorPhoneField;
            }
            set {
                this.customerSolicitorPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string House {
            get {
                return this.houseField;
            }
            set {
                this.houseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class Contact {
        
        private int sequenceField;
        
        private int salutationIDField;
        
        private string titleField;
        
        private string surnameField;
        
        private string firstNameField;
        
        private string businessPhoneField;
        
        private string afterHoursPhoneField;
        
        private string mobleNumberField;
        
        private string faxNumberField;
        
        private string emailAddressField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string suburbField;
        
        private string stateField;
        
        private string postcodeField;
        
        private string emailField;
        
        private string typeField;
        
        private string countryField;
        
        private string salesCodeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Sequence {
            get {
                return this.sequenceField;
            }
            set {
                this.sequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int SalutationID {
            get {
                return this.salutationIDField;
            }
            set {
                this.salutationIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Title {
            get {
                return this.titleField;
            }
            set {
                this.titleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Surname {
            get {
                return this.surnameField;
            }
            set {
                this.surnameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string BusinessPhone {
            get {
                return this.businessPhoneField;
            }
            set {
                this.businessPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AfterHoursPhone {
            get {
                return this.afterHoursPhoneField;
            }
            set {
                this.afterHoursPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string MobleNumber {
            get {
                return this.mobleNumberField;
            }
            set {
                this.mobleNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FaxNumber {
            get {
                return this.faxNumberField;
            }
            set {
                this.faxNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string State {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SalesCode {
            get {
                return this.salesCodeField;
            }
            set {
                this.salesCodeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class Customer {
        
        private Contact contactField;
        
        private string customerNumberField;
        
        /// <remarks/>
        public Contact Contact {
            get {
                return this.contactField;
            }
            set {
                this.contactField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CustomerNumber {
            get {
                return this.customerNumberField;
            }
            set {
                this.customerNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class BCCredentials {
        
        private string aDUserNameField;
        
        private string bCCodeField;
        
        private string ipField;
        
        private string displayFirstNameField;
        
        private string companyField;
        
        private string displaySurnameField;
        
        /// <remarks/>
        public string ADUserName {
            get {
                return this.aDUserNameField;
            }
            set {
                this.aDUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string BCCode {
            get {
                return this.bCCodeField;
            }
            set {
                this.bCCodeField = value;
            }
        }
        
        /// <remarks/>
        public string IP {
            get {
                return this.ipField;
            }
            set {
                this.ipField = value;
            }
        }
        
        /// <remarks/>
        public string DisplayFirstName {
            get {
                return this.displayFirstNameField;
            }
            set {
                this.displayFirstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        public string DisplaySurname {
            get {
                return this.displaySurnameField;
            }
            set {
                this.displaySurnameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class Solicitor {
        
        private string accountIDField;
        
        private string opportunityIDField;
        
        private string contractIDField;
        
        private string solicitorIDField;
        
        private string companyNameField;
        
        private string addressField;
        
        private string contactNameField;
        
        private string emailField;
        
        private string dxField;
        
        private string phoneField;
        
        private string faxField;
        
        private string volumeField;
        
        private string folioField;
        
        private string dpField;
        
        private string bldgsupvField;
        
        private string developerField;
        
        private string developerContactField;
        
        private string developerPhoneField;
        
        private string lenderCodeField;
        
        private string lenderContactField;
        
        private string lenderBranchField;
        
        private string lenderAddressField;
        
        private string lenderStateField;
        
        private string lenderCityField;
        
        private string lenderZipField;
        
        private string lenderPhoneField;
        
        private string lenderFaxField;
        
        /// <remarks/>
        public string AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public string OpportunityID {
            get {
                return this.opportunityIDField;
            }
            set {
                this.opportunityIDField = value;
            }
        }
        
        /// <remarks/>
        public string ContractID {
            get {
                return this.contractIDField;
            }
            set {
                this.contractIDField = value;
            }
        }
        
        /// <remarks/>
        public string SolicitorID {
            get {
                return this.solicitorIDField;
            }
            set {
                this.solicitorIDField = value;
            }
        }
        
        /// <remarks/>
        public string CompanyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        public string Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
            }
        }
        
        /// <remarks/>
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string Dx {
            get {
                return this.dxField;
            }
            set {
                this.dxField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string Fax {
            get {
                return this.faxField;
            }
            set {
                this.faxField = value;
            }
        }
        
        /// <remarks/>
        public string Volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public string Folio {
            get {
                return this.folioField;
            }
            set {
                this.folioField = value;
            }
        }
        
        /// <remarks/>
        public string DP {
            get {
                return this.dpField;
            }
            set {
                this.dpField = value;
            }
        }
        
        /// <remarks/>
        public string Bldgsupv {
            get {
                return this.bldgsupvField;
            }
            set {
                this.bldgsupvField = value;
            }
        }
        
        /// <remarks/>
        public string Developer {
            get {
                return this.developerField;
            }
            set {
                this.developerField = value;
            }
        }
        
        /// <remarks/>
        public string DeveloperContact {
            get {
                return this.developerContactField;
            }
            set {
                this.developerContactField = value;
            }
        }
        
        /// <remarks/>
        public string DeveloperPhone {
            get {
                return this.developerPhoneField;
            }
            set {
                this.developerPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string LenderCode {
            get {
                return this.lenderCodeField;
            }
            set {
                this.lenderCodeField = value;
            }
        }
        
        /// <remarks/>
        public string LenderContact {
            get {
                return this.lenderContactField;
            }
            set {
                this.lenderContactField = value;
            }
        }
        
        /// <remarks/>
        public string LenderBranch {
            get {
                return this.lenderBranchField;
            }
            set {
                this.lenderBranchField = value;
            }
        }
        
        /// <remarks/>
        public string LenderAddress {
            get {
                return this.lenderAddressField;
            }
            set {
                this.lenderAddressField = value;
            }
        }
        
        /// <remarks/>
        public string LenderState {
            get {
                return this.lenderStateField;
            }
            set {
                this.lenderStateField = value;
            }
        }
        
        /// <remarks/>
        public string LenderCity {
            get {
                return this.lenderCityField;
            }
            set {
                this.lenderCityField = value;
            }
        }
        
        /// <remarks/>
        public string LenderZip {
            get {
                return this.lenderZipField;
            }
            set {
                this.lenderZipField = value;
            }
        }
        
        /// <remarks/>
        public string LenderPhone {
            get {
                return this.lenderPhoneField;
            }
            set {
                this.lenderPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string LenderFax {
            get {
                return this.lenderFaxField;
            }
            set {
                this.lenderFaxField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class CRMContact {
        
        private System.Guid accountIDField;
        
        private System.Guid contactIDField;
        
        private string address1Field;
        
        private string address2Field;
        
        private string birthdateField;
        
        private string businessPhoneField;
        
        private string countryField;
        
        private string emailAddressField;
        
        private string firstNameField;
        
        private string genderField;
        
        private string homePhoneField;
        
        private bool isPrimaryField;
        
        private string jobTitleField;
        
        private string lastNameField;
        
        private string mobilePhoneField;
        
        private string postcodeField;
        
        private string suburbField;
        
        private string stateProvinceField;
        
        private string salesCodeField;
        
        private string typeField;
        
        private string salutationField;
        
        private int salutationIDField;
        
        private int bCSequenceNumberField;
        
        /// <remarks/>
        public System.Guid AccountID {
            get {
                return this.accountIDField;
            }
            set {
                this.accountIDField = value;
            }
        }
        
        /// <remarks/>
        public System.Guid ContactID {
            get {
                return this.contactIDField;
            }
            set {
                this.contactIDField = value;
            }
        }
        
        /// <remarks/>
        public string Address1 {
            get {
                return this.address1Field;
            }
            set {
                this.address1Field = value;
            }
        }
        
        /// <remarks/>
        public string Address2 {
            get {
                return this.address2Field;
            }
            set {
                this.address2Field = value;
            }
        }
        
        /// <remarks/>
        public string Birthdate {
            get {
                return this.birthdateField;
            }
            set {
                this.birthdateField = value;
            }
        }
        
        /// <remarks/>
        public string BusinessPhone {
            get {
                return this.businessPhoneField;
            }
            set {
                this.businessPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Country {
            get {
                return this.countryField;
            }
            set {
                this.countryField = value;
            }
        }
        
        /// <remarks/>
        public string EmailAddress {
            get {
                return this.emailAddressField;
            }
            set {
                this.emailAddressField = value;
            }
        }
        
        /// <remarks/>
        public string FirstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        public string Gender {
            get {
                return this.genderField;
            }
            set {
                this.genderField = value;
            }
        }
        
        /// <remarks/>
        public string HomePhone {
            get {
                return this.homePhoneField;
            }
            set {
                this.homePhoneField = value;
            }
        }
        
        /// <remarks/>
        public bool IsPrimary {
            get {
                return this.isPrimaryField;
            }
            set {
                this.isPrimaryField = value;
            }
        }
        
        /// <remarks/>
        public string JobTitle {
            get {
                return this.jobTitleField;
            }
            set {
                this.jobTitleField = value;
            }
        }
        
        /// <remarks/>
        public string LastName {
            get {
                return this.lastNameField;
            }
            set {
                this.lastNameField = value;
            }
        }
        
        /// <remarks/>
        public string MobilePhone {
            get {
                return this.mobilePhoneField;
            }
            set {
                this.mobilePhoneField = value;
            }
        }
        
        /// <remarks/>
        public string Postcode {
            get {
                return this.postcodeField;
            }
            set {
                this.postcodeField = value;
            }
        }
        
        /// <remarks/>
        public string Suburb {
            get {
                return this.suburbField;
            }
            set {
                this.suburbField = value;
            }
        }
        
        /// <remarks/>
        public string StateProvince {
            get {
                return this.stateProvinceField;
            }
            set {
                this.stateProvinceField = value;
            }
        }
        
        /// <remarks/>
        public string SalesCode {
            get {
                return this.salesCodeField;
            }
            set {
                this.salesCodeField = value;
            }
        }
        
        /// <remarks/>
        public string Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        public string Salutation {
            get {
                return this.salutationField;
            }
            set {
                this.salutationField = value;
            }
        }
        
        /// <remarks/>
        public int SalutationID {
            get {
                return this.salutationIDField;
            }
            set {
                this.salutationIDField = value;
            }
        }
        
        /// <remarks/>
        public int BCSequenceNumber {
            get {
                return this.bCSequenceNumberField;
            }
            set {
                this.bCSequenceNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class CRMLeadGenralSeminarInfo {
        
        private string salesCommentsField;
        
        private string webCommentsField;
        
        private string financeConsultantField;
        
        private string promotionField;
        
        private string typeOfCustomerField;
        
        private string typeOfleadField;
        
        private string preferredBuildingAreaField;
        
        private string brandField;
        
        private string homeField;
        
        private string sourceOfEnquiryField;
        
        private System.DateTime seminarDateField;
        
        private System.DateTime forecastDepositdateField;
        
        private string seminarLocationField;
        
        private string estateNameField;
        
        private string seminarAttendanceNoField;
        
        /// <remarks/>
        public string SalesComments {
            get {
                return this.salesCommentsField;
            }
            set {
                this.salesCommentsField = value;
            }
        }
        
        /// <remarks/>
        public string WebComments {
            get {
                return this.webCommentsField;
            }
            set {
                this.webCommentsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FinanceConsultant {
            get {
                return this.financeConsultantField;
            }
            set {
                this.financeConsultantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Promotion {
            get {
                return this.promotionField;
            }
            set {
                this.promotionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TypeOfCustomer {
            get {
                return this.typeOfCustomerField;
            }
            set {
                this.typeOfCustomerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TypeOflead {
            get {
                return this.typeOfleadField;
            }
            set {
                this.typeOfleadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PreferredBuildingArea {
            get {
                return this.preferredBuildingAreaField;
            }
            set {
                this.preferredBuildingAreaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Brand {
            get {
                return this.brandField;
            }
            set {
                this.brandField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Home {
            get {
                return this.homeField;
            }
            set {
                this.homeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SourceOfEnquiry {
            get {
                return this.sourceOfEnquiryField;
            }
            set {
                this.sourceOfEnquiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime SeminarDate {
            get {
                return this.seminarDateField;
            }
            set {
                this.seminarDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public System.DateTime ForecastDepositdate {
            get {
                return this.forecastDepositdateField;
            }
            set {
                this.forecastDepositdateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SeminarLocation {
            get {
                return this.seminarLocationField;
            }
            set {
                this.seminarLocationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string EstateName {
            get {
                return this.estateNameField;
            }
            set {
                this.estateNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string SeminarAttendanceNo {
            get {
                return this.seminarAttendanceNoField;
            }
            set {
                this.seminarAttendanceNoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://MetriconSalesWebService/")]
    public partial class Deposit {
        
        private string opportunityIDField;
        
        private string depositSaleTypeField;
        
        private string depositTypeField;
        
        private int depositNumberField;
        
        private string bCContractNumberField;
        
        private System.DateTime depositDateField;
        
        private double depositAmountField;
        
        private string depositReferenceField;
        
        private string depositAmountTypeField;
        
        /// <remarks/>
        public string OpportunityID {
            get {
                return this.opportunityIDField;
            }
            set {
                this.opportunityIDField = value;
            }
        }
        
        /// <remarks/>
        public string DepositSaleType {
            get {
                return this.depositSaleTypeField;
            }
            set {
                this.depositSaleTypeField = value;
            }
        }
        
        /// <remarks/>
        public string DepositType {
            get {
                return this.depositTypeField;
            }
            set {
                this.depositTypeField = value;
            }
        }
        
        /// <remarks/>
        public int DepositNumber {
            get {
                return this.depositNumberField;
            }
            set {
                this.depositNumberField = value;
            }
        }
        
        /// <remarks/>
        public string BCContractNumber {
            get {
                return this.bCContractNumberField;
            }
            set {
                this.bCContractNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime DepositDate {
            get {
                return this.depositDateField;
            }
            set {
                this.depositDateField = value;
            }
        }
        
        /// <remarks/>
        public double DepositAmount {
            get {
                return this.depositAmountField;
            }
            set {
                this.depositAmountField = value;
            }
        }
        
        /// <remarks/>
        public string DepositReference {
            get {
                return this.depositReferenceField;
            }
            set {
                this.depositReferenceField = value;
            }
        }
        
        /// <remarks/>
        public string DepositAmountType {
            get {
                return this.depositAmountTypeField;
            }
            set {
                this.depositAmountTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteDetailsForOpportunityContractCompletedEventHandler(object sender, GetSiteDetailsForOpportunityContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDetailsForOpportunityContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteDetailsForOpportunityContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteDetailsForOpportunityByContractNumberCompletedEventHandler(object sender, GetSiteDetailsForOpportunityByContractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDetailsForOpportunityByContractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteDetailsForOpportunityByContractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SiteDetails Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SiteDetails)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteDetailsForOpportunityContractInDataSetCompletedEventHandler(object sender, GetSiteDetailsForOpportunityContractInDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDetailsForOpportunityContractInDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteDetailsForOpportunityContractInDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddContractToOpportunityCompletedEventHandler(object sender, AddContractToOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddContractToOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddContractToOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CheckOpportunityHasContractCompletedEventHandler(object sender, CheckOpportunityHasContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOpportunityHasContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOpportunityHasContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContractOfOpportunityCompletedEventHandler(object sender, UpdateContractOfOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContractOfOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContractOfOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateBlankSiteDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepositedContractDetailsForACustomerCompletedEventHandler(object sender, GetDepositedContractDetailsForACustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositedContractDetailsForACustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositedContractDetailsForACustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateOpportunityRatingFinanceApprovalCompletedEventHandler(object sender, UpdateOpportunityRatingFinanceApprovalCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOpportunityRatingFinanceApprovalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOpportunityRatingFinanceApprovalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateOpportunityRatingCompletedEventHandler(object sender, UpdateOpportunityRatingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOpportunityRatingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOpportunityRatingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateOpportunityFirstHomeBuyerFlagCompletedEventHandler(object sender, UpdateOpportunityFirstHomeBuyerFlagCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateOpportunityFirstHomeBuyerFlagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateOpportunityFirstHomeBuyerFlagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventHandler(object sender, GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOpportunitySalesStatusRatingFinanceApprovalAttributesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepositDetailsByOpportunityCompletedEventHandler(object sender, GetDepositDetailsByOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositDetailsByOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositDetailsByOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Deposit Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Deposit)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepositDetailsByContractNoCompletedEventHandler(object sender, GetDepositDetailsByContractNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositDetailsByContractNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositDetailsByContractNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Deposit Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Deposit)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveDepositDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepositDetailsForOpportunityInDataSetCompletedEventHandler(object sender, GetDepositDetailsForOpportunityInDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositDetailsForOpportunityInDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositDetailsForOpportunityInDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSalesStatusCompletedEventHandler(object sender, UpdateSalesStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSalesStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSalesStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSalesStatusCommentsCompletedEventHandler(object sender, UpdateSalesStatusCommentsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSalesStatusCommentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSalesStatusCommentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetGeneralInfoSeminarInfoByOpportunityCompletedEventHandler(object sender, GetGeneralInfoSeminarInfoByOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGeneralInfoSeminarInfoByOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGeneralInfoSeminarInfoByOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRMLeadGenralSeminarInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRMLeadGenralSeminarInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrimaryContactByLeadCompletedEventHandler(object sender, GetPrimaryContactByLeadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimaryContactByLeadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimaryContactByLeadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CRMContact Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CRMContact)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPrimaryContactByLeadAsDataSetCompletedEventHandler(object sender, GetPrimaryContactByLeadAsDataSetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrimaryContactByLeadAsDataSetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrimaryContactByLeadAsDataSetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateFinanceConsultantForAnOpportunityCompletedEventHandler(object sender, UpdateFinanceConsultantForAnOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateFinanceConsultantForAnOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateFinanceConsultantForAnOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteLeadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserListAsXMLCompletedEventHandler(object sender, GetUserListAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_CreateFolderCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_UpdateFolderNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventHandler(object sender, Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sharepoint_GetSharepointFolderInfoByOpportunityIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string oldname {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_GetSharepointFileListInFolderCompletedEventHandler(object sender, Sharepoint_GetSharepointFileListInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sharepoint_GetSharepointFileListInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sharepoint_GetSharepointFileListInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_GetFolderFileListCompletedEventHandler(object sender, Sharepoint_GetFolderFileListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Sharepoint_GetFolderFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Sharepoint_GetFolderFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int listcount {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_UploadAttachementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void Sharepoint_RemoveFileFromListCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContractCustomerDetailsByContractNumberCompletedEventHandler(object sender, GetContractCustomerDetailsByContractNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractCustomerDetailsByContractNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractCustomerDetailsByContractNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBCContactsForCustomerCompletedEventHandler(object sender, GetBCContactsForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBCContactsForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBCContactsForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void ReconnectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestWebServiceCompletedEventHandler(object sender, TestWebServiceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestWebServiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestWebServiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestBCLinkCompletedEventHandler(object sender, TestBCLinkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TestBCLinkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TestBCLinkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserListCompletedEventHandler(object sender, GetUserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompanyListCompletedEventHandler(object sender, GetCompanyListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCompanyCompletedEventHandler(object sender, GetCompanyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSalesCentreListCompletedEventHandler(object sender, GetSalesCentreListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSalesCentreListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSalesCentreListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEventDetailsForContractCompletedEventHandler(object sender, GetEventDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEventDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEventDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPromotionListCompletedEventHandler(object sender, GetPromotionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromotionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromotionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPromotionCodeForAContractCompletedEventHandler(object sender, GetPromotionCodeForAContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromotionCodeForAContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromotionCodeForAContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSaleTypeListCompletedEventHandler(object sender, GetSaleTypeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaleTypeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaleTypeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCouncilListCompletedEventHandler(object sender, GetCouncilListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouncilListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouncilListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLandDeveloperListCompletedEventHandler(object sender, GetLandDeveloperListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLandDeveloperListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLandDeveloperListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetLendingAuthorityListCompletedEventHandler(object sender, GetLendingAuthorityListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLendingAuthorityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLendingAuthorityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSolicitorListCompletedEventHandler(object sender, GetSolicitorListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolicitorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolicitorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSolicitorDetailsCompletedEventHandler(object sender, GetSolicitorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolicitorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolicitorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSolicitorDetailsFromSQSCompletedEventHandler(object sender, GetSolicitorDetailsFromSQSCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolicitorDetailsFromSQSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolicitorDetailsFromSQSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSolicitorDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSolicitorDetailsByOpportunityCompletedEventHandler(object sender, GetSolicitorDetailsByOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSolicitorDetailsByOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSolicitorDetailsByOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Solicitor Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Solicitor)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactStatesCompletedEventHandler(object sender, GetContactStatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactTitlesCompletedEventHandler(object sender, GetContactTitlesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactTitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactTitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerListForUserSortPageCompletedEventHandler(object sender, GetCustomerListForUserSortPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListForUserSortPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListForUserSortPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRows {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerListSortPageCompletedEventHandler(object sender, GetCustomerListSortPageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListSortPageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListSortPageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRows {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerListForUserSortPage2CompletedEventHandler(object sender, GetCustomerListForUserSortPage2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListForUserSortPage2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListForUserSortPage2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRows {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerListSortPage2CompletedEventHandler(object sender, GetCustomerListSortPage2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListSortPage2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListSortPage2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int totalRows {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactListForCustomerCompletedEventHandler(object sender, GetContactListForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetActiveContactListForCustomerCompletedEventHandler(object sender, GetActiveContactListForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetActiveContactListForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetActiveContactListForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactListForCustomerWithSequenceCompletedEventHandler(object sender, GetContactListForCustomerWithSequenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListForCustomerWithSequenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListForCustomerWithSequenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateCustomerCompletedEventHandler(object sender, CreateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateCustomerWithKeyCompletedEventHandler(object sender, CreateCustomerWithKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerWithKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerWithKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateContactCompletedEventHandler(object sender, CreateContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContactCompletedEventHandler(object sender, UpdateContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void DeleteContactFromCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContractListForCustomerCompletedEventHandler(object sender, GetContractListForCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractListForCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractListForCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEstimateListCompletedEventHandler(object sender, GetEstimateListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEstimateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEstimateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEstimateListByAccountCompletedEventHandler(object sender, GetEstimateListByAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEstimateListByAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEstimateListByAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEstimateHeaderDetailsCompletedEventHandler(object sender, GetEstimateHeaderDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEstimateHeaderDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEstimateHeaderDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetEstimatePromotionCompletedEventHandler(object sender, GetEstimatePromotionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEstimatePromotionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEstimatePromotionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentEstimateHouseDetailsByContractCompletedEventHandler(object sender, GetCurrentEstimateHouseDetailsByContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentEstimateHouseDetailsByContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentEstimateHouseDetailsByContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCurrentEstimateHouseDetailsByEstimateCompletedEventHandler(object sender, GetCurrentEstimateHouseDetailsByEstimateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCurrentEstimateHouseDetailsByEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCurrentEstimateHouseDetailsByEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPromotionDetailsCompletedEventHandler(object sender, GetPromotionDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPromotionDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPromotionDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsEstimateCompleteCompletedEventHandler(object sender, IsEstimateCompleteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEstimateCompleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEstimateCompleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContractDetailsCompletedEventHandler(object sender, GetContractDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateContractCompletedEventHandler(object sender, CreateContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void CreateContractWithKeyCompletedEventHandler(object sender, CreateContractWithKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateContractWithKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateContractWithKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContractCompletedEventHandler(object sender, UpdateContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContractForOtherSiteDetailsCompletedEventHandler(object sender, UpdateContractForOtherSiteDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContractForOtherSiteDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContractForOtherSiteDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDepositDetailsForContractCompletedEventHandler(object sender, GetDepositDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepositDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepositDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AcceptDepositCompletedEventHandler(object sender, AcceptDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void RegisterEventHFCompletedEventHandler(object sender, RegisterEventHFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RegisterEventHFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RegisterEventHFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errormessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetSiteDetailsForContractCompletedEventHandler(object sender, GetSiteDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSiteDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSiteDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSiteDetailsForSuppliersCompletedEventHandler(object sender, SaveSiteDetailsForSuppliersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSiteDetailsForSuppliersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSiteDetailsForSuppliersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSiteDetailsForContractCompletedEventHandler(object sender, SaveSiteDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveSiteDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveSiteDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsEstimateExpiredCompletedEventHandler(object sender, IsEstimateExpiredCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsEstimateExpiredCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsEstimateExpiredCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetBudgetDetailsForContractCompletedEventHandler(object sender, GetBudgetDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBudgetDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBudgetDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveBudgetDetailsForContractCompletedEventHandler(object sender, SaveBudgetDetailsForContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveBudgetDetailsForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveBudgetDetailsForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetDependencyForEstimateCompletedEventHandler(object sender, GetDependencyForEstimateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDependencyForEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDependencyForEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContractJobNumberCompletedEventHandler(object sender, GetContractJobNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractJobNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractJobNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPreliminarySupplierListCompletedEventHandler(object sender, GetPreliminarySupplierListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreliminarySupplierListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreliminarySupplierListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetPreliminarySupplierDetailsCompletedEventHandler(object sender, GetPreliminarySupplierDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPreliminarySupplierDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPreliminarySupplierDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddItemTestCompletedEventHandler(object sender, AddItemTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddItemTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddItemTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void TestCreateCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AcceptEstimateCompletedEventHandler(object sender, AcceptEstimateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AcceptEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AcceptEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UnregisterEventCompletedEventHandler(object sender, UnregisterEventCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnregisterEventCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnregisterEventCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateContractAfterDepositCompletedEventHandler(object sender, UpdateContractAfterDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateContractAfterDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateContractAfterDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateSalesTypeAfterDepositCompletedEventHandler(object sender, UpdateSalesTypeAfterDepositCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSalesTypeAfterDepositCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateSalesTypeAfterDepositCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCustomerAfterDepositCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserCatCodeCompletedEventHandler(object sender, GetUserCatCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCatCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCatCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetUserInitailAndCatCodeCompletedEventHandler(object sender, GetUserInitailAndCatCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserInitailAndCatCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserInitailAndCatCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCustomerListForUserSortPageFromCRMCompletedEventHandler(object sender, GetCustomerListForUserSortPageFromCRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerListForUserSortPageFromCRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerListForUserSortPageFromCRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddCRMContactCompletedEventHandler(object sender, AddCRMContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddCRMContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddCRMContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContactListForCustomerFromCRMCompletedEventHandler(object sender, GetContactListForCustomerFromCRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContactListForCustomerFromCRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContactListForCustomerFromCRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCRMContactCompletedEventHandler(object sender, UpdateCRMContactCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCRMContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCRMContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void UpdateCRMContractCompletedEventHandler(object sender, UpdateCRMContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateCRMContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateCRMContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetContractOpportunityListForCustomerFromCRMCompletedEventHandler(object sender, GetContractOpportunityListForCustomerFromCRMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetContractOpportunityListForCustomerFromCRMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetContractOpportunityListForCustomerFromCRMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AddOpportunityCompletedEventHandler(object sender, AddOpportunityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOpportunityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOpportunityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void SaveSiteDetailsForOpportunityContractCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591