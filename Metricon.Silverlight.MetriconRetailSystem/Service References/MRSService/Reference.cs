//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace Metricon.Silverlight.MetriconRetailSystem.MRSService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractDraftActionAvailability", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class ContractDraftActionAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ApplianceSelectionAvailableField;
        
        private bool CarpetSelectionAvailableField;
        
        private bool ColourSelectionAvailableField;
        
        private bool CurtainSelectionAvailableField;
        
        private bool DeckingSelectionAvailableField;
        
        private bool ElectricalSelectionAvailableField;
        
        private bool FloorSelectionAvailableField;
        
        private bool LandscapingSelectionAvailableField;
        
        private bool PavingSelectionAvailableField;
        
        private bool StudioMAvailableField;
        
        private bool TilesSelectionAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ApplianceSelectionAvailable {
            get {
                return this.ApplianceSelectionAvailableField;
            }
            set {
                if ((this.ApplianceSelectionAvailableField.Equals(value) != true)) {
                    this.ApplianceSelectionAvailableField = value;
                    this.RaisePropertyChanged("ApplianceSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CarpetSelectionAvailable {
            get {
                return this.CarpetSelectionAvailableField;
            }
            set {
                if ((this.CarpetSelectionAvailableField.Equals(value) != true)) {
                    this.CarpetSelectionAvailableField = value;
                    this.RaisePropertyChanged("CarpetSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ColourSelectionAvailable {
            get {
                return this.ColourSelectionAvailableField;
            }
            set {
                if ((this.ColourSelectionAvailableField.Equals(value) != true)) {
                    this.ColourSelectionAvailableField = value;
                    this.RaisePropertyChanged("ColourSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CurtainSelectionAvailable {
            get {
                return this.CurtainSelectionAvailableField;
            }
            set {
                if ((this.CurtainSelectionAvailableField.Equals(value) != true)) {
                    this.CurtainSelectionAvailableField = value;
                    this.RaisePropertyChanged("CurtainSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DeckingSelectionAvailable {
            get {
                return this.DeckingSelectionAvailableField;
            }
            set {
                if ((this.DeckingSelectionAvailableField.Equals(value) != true)) {
                    this.DeckingSelectionAvailableField = value;
                    this.RaisePropertyChanged("DeckingSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ElectricalSelectionAvailable {
            get {
                return this.ElectricalSelectionAvailableField;
            }
            set {
                if ((this.ElectricalSelectionAvailableField.Equals(value) != true)) {
                    this.ElectricalSelectionAvailableField = value;
                    this.RaisePropertyChanged("ElectricalSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FloorSelectionAvailable {
            get {
                return this.FloorSelectionAvailableField;
            }
            set {
                if ((this.FloorSelectionAvailableField.Equals(value) != true)) {
                    this.FloorSelectionAvailableField = value;
                    this.RaisePropertyChanged("FloorSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LandscapingSelectionAvailable {
            get {
                return this.LandscapingSelectionAvailableField;
            }
            set {
                if ((this.LandscapingSelectionAvailableField.Equals(value) != true)) {
                    this.LandscapingSelectionAvailableField = value;
                    this.RaisePropertyChanged("LandscapingSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PavingSelectionAvailable {
            get {
                return this.PavingSelectionAvailableField;
            }
            set {
                if ((this.PavingSelectionAvailableField.Equals(value) != true)) {
                    this.PavingSelectionAvailableField = value;
                    this.RaisePropertyChanged("PavingSelectionAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StudioMAvailable {
            get {
                return this.StudioMAvailableField;
            }
            set {
                if ((this.StudioMAvailableField.Equals(value) != true)) {
                    this.StudioMAvailableField = value;
                    this.RaisePropertyChanged("StudioMAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TilesSelectionAvailable {
            get {
                return this.TilesSelectionAvailableField;
            }
            set {
                if ((this.TilesSelectionAvailableField.Equals(value) != true)) {
                    this.TilesSelectionAvailableField = value;
                    this.RaisePropertyChanged("TilesSelectionAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FinalContractActionAvailability", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class FinalContractActionAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool BuildingVariationAvailableField;
        
        private bool PreSiteVariationAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuildingVariationAvailable {
            get {
                return this.BuildingVariationAvailableField;
            }
            set {
                if ((this.BuildingVariationAvailableField.Equals(value) != true)) {
                    this.BuildingVariationAvailableField = value;
                    this.RaisePropertyChanged("BuildingVariationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreSiteVariationAvailable {
            get {
                return this.PreSiteVariationAvailableField;
            }
            set {
                if ((this.PreSiteVariationAvailableField.Equals(value) != true)) {
                    this.PreSiteVariationAvailableField = value;
                    this.RaisePropertyChanged("PreSiteVariationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerSupportActionAvailability", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class CustomerSupportActionAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AssignSTMSplitAvailableField;
        
        private bool BuildingVariationAvailableField;
        
        private bool ChangeContractTypeAvailableField;
        
        private bool ChangeJobFlowTypeAvailableField;
        
        private bool ContractDraftAvailableField;
        
        private bool CustomerSupportAvailableField;
        
        private bool FinalContractAvailableField;
        
        private bool PreSiteVariationAvailableField;
        
        private bool PreStudioVariationAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AssignSTMSplitAvailable {
            get {
                return this.AssignSTMSplitAvailableField;
            }
            set {
                if ((this.AssignSTMSplitAvailableField.Equals(value) != true)) {
                    this.AssignSTMSplitAvailableField = value;
                    this.RaisePropertyChanged("AssignSTMSplitAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BuildingVariationAvailable {
            get {
                return this.BuildingVariationAvailableField;
            }
            set {
                if ((this.BuildingVariationAvailableField.Equals(value) != true)) {
                    this.BuildingVariationAvailableField = value;
                    this.RaisePropertyChanged("BuildingVariationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeContractTypeAvailable {
            get {
                return this.ChangeContractTypeAvailableField;
            }
            set {
                if ((this.ChangeContractTypeAvailableField.Equals(value) != true)) {
                    this.ChangeContractTypeAvailableField = value;
                    this.RaisePropertyChanged("ChangeContractTypeAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeJobFlowTypeAvailable {
            get {
                return this.ChangeJobFlowTypeAvailableField;
            }
            set {
                if ((this.ChangeJobFlowTypeAvailableField.Equals(value) != true)) {
                    this.ChangeJobFlowTypeAvailableField = value;
                    this.RaisePropertyChanged("ChangeJobFlowTypeAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ContractDraftAvailable {
            get {
                return this.ContractDraftAvailableField;
            }
            set {
                if ((this.ContractDraftAvailableField.Equals(value) != true)) {
                    this.ContractDraftAvailableField = value;
                    this.RaisePropertyChanged("ContractDraftAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CustomerSupportAvailable {
            get {
                return this.CustomerSupportAvailableField;
            }
            set {
                if ((this.CustomerSupportAvailableField.Equals(value) != true)) {
                    this.CustomerSupportAvailableField = value;
                    this.RaisePropertyChanged("CustomerSupportAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool FinalContractAvailable {
            get {
                return this.FinalContractAvailableField;
            }
            set {
                if ((this.FinalContractAvailableField.Equals(value) != true)) {
                    this.FinalContractAvailableField = value;
                    this.RaisePropertyChanged("FinalContractAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreSiteVariationAvailable {
            get {
                return this.PreSiteVariationAvailableField;
            }
            set {
                if ((this.PreSiteVariationAvailableField.Equals(value) != true)) {
                    this.PreSiteVariationAvailableField = value;
                    this.RaisePropertyChanged("PreSiteVariationAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreStudioVariationAvailable {
            get {
                return this.PreStudioVariationAvailableField;
            }
            set {
                if ((this.PreStudioVariationAvailableField.Equals(value) != true)) {
                    this.PreStudioVariationAvailableField = value;
                    this.RaisePropertyChanged("PreStudioVariationAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SalesEstimatorActionAvailability", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SalesEstimatorActionAvailability : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool ChangeContractTypeAvailableField;
        
        private bool ChangeFacadeAvailableField;
        
        private bool ChangeJobFlowTypeAvailableField;
        
        private bool ChangePriceEffectiveDateAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeContractTypeAvailable {
            get {
                return this.ChangeContractTypeAvailableField;
            }
            set {
                if ((this.ChangeContractTypeAvailableField.Equals(value) != true)) {
                    this.ChangeContractTypeAvailableField = value;
                    this.RaisePropertyChanged("ChangeContractTypeAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeFacadeAvailable {
            get {
                return this.ChangeFacadeAvailableField;
            }
            set {
                if ((this.ChangeFacadeAvailableField.Equals(value) != true)) {
                    this.ChangeFacadeAvailableField = value;
                    this.RaisePropertyChanged("ChangeFacadeAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangeJobFlowTypeAvailable {
            get {
                return this.ChangeJobFlowTypeAvailableField;
            }
            set {
                if ((this.ChangeJobFlowTypeAvailableField.Equals(value) != true)) {
                    this.ChangeJobFlowTypeAvailableField = value;
                    this.RaisePropertyChanged("ChangeJobFlowTypeAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ChangePriceEffectiveDateAvailable {
            get {
                return this.ChangePriceEffectiveDateAvailableField;
            }
            set {
                if ((this.ChangePriceEffectiveDateAvailableField.Equals(value) != true)) {
                    this.ChangePriceEffectiveDateAvailableField = value;
                    this.RaisePropertyChanged("ChangePriceEffectiveDateAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateRevisionStatus", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public enum EstimateRevisionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkInProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accepted = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Rejected = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerDocumentDetails", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class CustomerDocumentDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<System.DateTime> AcceptedDateField;
        
        private bool ActiveField;
        
        private int CustomerDocumentIDField;
        
        private System.Nullable<int> DocumentNumberField;
        
        private string DocumentSummaryField;
        
        private string DocumentTypeField;
        
        private int EstimateRevisionIDField;
        
        private System.Nullable<int> ExtensionDaysField;
        
        private System.Nullable<System.DateTime> SentDateField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> AcceptedDate {
            get {
                return this.AcceptedDateField;
            }
            set {
                if ((this.AcceptedDateField.Equals(value) != true)) {
                    this.AcceptedDateField = value;
                    this.RaisePropertyChanged("AcceptedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerDocumentID {
            get {
                return this.CustomerDocumentIDField;
            }
            set {
                if ((this.CustomerDocumentIDField.Equals(value) != true)) {
                    this.CustomerDocumentIDField = value;
                    this.RaisePropertyChanged("CustomerDocumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DocumentNumber {
            get {
                return this.DocumentNumberField;
            }
            set {
                if ((this.DocumentNumberField.Equals(value) != true)) {
                    this.DocumentNumberField = value;
                    this.RaisePropertyChanged("DocumentNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentSummary {
            get {
                return this.DocumentSummaryField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentSummaryField, value) != true)) {
                    this.DocumentSummaryField = value;
                    this.RaisePropertyChanged("DocumentSummary");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimateRevisionID {
            get {
                return this.EstimateRevisionIDField;
            }
            set {
                if ((this.EstimateRevisionIDField.Equals(value) != true)) {
                    this.EstimateRevisionIDField = value;
                    this.RaisePropertyChanged("EstimateRevisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ExtensionDays {
            get {
                return this.ExtensionDaysField;
            }
            set {
                if ((this.ExtensionDaysField.Equals(value) != true)) {
                    this.ExtensionDaysField = value;
                    this.RaisePropertyChanged("ExtensionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SimplePAG", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SimplePAG : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalNotesField;
        
        private int AreaIDField;
        
        private string AreaNameField;
        
        private decimal CostBTPExcGSTField;
        
        private decimal CostDBCExcGSTField;
        
        private decimal CostPromoExcGSTField;
        
        private decimal CostStandardExcGSTField;
        
        private bool DerivedCostField;
        
        private string DisplayAtField;
        
        private string ExtraDescriptionField;
        
        private int GroupIDField;
        
        private string GroupNameField;
        
        private int HomeDisplayOptionIDField;
        
        private string InternalDescriptionField;
        
        private bool IsAcceptedField;
        
        private bool IsInLieuExistField;
        
        private bool IsInLieuExistPromoField;
        
        private bool IsInLieuExistStandardField;
        
        private bool IsSiteWorkField;
        
        private bool IsStandardOptionField;
        
        private bool ItemAllowToChangeDescriptionField;
        
        private bool ItemAllowToChangeDisplayCodeField;
        
        private bool ItemAllowToChangePriceField;
        
        private bool ItemAllowToChangeQuantityField;
        
        private string MarginField;
        
        private decimal PriceField;
        
        private string PriceDisplayCodeDescField;
        
        private int PriceDisplayCodeIdField;
        
        private decimal PricePromoField;
        
        private bool PricePromoSelectedField;
        
        private decimal PriceStandardField;
        
        private bool PriceStandardSelectedField;
        
        private int ProductAreaGroupIDField;
        
        private string ProductDescriptionField;
        
        private string ProductIDField;
        
        private string ProductNameField;
        
        private decimal QuantityField;
        
        private bool SelectedField;
        
        private int StandardInclusionsIDField;
        
        private decimal TotalPriceField;
        
        private string UomField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNotes {
            get {
                return this.AdditionalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNotesField, value) != true)) {
                    this.AdditionalNotesField = value;
                    this.RaisePropertyChanged("AdditionalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaID {
            get {
                return this.AreaIDField;
            }
            set {
                if ((this.AreaIDField.Equals(value) != true)) {
                    this.AreaIDField = value;
                    this.RaisePropertyChanged("AreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostBTPExcGST {
            get {
                return this.CostBTPExcGSTField;
            }
            set {
                if ((this.CostBTPExcGSTField.Equals(value) != true)) {
                    this.CostBTPExcGSTField = value;
                    this.RaisePropertyChanged("CostBTPExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostDBCExcGST {
            get {
                return this.CostDBCExcGSTField;
            }
            set {
                if ((this.CostDBCExcGSTField.Equals(value) != true)) {
                    this.CostDBCExcGSTField = value;
                    this.RaisePropertyChanged("CostDBCExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostPromoExcGST {
            get {
                return this.CostPromoExcGSTField;
            }
            set {
                if ((this.CostPromoExcGSTField.Equals(value) != true)) {
                    this.CostPromoExcGSTField = value;
                    this.RaisePropertyChanged("CostPromoExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostStandardExcGST {
            get {
                return this.CostStandardExcGSTField;
            }
            set {
                if ((this.CostStandardExcGSTField.Equals(value) != true)) {
                    this.CostStandardExcGSTField = value;
                    this.RaisePropertyChanged("CostStandardExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DerivedCost {
            get {
                return this.DerivedCostField;
            }
            set {
                if ((this.DerivedCostField.Equals(value) != true)) {
                    this.DerivedCostField = value;
                    this.RaisePropertyChanged("DerivedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayAt {
            get {
                return this.DisplayAtField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayAtField, value) != true)) {
                    this.DisplayAtField = value;
                    this.RaisePropertyChanged("DisplayAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraDescription {
            get {
                return this.ExtraDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraDescriptionField, value) != true)) {
                    this.ExtraDescriptionField = value;
                    this.RaisePropertyChanged("ExtraDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayOptionID {
            get {
                return this.HomeDisplayOptionIDField;
            }
            set {
                if ((this.HomeDisplayOptionIDField.Equals(value) != true)) {
                    this.HomeDisplayOptionIDField = value;
                    this.RaisePropertyChanged("HomeDisplayOptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalDescription {
            get {
                return this.InternalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalDescriptionField, value) != true)) {
                    this.InternalDescriptionField = value;
                    this.RaisePropertyChanged("InternalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsAccepted {
            get {
                return this.IsAcceptedField;
            }
            set {
                if ((this.IsAcceptedField.Equals(value) != true)) {
                    this.IsAcceptedField = value;
                    this.RaisePropertyChanged("IsAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInLieuExist {
            get {
                return this.IsInLieuExistField;
            }
            set {
                if ((this.IsInLieuExistField.Equals(value) != true)) {
                    this.IsInLieuExistField = value;
                    this.RaisePropertyChanged("IsInLieuExist");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInLieuExistPromo {
            get {
                return this.IsInLieuExistPromoField;
            }
            set {
                if ((this.IsInLieuExistPromoField.Equals(value) != true)) {
                    this.IsInLieuExistPromoField = value;
                    this.RaisePropertyChanged("IsInLieuExistPromo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInLieuExistStandard {
            get {
                return this.IsInLieuExistStandardField;
            }
            set {
                if ((this.IsInLieuExistStandardField.Equals(value) != true)) {
                    this.IsInLieuExistStandardField = value;
                    this.RaisePropertyChanged("IsInLieuExistStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSiteWork {
            get {
                return this.IsSiteWorkField;
            }
            set {
                if ((this.IsSiteWorkField.Equals(value) != true)) {
                    this.IsSiteWorkField = value;
                    this.RaisePropertyChanged("IsSiteWork");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsStandardOption {
            get {
                return this.IsStandardOptionField;
            }
            set {
                if ((this.IsStandardOptionField.Equals(value) != true)) {
                    this.IsStandardOptionField = value;
                    this.RaisePropertyChanged("IsStandardOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeDescription {
            get {
                return this.ItemAllowToChangeDescriptionField;
            }
            set {
                if ((this.ItemAllowToChangeDescriptionField.Equals(value) != true)) {
                    this.ItemAllowToChangeDescriptionField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeDisplayCode {
            get {
                return this.ItemAllowToChangeDisplayCodeField;
            }
            set {
                if ((this.ItemAllowToChangeDisplayCodeField.Equals(value) != true)) {
                    this.ItemAllowToChangeDisplayCodeField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeDisplayCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangePrice {
            get {
                return this.ItemAllowToChangePriceField;
            }
            set {
                if ((this.ItemAllowToChangePriceField.Equals(value) != true)) {
                    this.ItemAllowToChangePriceField = value;
                    this.RaisePropertyChanged("ItemAllowToChangePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeQuantity {
            get {
                return this.ItemAllowToChangeQuantityField;
            }
            set {
                if ((this.ItemAllowToChangeQuantityField.Equals(value) != true)) {
                    this.ItemAllowToChangeQuantityField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginField, value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceDisplayCodeDesc {
            get {
                return this.PriceDisplayCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceDisplayCodeDescField, value) != true)) {
                    this.PriceDisplayCodeDescField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceDisplayCodeId {
            get {
                return this.PriceDisplayCodeIdField;
            }
            set {
                if ((this.PriceDisplayCodeIdField.Equals(value) != true)) {
                    this.PriceDisplayCodeIdField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PricePromo {
            get {
                return this.PricePromoField;
            }
            set {
                if ((this.PricePromoField.Equals(value) != true)) {
                    this.PricePromoField = value;
                    this.RaisePropertyChanged("PricePromo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PricePromoSelected {
            get {
                return this.PricePromoSelectedField;
            }
            set {
                if ((this.PricePromoSelectedField.Equals(value) != true)) {
                    this.PricePromoSelectedField = value;
                    this.RaisePropertyChanged("PricePromoSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceStandard {
            get {
                return this.PriceStandardField;
            }
            set {
                if ((this.PriceStandardField.Equals(value) != true)) {
                    this.PriceStandardField = value;
                    this.RaisePropertyChanged("PriceStandard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriceStandardSelected {
            get {
                return this.PriceStandardSelectedField;
            }
            set {
                if ((this.PriceStandardSelectedField.Equals(value) != true)) {
                    this.PriceStandardSelectedField = value;
                    this.RaisePropertyChanged("PriceStandardSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductAreaGroupID {
            get {
                return this.ProductAreaGroupIDField;
            }
            set {
                if ((this.ProductAreaGroupIDField.Equals(value) != true)) {
                    this.ProductAreaGroupIDField = value;
                    this.RaisePropertyChanged("ProductAreaGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductID {
            get {
                return this.ProductIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIDField, value) != true)) {
                    this.ProductIDField = value;
                    this.RaisePropertyChanged("ProductID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StandardInclusionsID {
            get {
                return this.StandardInclusionsIDField;
            }
            set {
                if ((this.StandardInclusionsIDField.Equals(value) != true)) {
                    this.StandardInclusionsIDField = value;
                    this.RaisePropertyChanged("StandardInclusionsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uom {
            get {
                return this.UomField;
            }
            set {
                if ((object.ReferenceEquals(this.UomField, value) != true)) {
                    this.UomField = value;
                    this.RaisePropertyChanged("Uom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateDetails", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateDetails : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalNotesField;
        
        private int AreaIdField;
        
        private string AreaNameField;
        
        private bool ChangedField;
        
        private string ChangesField;
        
        private string CostExcGSTField;
        
        private string CreatedByField;
        
        private int CreatedByUserIdField;
        
        private string CreatedByUserManagerIdsField;
        
        private string CreatedOnField;
        
        private bool DerivedCostField;
        
        private string DerivedCostIconField;
        
        private string DerivedCostTooltipsField;
        
        private int EstimateRevisionDetailsIdField;
        
        private string ExtraDescriptionField;
        
        private int GroupIdField;
        
        private string GroupNameField;
        
        private int HomeDisplayIDField;
        
        private int HomeDisplayOptionIdField;
        
        private int HomeidField;
        
        private string InternalDescriptionField;
        
        private bool IsColMarginPercentAvailableField;
        
        private bool IsMasterPromotionField;
        
        private bool IsPrePackageItemField;
        
        private bool IsPrivateField;
        
        private bool ItemAcceptedField;
        
        private bool ItemAllowToChangeDescriptionField;
        
        private bool ItemAllowToChangeDisplayCodeField;
        
        private bool ItemAllowToChangePriceField;
        
        private bool ItemAllowToChangeQuantityField;
        
        private bool ItemAllowToRemoveField;
        
        private string MarginField;
        
        private string MarginDBCCostField;
        
        private string MarginStringField;
        
        private string ModifiedByField;
        
        private string ModifiedOnField;
        
        private int NonstandardCategoryIDField;
        
        private int NonstandardGroupIDField;
        
        private string OwnerNameField;
        
        private string PrePackageItemDescriptionField;
        
        private bool PreviousChangedField;
        
        private decimal PriceField;
        
        private string PriceDisplayCodeDescField;
        
        private int PriceDisplayCodeIdField;
        
        private int ProductAreaGroupIDField;
        
        private string ProductDescriptionField;
        
        private string ProductDescriptionShortField;
        
        private string ProductIdField;
        
        private string ProductNameField;
        
        private int ProductPhotoCountField;
        
        private bool PromotionProductField;
        
        private decimal QuantityField;
        
        private string RegionNameField;
        
        private string SOSIField;
        
        private string SOSIToolTipsField;
        
        private string SelectedImageIDField;
        
        private bool SiteWorkItemField;
        
        private int StandardInclusionIdField;
        
        private bool StandardOptionField;
        
        private string StudioMAnswerField;
        
        private bool StudioMAnswerMandatoryField;
        
        private string StudioMIconField;
        
        private bool StudioMProductField;
        
        private string StudioMQuestionField;
        
        private int StudioMSortOrderField;
        
        private string StudioMTooltipsField;
        
        private bool TemplateActiveField;
        
        private string TemplateIDField;
        
        private string TemplateNameField;
        
        private decimal TotalPriceField;
        
        private string UomField;
        
        private string UpdatedAdditionalNotesField;
        
        private string UpdatedBTPCostExcGSTField;
        
        private string UpdatedDBCCostExcGSTField;
        
        private string UpdatedExtraDescriptionField;
        
        private string UpdatedInternalDescriptionField;
        
        private bool UpdatedItemAcceptedField;
        
        private bool UpdatedItemDeletedField;
        
        private int UpdatedNonstandardCategoryIDField;
        
        private int UpdatedNonstandardGroupIDField;
        
        private decimal UpdatedPriceField;
        
        private int UpdatedPriceDisplayCodeIdField;
        
        private string UpdatedProductDescriptionField;
        
        private decimal UpdatedQuantityField;
        
        private bool UpdatedSiteWorkItemField;
        
        private decimal UpdatedTotalPriceField;
        
        private bool UseDefaultQuantityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNotes {
            get {
                return this.AdditionalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNotesField, value) != true)) {
                    this.AdditionalNotesField = value;
                    this.RaisePropertyChanged("AdditionalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaId {
            get {
                return this.AreaIdField;
            }
            set {
                if ((this.AreaIdField.Equals(value) != true)) {
                    this.AreaIdField = value;
                    this.RaisePropertyChanged("AreaId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Changed {
            get {
                return this.ChangedField;
            }
            set {
                if ((this.ChangedField.Equals(value) != true)) {
                    this.ChangedField = value;
                    this.RaisePropertyChanged("Changed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Changes {
            get {
                return this.ChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesField, value) != true)) {
                    this.ChangesField = value;
                    this.RaisePropertyChanged("Changes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CostExcGST {
            get {
                return this.CostExcGSTField;
            }
            set {
                if ((object.ReferenceEquals(this.CostExcGSTField, value) != true)) {
                    this.CostExcGSTField = value;
                    this.RaisePropertyChanged("CostExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatedByUserId {
            get {
                return this.CreatedByUserIdField;
            }
            set {
                if ((this.CreatedByUserIdField.Equals(value) != true)) {
                    this.CreatedByUserIdField = value;
                    this.RaisePropertyChanged("CreatedByUserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedByUserManagerIds {
            get {
                return this.CreatedByUserManagerIdsField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByUserManagerIdsField, value) != true)) {
                    this.CreatedByUserManagerIdsField = value;
                    this.RaisePropertyChanged("CreatedByUserManagerIds");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedOnField, value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DerivedCost {
            get {
                return this.DerivedCostField;
            }
            set {
                if ((this.DerivedCostField.Equals(value) != true)) {
                    this.DerivedCostField = value;
                    this.RaisePropertyChanged("DerivedCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DerivedCostIcon {
            get {
                return this.DerivedCostIconField;
            }
            set {
                if ((object.ReferenceEquals(this.DerivedCostIconField, value) != true)) {
                    this.DerivedCostIconField = value;
                    this.RaisePropertyChanged("DerivedCostIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DerivedCostTooltips {
            get {
                return this.DerivedCostTooltipsField;
            }
            set {
                if ((object.ReferenceEquals(this.DerivedCostTooltipsField, value) != true)) {
                    this.DerivedCostTooltipsField = value;
                    this.RaisePropertyChanged("DerivedCostTooltips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimateRevisionDetailsId {
            get {
                return this.EstimateRevisionDetailsIdField;
            }
            set {
                if ((this.EstimateRevisionDetailsIdField.Equals(value) != true)) {
                    this.EstimateRevisionDetailsIdField = value;
                    this.RaisePropertyChanged("EstimateRevisionDetailsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraDescription {
            get {
                return this.ExtraDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraDescriptionField, value) != true)) {
                    this.ExtraDescriptionField = value;
                    this.RaisePropertyChanged("ExtraDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayID {
            get {
                return this.HomeDisplayIDField;
            }
            set {
                if ((this.HomeDisplayIDField.Equals(value) != true)) {
                    this.HomeDisplayIDField = value;
                    this.RaisePropertyChanged("HomeDisplayID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayOptionId {
            get {
                return this.HomeDisplayOptionIdField;
            }
            set {
                if ((this.HomeDisplayOptionIdField.Equals(value) != true)) {
                    this.HomeDisplayOptionIdField = value;
                    this.RaisePropertyChanged("HomeDisplayOptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Homeid {
            get {
                return this.HomeidField;
            }
            set {
                if ((this.HomeidField.Equals(value) != true)) {
                    this.HomeidField = value;
                    this.RaisePropertyChanged("Homeid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalDescription {
            get {
                return this.InternalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalDescriptionField, value) != true)) {
                    this.InternalDescriptionField = value;
                    this.RaisePropertyChanged("InternalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsColMarginPercentAvailable {
            get {
                return this.IsColMarginPercentAvailableField;
            }
            set {
                if ((this.IsColMarginPercentAvailableField.Equals(value) != true)) {
                    this.IsColMarginPercentAvailableField = value;
                    this.RaisePropertyChanged("IsColMarginPercentAvailable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMasterPromotion {
            get {
                return this.IsMasterPromotionField;
            }
            set {
                if ((this.IsMasterPromotionField.Equals(value) != true)) {
                    this.IsMasterPromotionField = value;
                    this.RaisePropertyChanged("IsMasterPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrePackageItem {
            get {
                return this.IsPrePackageItemField;
            }
            set {
                if ((this.IsPrePackageItemField.Equals(value) != true)) {
                    this.IsPrePackageItemField = value;
                    this.RaisePropertyChanged("IsPrePackageItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPrivate {
            get {
                return this.IsPrivateField;
            }
            set {
                if ((this.IsPrivateField.Equals(value) != true)) {
                    this.IsPrivateField = value;
                    this.RaisePropertyChanged("IsPrivate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAccepted {
            get {
                return this.ItemAcceptedField;
            }
            set {
                if ((this.ItemAcceptedField.Equals(value) != true)) {
                    this.ItemAcceptedField = value;
                    this.RaisePropertyChanged("ItemAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeDescription {
            get {
                return this.ItemAllowToChangeDescriptionField;
            }
            set {
                if ((this.ItemAllowToChangeDescriptionField.Equals(value) != true)) {
                    this.ItemAllowToChangeDescriptionField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeDisplayCode {
            get {
                return this.ItemAllowToChangeDisplayCodeField;
            }
            set {
                if ((this.ItemAllowToChangeDisplayCodeField.Equals(value) != true)) {
                    this.ItemAllowToChangeDisplayCodeField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeDisplayCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangePrice {
            get {
                return this.ItemAllowToChangePriceField;
            }
            set {
                if ((this.ItemAllowToChangePriceField.Equals(value) != true)) {
                    this.ItemAllowToChangePriceField = value;
                    this.RaisePropertyChanged("ItemAllowToChangePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToChangeQuantity {
            get {
                return this.ItemAllowToChangeQuantityField;
            }
            set {
                if ((this.ItemAllowToChangeQuantityField.Equals(value) != true)) {
                    this.ItemAllowToChangeQuantityField = value;
                    this.RaisePropertyChanged("ItemAllowToChangeQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ItemAllowToRemove {
            get {
                return this.ItemAllowToRemoveField;
            }
            set {
                if ((this.ItemAllowToRemoveField.Equals(value) != true)) {
                    this.ItemAllowToRemoveField = value;
                    this.RaisePropertyChanged("ItemAllowToRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginField, value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginDBCCost {
            get {
                return this.MarginDBCCostField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginDBCCostField, value) != true)) {
                    this.MarginDBCCostField = value;
                    this.RaisePropertyChanged("MarginDBCCost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginString {
            get {
                return this.MarginStringField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginStringField, value) != true)) {
                    this.MarginStringField = value;
                    this.RaisePropertyChanged("MarginString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedBy {
            get {
                return this.ModifiedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedByField, value) != true)) {
                    this.ModifiedByField = value;
                    this.RaisePropertyChanged("ModifiedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModifiedOn {
            get {
                return this.ModifiedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.ModifiedOnField, value) != true)) {
                    this.ModifiedOnField = value;
                    this.RaisePropertyChanged("ModifiedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NonstandardCategoryID {
            get {
                return this.NonstandardCategoryIDField;
            }
            set {
                if ((this.NonstandardCategoryIDField.Equals(value) != true)) {
                    this.NonstandardCategoryIDField = value;
                    this.RaisePropertyChanged("NonstandardCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NonstandardGroupID {
            get {
                return this.NonstandardGroupIDField;
            }
            set {
                if ((this.NonstandardGroupIDField.Equals(value) != true)) {
                    this.NonstandardGroupIDField = value;
                    this.RaisePropertyChanged("NonstandardGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrePackageItemDescription {
            get {
                return this.PrePackageItemDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PrePackageItemDescriptionField, value) != true)) {
                    this.PrePackageItemDescriptionField = value;
                    this.RaisePropertyChanged("PrePackageItemDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreviousChanged {
            get {
                return this.PreviousChangedField;
            }
            set {
                if ((this.PreviousChangedField.Equals(value) != true)) {
                    this.PreviousChangedField = value;
                    this.RaisePropertyChanged("PreviousChanged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceDisplayCodeDesc {
            get {
                return this.PriceDisplayCodeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceDisplayCodeDescField, value) != true)) {
                    this.PriceDisplayCodeDescField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceDisplayCodeId {
            get {
                return this.PriceDisplayCodeIdField;
            }
            set {
                if ((this.PriceDisplayCodeIdField.Equals(value) != true)) {
                    this.PriceDisplayCodeIdField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductAreaGroupID {
            get {
                return this.ProductAreaGroupIDField;
            }
            set {
                if ((this.ProductAreaGroupIDField.Equals(value) != true)) {
                    this.ProductAreaGroupIDField = value;
                    this.RaisePropertyChanged("ProductAreaGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescriptionShort {
            get {
                return this.ProductDescriptionShortField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionShortField, value) != true)) {
                    this.ProductDescriptionShortField = value;
                    this.RaisePropertyChanged("ProductDescriptionShort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductIdField, value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductPhotoCount {
            get {
                return this.ProductPhotoCountField;
            }
            set {
                if ((this.ProductPhotoCountField.Equals(value) != true)) {
                    this.ProductPhotoCountField = value;
                    this.RaisePropertyChanged("ProductPhotoCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromotionProduct {
            get {
                return this.PromotionProductField;
            }
            set {
                if ((this.PromotionProductField.Equals(value) != true)) {
                    this.PromotionProductField = value;
                    this.RaisePropertyChanged("PromotionProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOSI {
            get {
                return this.SOSIField;
            }
            set {
                if ((object.ReferenceEquals(this.SOSIField, value) != true)) {
                    this.SOSIField = value;
                    this.RaisePropertyChanged("SOSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SOSIToolTips {
            get {
                return this.SOSIToolTipsField;
            }
            set {
                if ((object.ReferenceEquals(this.SOSIToolTipsField, value) != true)) {
                    this.SOSIToolTipsField = value;
                    this.RaisePropertyChanged("SOSIToolTips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedImageID {
            get {
                return this.SelectedImageIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedImageIDField, value) != true)) {
                    this.SelectedImageIDField = value;
                    this.RaisePropertyChanged("SelectedImageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool SiteWorkItem {
            get {
                return this.SiteWorkItemField;
            }
            set {
                if ((this.SiteWorkItemField.Equals(value) != true)) {
                    this.SiteWorkItemField = value;
                    this.RaisePropertyChanged("SiteWorkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StandardInclusionId {
            get {
                return this.StandardInclusionIdField;
            }
            set {
                if ((this.StandardInclusionIdField.Equals(value) != true)) {
                    this.StandardInclusionIdField = value;
                    this.RaisePropertyChanged("StandardInclusionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StandardOption {
            get {
                return this.StandardOptionField;
            }
            set {
                if ((this.StandardOptionField.Equals(value) != true)) {
                    this.StandardOptionField = value;
                    this.RaisePropertyChanged("StandardOption");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMAnswer {
            get {
                return this.StudioMAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMAnswerField, value) != true)) {
                    this.StudioMAnswerField = value;
                    this.RaisePropertyChanged("StudioMAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StudioMAnswerMandatory {
            get {
                return this.StudioMAnswerMandatoryField;
            }
            set {
                if ((this.StudioMAnswerMandatoryField.Equals(value) != true)) {
                    this.StudioMAnswerMandatoryField = value;
                    this.RaisePropertyChanged("StudioMAnswerMandatory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMIcon {
            get {
                return this.StudioMIconField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMIconField, value) != true)) {
                    this.StudioMIconField = value;
                    this.RaisePropertyChanged("StudioMIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StudioMProduct {
            get {
                return this.StudioMProductField;
            }
            set {
                if ((this.StudioMProductField.Equals(value) != true)) {
                    this.StudioMProductField = value;
                    this.RaisePropertyChanged("StudioMProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMQuestion {
            get {
                return this.StudioMQuestionField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMQuestionField, value) != true)) {
                    this.StudioMQuestionField = value;
                    this.RaisePropertyChanged("StudioMQuestion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StudioMSortOrder {
            get {
                return this.StudioMSortOrderField;
            }
            set {
                if ((this.StudioMSortOrderField.Equals(value) != true)) {
                    this.StudioMSortOrderField = value;
                    this.RaisePropertyChanged("StudioMSortOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMTooltips {
            get {
                return this.StudioMTooltipsField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMTooltipsField, value) != true)) {
                    this.StudioMTooltipsField = value;
                    this.RaisePropertyChanged("StudioMTooltips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TemplateActive {
            get {
                return this.TemplateActiveField;
            }
            set {
                if ((this.TemplateActiveField.Equals(value) != true)) {
                    this.TemplateActiveField = value;
                    this.RaisePropertyChanged("TemplateActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateID {
            get {
                return this.TemplateIDField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateIDField, value) != true)) {
                    this.TemplateIDField = value;
                    this.RaisePropertyChanged("TemplateID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TemplateName {
            get {
                return this.TemplateNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TemplateNameField, value) != true)) {
                    this.TemplateNameField = value;
                    this.RaisePropertyChanged("TemplateName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uom {
            get {
                return this.UomField;
            }
            set {
                if ((object.ReferenceEquals(this.UomField, value) != true)) {
                    this.UomField = value;
                    this.RaisePropertyChanged("Uom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedAdditionalNotes {
            get {
                return this.UpdatedAdditionalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedAdditionalNotesField, value) != true)) {
                    this.UpdatedAdditionalNotesField = value;
                    this.RaisePropertyChanged("UpdatedAdditionalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedBTPCostExcGST {
            get {
                return this.UpdatedBTPCostExcGSTField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedBTPCostExcGSTField, value) != true)) {
                    this.UpdatedBTPCostExcGSTField = value;
                    this.RaisePropertyChanged("UpdatedBTPCostExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedDBCCostExcGST {
            get {
                return this.UpdatedDBCCostExcGSTField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedDBCCostExcGSTField, value) != true)) {
                    this.UpdatedDBCCostExcGSTField = value;
                    this.RaisePropertyChanged("UpdatedDBCCostExcGST");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedExtraDescription {
            get {
                return this.UpdatedExtraDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedExtraDescriptionField, value) != true)) {
                    this.UpdatedExtraDescriptionField = value;
                    this.RaisePropertyChanged("UpdatedExtraDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedInternalDescription {
            get {
                return this.UpdatedInternalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedInternalDescriptionField, value) != true)) {
                    this.UpdatedInternalDescriptionField = value;
                    this.RaisePropertyChanged("UpdatedInternalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedItemAccepted {
            get {
                return this.UpdatedItemAcceptedField;
            }
            set {
                if ((this.UpdatedItemAcceptedField.Equals(value) != true)) {
                    this.UpdatedItemAcceptedField = value;
                    this.RaisePropertyChanged("UpdatedItemAccepted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedItemDeleted {
            get {
                return this.UpdatedItemDeletedField;
            }
            set {
                if ((this.UpdatedItemDeletedField.Equals(value) != true)) {
                    this.UpdatedItemDeletedField = value;
                    this.RaisePropertyChanged("UpdatedItemDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedNonstandardCategoryID {
            get {
                return this.UpdatedNonstandardCategoryIDField;
            }
            set {
                if ((this.UpdatedNonstandardCategoryIDField.Equals(value) != true)) {
                    this.UpdatedNonstandardCategoryIDField = value;
                    this.RaisePropertyChanged("UpdatedNonstandardCategoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedNonstandardGroupID {
            get {
                return this.UpdatedNonstandardGroupIDField;
            }
            set {
                if ((this.UpdatedNonstandardGroupIDField.Equals(value) != true)) {
                    this.UpdatedNonstandardGroupIDField = value;
                    this.RaisePropertyChanged("UpdatedNonstandardGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpdatedPrice {
            get {
                return this.UpdatedPriceField;
            }
            set {
                if ((this.UpdatedPriceField.Equals(value) != true)) {
                    this.UpdatedPriceField = value;
                    this.RaisePropertyChanged("UpdatedPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UpdatedPriceDisplayCodeId {
            get {
                return this.UpdatedPriceDisplayCodeIdField;
            }
            set {
                if ((this.UpdatedPriceDisplayCodeIdField.Equals(value) != true)) {
                    this.UpdatedPriceDisplayCodeIdField = value;
                    this.RaisePropertyChanged("UpdatedPriceDisplayCodeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdatedProductDescription {
            get {
                return this.UpdatedProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdatedProductDescriptionField, value) != true)) {
                    this.UpdatedProductDescriptionField = value;
                    this.RaisePropertyChanged("UpdatedProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpdatedQuantity {
            get {
                return this.UpdatedQuantityField;
            }
            set {
                if ((this.UpdatedQuantityField.Equals(value) != true)) {
                    this.UpdatedQuantityField = value;
                    this.RaisePropertyChanged("UpdatedQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpdatedSiteWorkItem {
            get {
                return this.UpdatedSiteWorkItemField;
            }
            set {
                if ((this.UpdatedSiteWorkItemField.Equals(value) != true)) {
                    this.UpdatedSiteWorkItemField = value;
                    this.RaisePropertyChanged("UpdatedSiteWorkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpdatedTotalPrice {
            get {
                return this.UpdatedTotalPriceField;
            }
            set {
                if ((this.UpdatedTotalPriceField.Equals(value) != true)) {
                    this.UpdatedTotalPriceField = value;
                    this.RaisePropertyChanged("UpdatedTotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UseDefaultQuantity {
            get {
                return this.UseDefaultQuantityField;
            }
            set {
                if ((this.UseDefaultQuantityField.Equals(value) != true)) {
                    this.UseDefaultQuantityField = value;
                    this.RaisePropertyChanged("UseDefaultQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevisionTypePermission", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class RevisionTypePermission : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AllowToAcceptItemField;
        
        private bool AllowToAddNSRField;
        
        private bool AllowToViewStudioMTabField;
        
        private bool ReadOnlyField;
        
        private bool ValidateAcceptField;
        
        private bool ValidateStandardInclusionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToAcceptItem {
            get {
                return this.AllowToAcceptItemField;
            }
            set {
                if ((this.AllowToAcceptItemField.Equals(value) != true)) {
                    this.AllowToAcceptItemField = value;
                    this.RaisePropertyChanged("AllowToAcceptItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToAddNSR {
            get {
                return this.AllowToAddNSRField;
            }
            set {
                if ((this.AllowToAddNSRField.Equals(value) != true)) {
                    this.AllowToAddNSRField = value;
                    this.RaisePropertyChanged("AllowToAddNSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToViewStudioMTab {
            get {
                return this.AllowToViewStudioMTabField;
            }
            set {
                if ((this.AllowToViewStudioMTabField.Equals(value) != true)) {
                    this.AllowToViewStudioMTabField = value;
                    this.RaisePropertyChanged("AllowToViewStudioMTab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateAccept {
            get {
                return this.ValidateAcceptField;
            }
            set {
                if ((this.ValidateAcceptField.Equals(value) != true)) {
                    this.ValidateAcceptField = value;
                    this.RaisePropertyChanged("ValidateAccept");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateStandardInclusion {
            get {
                return this.ValidateStandardInclusionField;
            }
            set {
                if ((this.ValidateStandardInclusionField.Equals(value) != true)) {
                    this.ValidateStandardInclusionField = value;
                    this.RaisePropertyChanged("ValidateStandardInclusion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ValidationErrorMessage", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class ValidationErrorMessage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AddImageOpacityField;
        
        private bool AddVisibleField;
        
        private bool AllowGoAheadField;
        
        private double AnswerImageOpacityField;
        
        private bool AnswerVisibleField;
        
        private string AreaField;
        
        private bool CopyAsNSRField;
        
        private string ErrorIconField;
        
        private string ErrorIconToolTipsField;
        
        private string ErrorMessageField;
        
        private string GroupField;
        
        private int HomeDisplayOptionIdField;
        
        private int PagIDField;
        
        private string PossibleUpgradeField;
        
        private bool PriceUseCurrentField;
        
        private bool PriceUseNewField;
        
        private bool QuantityUseCurrentField;
        
        private bool QuantityUseNewField;
        
        private string ReasonField;
        
        private decimal SellPriceField;
        
        private double UpgradeImageOpacityField;
        
        private bool UpgradeVisibleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AddImageOpacity {
            get {
                return this.AddImageOpacityField;
            }
            set {
                if ((this.AddImageOpacityField.Equals(value) != true)) {
                    this.AddImageOpacityField = value;
                    this.RaisePropertyChanged("AddImageOpacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AddVisible {
            get {
                return this.AddVisibleField;
            }
            set {
                if ((this.AddVisibleField.Equals(value) != true)) {
                    this.AddVisibleField = value;
                    this.RaisePropertyChanged("AddVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowGoAhead {
            get {
                return this.AllowGoAheadField;
            }
            set {
                if ((this.AllowGoAheadField.Equals(value) != true)) {
                    this.AllowGoAheadField = value;
                    this.RaisePropertyChanged("AllowGoAhead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AnswerImageOpacity {
            get {
                return this.AnswerImageOpacityField;
            }
            set {
                if ((this.AnswerImageOpacityField.Equals(value) != true)) {
                    this.AnswerImageOpacityField = value;
                    this.RaisePropertyChanged("AnswerImageOpacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AnswerVisible {
            get {
                return this.AnswerVisibleField;
            }
            set {
                if ((this.AnswerVisibleField.Equals(value) != true)) {
                    this.AnswerVisibleField = value;
                    this.RaisePropertyChanged("AnswerVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Area {
            get {
                return this.AreaField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaField, value) != true)) {
                    this.AreaField = value;
                    this.RaisePropertyChanged("Area");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CopyAsNSR {
            get {
                return this.CopyAsNSRField;
            }
            set {
                if ((this.CopyAsNSRField.Equals(value) != true)) {
                    this.CopyAsNSRField = value;
                    this.RaisePropertyChanged("CopyAsNSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorIcon {
            get {
                return this.ErrorIconField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorIconField, value) != true)) {
                    this.ErrorIconField = value;
                    this.RaisePropertyChanged("ErrorIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorIconToolTips {
            get {
                return this.ErrorIconToolTipsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorIconToolTipsField, value) != true)) {
                    this.ErrorIconToolTipsField = value;
                    this.RaisePropertyChanged("ErrorIconToolTips");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayOptionId {
            get {
                return this.HomeDisplayOptionIdField;
            }
            set {
                if ((this.HomeDisplayOptionIdField.Equals(value) != true)) {
                    this.HomeDisplayOptionIdField = value;
                    this.RaisePropertyChanged("HomeDisplayOptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PagID {
            get {
                return this.PagIDField;
            }
            set {
                if ((this.PagIDField.Equals(value) != true)) {
                    this.PagIDField = value;
                    this.RaisePropertyChanged("PagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PossibleUpgrade {
            get {
                return this.PossibleUpgradeField;
            }
            set {
                if ((object.ReferenceEquals(this.PossibleUpgradeField, value) != true)) {
                    this.PossibleUpgradeField = value;
                    this.RaisePropertyChanged("PossibleUpgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriceUseCurrent {
            get {
                return this.PriceUseCurrentField;
            }
            set {
                if ((this.PriceUseCurrentField.Equals(value) != true)) {
                    this.PriceUseCurrentField = value;
                    this.RaisePropertyChanged("PriceUseCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PriceUseNew {
            get {
                return this.PriceUseNewField;
            }
            set {
                if ((this.PriceUseNewField.Equals(value) != true)) {
                    this.PriceUseNewField = value;
                    this.RaisePropertyChanged("PriceUseNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QuantityUseCurrent {
            get {
                return this.QuantityUseCurrentField;
            }
            set {
                if ((this.QuantityUseCurrentField.Equals(value) != true)) {
                    this.QuantityUseCurrentField = value;
                    this.RaisePropertyChanged("QuantityUseCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool QuantityUseNew {
            get {
                return this.QuantityUseNewField;
            }
            set {
                if ((this.QuantityUseNewField.Equals(value) != true)) {
                    this.QuantityUseNewField = value;
                    this.RaisePropertyChanged("QuantityUseNew");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellPrice {
            get {
                return this.SellPriceField;
            }
            set {
                if ((this.SellPriceField.Equals(value) != true)) {
                    this.SellPriceField = value;
                    this.RaisePropertyChanged("SellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double UpgradeImageOpacity {
            get {
                return this.UpgradeImageOpacityField;
            }
            set {
                if ((this.UpgradeImageOpacityField.Equals(value) != true)) {
                    this.UpgradeImageOpacityField = value;
                    this.RaisePropertyChanged("UpgradeImageOpacity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool UpgradeVisible {
            get {
                return this.UpgradeVisibleField;
            }
            set {
                if ((this.UpgradeVisibleField.Equals(value) != true)) {
                    this.UpgradeVisibleField = value;
                    this.RaisePropertyChanged("UpgradeVisible");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NextRevision", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class NextRevision : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NotesField;
        
        private int OwnerIdField;
        
        private int RevisionTypeIdField;
        
        private string RevisionTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionTypeId {
            get {
                return this.RevisionTypeIdField;
            }
            set {
                if ((this.RevisionTypeIdField.Equals(value) != true)) {
                    this.RevisionTypeIdField = value;
                    this.RaisePropertyChanged("RevisionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionTypeName {
            get {
                return this.RevisionTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionTypeNameField, value) != true)) {
                    this.RevisionTypeNameField = value;
                    this.RaisePropertyChanged("RevisionTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuditLog", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class AuditLog : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActionField;
        
        private string DescriptionField;
        
        private string EstimateNumberField;
        
        private string LogIdField;
        
        private System.DateTime LogTimeField;
        
        private string RevisionNumberField;
        
        private string RevisionTypeField;
        
        private string UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Action {
            get {
                return this.ActionField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionField, value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EstimateNumber {
            get {
                return this.EstimateNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.EstimateNumberField, value) != true)) {
                    this.EstimateNumberField = value;
                    this.RaisePropertyChanged("EstimateNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogId {
            get {
                return this.LogIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LogIdField, value) != true)) {
                    this.LogIdField = value;
                    this.RaisePropertyChanged("LogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogTime {
            get {
                return this.LogTimeField;
            }
            set {
                if ((this.LogTimeField.Equals(value) != true)) {
                    this.LogTimeField = value;
                    this.RaisePropertyChanged("LogTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNumberField, value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionType {
            get {
                return this.RevisionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionTypeField, value) != true)) {
                    this.RevisionTypeField = value;
                    this.RaisePropertyChanged("RevisionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RESULT_TYPE", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public enum RESULT_TYPE : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ALL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CURRENT = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DeletedItem", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class DeletedItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AdditionalNotesField;
        
        private string AreaNameField;
        
        private string CommentField;
        
        private string DeletedByField;
        
        private string DeletedOnField;
        
        private string GroupNameField;
        
        private int HomeDisplayOptionIdField;
        
        private bool IsMasterPromotionField;
        
        private decimal PriceField;
        
        private string ProductDescriptionField;
        
        private string ProductNameField;
        
        private bool PromotionProductField;
        
        private decimal QuantityField;
        
        private string ReasonField;
        
        private int RevisionIdField;
        
        private string RevisionNameField;
        
        private decimal TotalPriceField;
        
        private string UomField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalNotes {
            get {
                return this.AdditionalNotesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalNotesField, value) != true)) {
                    this.AdditionalNotesField = value;
                    this.RaisePropertyChanged("AdditionalNotes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletedBy {
            get {
                return this.DeletedByField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedByField, value) != true)) {
                    this.DeletedByField = value;
                    this.RaisePropertyChanged("DeletedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeletedOn {
            get {
                return this.DeletedOnField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletedOnField, value) != true)) {
                    this.DeletedOnField = value;
                    this.RaisePropertyChanged("DeletedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayOptionId {
            get {
                return this.HomeDisplayOptionIdField;
            }
            set {
                if ((this.HomeDisplayOptionIdField.Equals(value) != true)) {
                    this.HomeDisplayOptionIdField = value;
                    this.RaisePropertyChanged("HomeDisplayOptionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMasterPromotion {
            get {
                return this.IsMasterPromotionField;
            }
            set {
                if ((this.IsMasterPromotionField.Equals(value) != true)) {
                    this.IsMasterPromotionField = value;
                    this.RaisePropertyChanged("IsMasterPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescription {
            get {
                return this.ProductDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionField, value) != true)) {
                    this.ProductDescriptionField = value;
                    this.RaisePropertyChanged("ProductDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromotionProduct {
            get {
                return this.PromotionProductField;
            }
            set {
                if ((this.PromotionProductField.Equals(value) != true)) {
                    this.PromotionProductField = value;
                    this.RaisePropertyChanged("PromotionProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((this.RevisionIdField.Equals(value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionName {
            get {
                return this.RevisionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionNameField, value) != true)) {
                    this.RevisionNameField = value;
                    this.RaisePropertyChanged("RevisionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uom {
            get {
                return this.UomField;
            }
            set {
                if ((object.ReferenceEquals(this.UomField, value) != true)) {
                    this.UomField = value;
                    this.RaisePropertyChanged("Uom");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQSHome", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SQSHome : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool DisplayField;
        
        private int HomeIDField;
        
        private string HomeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Display {
            get {
                return this.DisplayField;
            }
            set {
                if ((this.DisplayField.Equals(value) != true)) {
                    this.DisplayField = value;
                    this.RaisePropertyChanged("Display");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeID {
            get {
                return this.HomeIDField;
            }
            set {
                if ((this.HomeIDField.Equals(value) != true)) {
                    this.HomeIDField = value;
                    this.RaisePropertyChanged("HomeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeName {
            get {
                return this.HomeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeNameField, value) != true)) {
                    this.HomeNameField = value;
                    this.RaisePropertyChanged("HomeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQSArea", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SQSArea : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AreaIDField;
        
        private string AreaNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AreaID {
            get {
                return this.AreaIDField;
            }
            set {
                if ((this.AreaIDField.Equals(value) != true)) {
                    this.AreaIDField = value;
                    this.RaisePropertyChanged("AreaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQSGroup", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SQSGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GroupIDField;
        
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupID {
            get {
                return this.GroupIDField;
            }
            set {
                if ((this.GroupIDField.Equals(value) != true)) {
                    this.GroupIDField = value;
                    this.RaisePropertyChanged("GroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractType", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class ContractType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ContractTypeIDField;
        
        private string ContractTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractTypeID {
            get {
                return this.ContractTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractTypeIDField, value) != true)) {
                    this.ContractTypeIDField = value;
                    this.RaisePropertyChanged("ContractTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractTypeName {
            get {
                return this.ContractTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractTypeNameField, value) != true)) {
                    this.ContractTypeNameField = value;
                    this.RaisePropertyChanged("ContractTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharepointDoc", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SharepointDoc : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentCategoryField;
        
        private string DocumentGroupField;
        
        private string DocumentNameField;
        
        private string DocumentTypeField;
        
        private string FileIDField;
        
        private string FileURIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentCategory {
            get {
                return this.DocumentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentCategoryField, value) != true)) {
                    this.DocumentCategoryField = value;
                    this.RaisePropertyChanged("DocumentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentGroup {
            get {
                return this.DocumentGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentGroupField, value) != true)) {
                    this.DocumentGroupField = value;
                    this.RaisePropertyChanged("DocumentGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentName {
            get {
                return this.DocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentNameField, value) != true)) {
                    this.DocumentNameField = value;
                    this.RaisePropertyChanged("DocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileID {
            get {
                return this.FileIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FileIDField, value) != true)) {
                    this.FileIDField = value;
                    this.RaisePropertyChanged("FileID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileURI {
            get {
                return this.FileURIField;
            }
            set {
                if ((object.ReferenceEquals(this.FileURIField, value) != true)) {
                    this.FileURIField = value;
                    this.RaisePropertyChanged("FileURI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SharepointDocumentType", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SharepointDocumentType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DocumentCategoryField;
        
        private string DocumentTypeField;
        
        private int DocumentTypeIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentCategory {
            get {
                return this.DocumentCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentCategoryField, value) != true)) {
                    this.DocumentCategoryField = value;
                    this.RaisePropertyChanged("DocumentCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DocumentType {
            get {
                return this.DocumentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DocumentTypeField, value) != true)) {
                    this.DocumentTypeField = value;
                    this.RaisePropertyChanged("DocumentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DocumentTypeID {
            get {
                return this.DocumentTypeIDField;
            }
            set {
                if ((this.DocumentTypeIDField.Equals(value) != true)) {
                    this.DocumentTypeIDField = value;
                    this.RaisePropertyChanged("DocumentTypeID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PAG", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class PAG : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaNameField;
        
        private string ExtraDescriptionField;
        
        private string GroupNameField;
        
        private int HomeDisplayOptionIDField;
        
        private string InternalDescriptionField;
        
        private bool IsMasterPromotionField;
        
        private bool IsSiteworkItemField;
        
        private string ProductNameField;
        
        private bool PromotionProductField;
        
        private decimal QuantityField;
        
        private decimal SellPriceField;
        
        private bool StandardOptionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExtraDescription {
            get {
                return this.ExtraDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraDescriptionField, value) != true)) {
                    this.ExtraDescriptionField = value;
                    this.RaisePropertyChanged("ExtraDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HomeDisplayOptionID {
            get {
                return this.HomeDisplayOptionIDField;
            }
            set {
                if ((this.HomeDisplayOptionIDField.Equals(value) != true)) {
                    this.HomeDisplayOptionIDField = value;
                    this.RaisePropertyChanged("HomeDisplayOptionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InternalDescription {
            get {
                return this.InternalDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InternalDescriptionField, value) != true)) {
                    this.InternalDescriptionField = value;
                    this.RaisePropertyChanged("InternalDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMasterPromotion {
            get {
                return this.IsMasterPromotionField;
            }
            set {
                if ((this.IsMasterPromotionField.Equals(value) != true)) {
                    this.IsMasterPromotionField = value;
                    this.RaisePropertyChanged("IsMasterPromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSiteworkItem {
            get {
                return this.IsSiteworkItemField;
            }
            set {
                if ((this.IsSiteworkItemField.Equals(value) != true)) {
                    this.IsSiteworkItemField = value;
                    this.RaisePropertyChanged("IsSiteworkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PromotionProduct {
            get {
                return this.PromotionProductField;
            }
            set {
                if ((this.PromotionProductField.Equals(value) != true)) {
                    this.PromotionProductField = value;
                    this.RaisePropertyChanged("PromotionProduct");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellPrice {
            get {
                return this.SellPriceField;
            }
            set {
                if ((this.SellPriceField.Equals(value) != true)) {
                    this.SellPriceField = value;
                    this.RaisePropertyChanged("SellPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool StandardOption {
            get {
                return this.StandardOptionField;
            }
            set {
                if ((this.StandardOptionField.Equals(value) != true)) {
                    this.StandardOptionField = value;
                    this.RaisePropertyChanged("StandardOption");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RoleAccessModule", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class RoleAccessModule : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool AccessMarginModuleField;
        
        private bool AccessStudioMModuleField;
        
        private int RoleIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessMarginModule {
            get {
                return this.AccessMarginModuleField;
            }
            set {
                if ((this.AccessMarginModuleField.Equals(value) != true)) {
                    this.AccessMarginModuleField = value;
                    this.RaisePropertyChanged("AccessMarginModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AccessStudioMModule {
            get {
                return this.AccessStudioMModuleField;
            }
            set {
                if ((this.AccessStudioMModuleField.Equals(value) != true)) {
                    this.AccessStudioMModuleField = value;
                    this.RaisePropertyChanged("AccessStudioMModule");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemRemoveReason", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class ItemRemoveReason : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string RemoveReasonField;
        
        private int RemoveReasonIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RemoveReason {
            get {
                return this.RemoveReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.RemoveReasonField, value) != true)) {
                    this.RemoveReasonField = value;
                    this.RaisePropertyChanged("RemoveReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RemoveReasonID {
            get {
                return this.RemoveReasonIDField;
            }
            set {
                if ((this.RemoveReasonIDField.Equals(value) != true)) {
                    this.RemoveReasonIDField = value;
                    this.RaisePropertyChanged("RemoveReasonID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StudioMItem", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class StudioMItem : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int MRSEstimateDetailsIdField;
        
        private string StudioMDefaultAnswerField;
        
        private string StudioMQestionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MRSEstimateDetailsId {
            get {
                return this.MRSEstimateDetailsIdField;
            }
            set {
                if ((this.MRSEstimateDetailsIdField.Equals(value) != true)) {
                    this.MRSEstimateDetailsIdField = value;
                    this.RaisePropertyChanged("MRSEstimateDetailsId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMDefaultAnswer {
            get {
                return this.StudioMDefaultAnswerField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMDefaultAnswerField, value) != true)) {
                    this.StudioMDefaultAnswerField = value;
                    this.RaisePropertyChanged("StudioMDefaultAnswer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StudioMQestion {
            get {
                return this.StudioMQestionField;
            }
            set {
                if ((object.ReferenceEquals(this.StudioMQestionField, value) != true)) {
                    this.StudioMQestionField = value;
                    this.RaisePropertyChanged("StudioMQestion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocuSignDocStatusInfo", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class DocuSignDocStatusInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool EnableSendViaDocuSignField;
        
        private bool EnableSignInPersonField;
        
        private bool EnableVoidField;
        
        private bool SelectedField;
        
        private string accountidField;
        
        private string deletedField;
        
        private string documentnumberField;
        
        private string documenttypeField;
        
        private string envelopeIdField;
        
        private string estimateidField;
        
        private int integrationidField;
        
        private string printtypeField;
        
        private string recipientsField;
        
        private string revisionnumberField;
        
        private string statusField;
        
        private string statusChangedDateTimeField;
        
        private string versiontypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSendViaDocuSign {
            get {
                return this.EnableSendViaDocuSignField;
            }
            set {
                if ((this.EnableSendViaDocuSignField.Equals(value) != true)) {
                    this.EnableSendViaDocuSignField = value;
                    this.RaisePropertyChanged("EnableSendViaDocuSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSignInPerson {
            get {
                return this.EnableSignInPersonField;
            }
            set {
                if ((this.EnableSignInPersonField.Equals(value) != true)) {
                    this.EnableSignInPersonField = value;
                    this.RaisePropertyChanged("EnableSignInPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableVoid {
            get {
                return this.EnableVoidField;
            }
            set {
                if ((this.EnableVoidField.Equals(value) != true)) {
                    this.EnableVoidField = value;
                    this.RaisePropertyChanged("EnableVoid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string accountid {
            get {
                return this.accountidField;
            }
            set {
                if ((object.ReferenceEquals(this.accountidField, value) != true)) {
                    this.accountidField = value;
                    this.RaisePropertyChanged("accountid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string deleted {
            get {
                return this.deletedField;
            }
            set {
                if ((object.ReferenceEquals(this.deletedField, value) != true)) {
                    this.deletedField = value;
                    this.RaisePropertyChanged("deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documentnumber {
            get {
                return this.documentnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.documentnumberField, value) != true)) {
                    this.documentnumberField = value;
                    this.RaisePropertyChanged("documentnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string documenttype {
            get {
                return this.documenttypeField;
            }
            set {
                if ((object.ReferenceEquals(this.documenttypeField, value) != true)) {
                    this.documenttypeField = value;
                    this.RaisePropertyChanged("documenttype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string envelopeId {
            get {
                return this.envelopeIdField;
            }
            set {
                if ((object.ReferenceEquals(this.envelopeIdField, value) != true)) {
                    this.envelopeIdField = value;
                    this.RaisePropertyChanged("envelopeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string estimateid {
            get {
                return this.estimateidField;
            }
            set {
                if ((object.ReferenceEquals(this.estimateidField, value) != true)) {
                    this.estimateidField = value;
                    this.RaisePropertyChanged("estimateid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int integrationid {
            get {
                return this.integrationidField;
            }
            set {
                if ((this.integrationidField.Equals(value) != true)) {
                    this.integrationidField = value;
                    this.RaisePropertyChanged("integrationid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string printtype {
            get {
                return this.printtypeField;
            }
            set {
                if ((object.ReferenceEquals(this.printtypeField, value) != true)) {
                    this.printtypeField = value;
                    this.RaisePropertyChanged("printtype");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string recipients {
            get {
                return this.recipientsField;
            }
            set {
                if ((object.ReferenceEquals(this.recipientsField, value) != true)) {
                    this.recipientsField = value;
                    this.RaisePropertyChanged("recipients");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string revisionnumber {
            get {
                return this.revisionnumberField;
            }
            set {
                if ((object.ReferenceEquals(this.revisionnumberField, value) != true)) {
                    this.revisionnumberField = value;
                    this.RaisePropertyChanged("revisionnumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string status {
            get {
                return this.statusField;
            }
            set {
                if ((object.ReferenceEquals(this.statusField, value) != true)) {
                    this.statusField = value;
                    this.RaisePropertyChanged("status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string statusChangedDateTime {
            get {
                return this.statusChangedDateTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.statusChangedDateTimeField, value) != true)) {
                    this.statusChangedDateTimeField = value;
                    this.RaisePropertyChanged("statusChangedDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string versiontype {
            get {
                return this.versiontypeField;
            }
            set {
                if ((object.ReferenceEquals(this.versiontypeField, value) != true)) {
                    this.versiontypeField = value;
                    this.RaisePropertyChanged("versiontype");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PromotionPAG", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class PromotionPAG : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaNameField;
        
        private string GroupNameField;
        
        private string IconImageField;
        
        private bool IsInMultiplePromotionField;
        
        private bool IsSiteworkItemField;
        
        private string MultiplePromotionNameField;
        
        private string ProductNameField;
        
        private decimal QuantityField;
        
        private int RevisionDetailsIDField;
        
        private bool SelectedField;
        
        private decimal SellPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IconImage {
            get {
                return this.IconImageField;
            }
            set {
                if ((object.ReferenceEquals(this.IconImageField, value) != true)) {
                    this.IconImageField = value;
                    this.RaisePropertyChanged("IconImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsInMultiplePromotion {
            get {
                return this.IsInMultiplePromotionField;
            }
            set {
                if ((this.IsInMultiplePromotionField.Equals(value) != true)) {
                    this.IsInMultiplePromotionField = value;
                    this.RaisePropertyChanged("IsInMultiplePromotion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSiteworkItem {
            get {
                return this.IsSiteworkItemField;
            }
            set {
                if ((this.IsSiteworkItemField.Equals(value) != true)) {
                    this.IsSiteworkItemField = value;
                    this.RaisePropertyChanged("IsSiteworkItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MultiplePromotionName {
            get {
                return this.MultiplePromotionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MultiplePromotionNameField, value) != true)) {
                    this.MultiplePromotionNameField = value;
                    this.RaisePropertyChanged("MultiplePromotionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionDetailsID {
            get {
                return this.RevisionDetailsIDField;
            }
            set {
                if ((this.RevisionDetailsIDField.Equals(value) != true)) {
                    this.RevisionDetailsIDField = value;
                    this.RaisePropertyChanged("RevisionDetailsID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Selected {
            get {
                return this.SelectedField;
            }
            set {
                if ((this.SelectedField.Equals(value) != true)) {
                    this.SelectedField = value;
                    this.RaisePropertyChanged("Selected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellPrice {
            get {
                return this.SellPriceField;
            }
            set {
                if ((this.SellPriceField.Equals(value) != true)) {
                    this.SellPriceField = value;
                    this.RaisePropertyChanged("SellPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CRMContact", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class CRMContact : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailField;
        
        private string FullNameField;
        
        private int SortOrderField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SortOrder {
            get {
                return this.SortOrderField;
            }
            set {
                if ((this.SortOrderField.Equals(value) != true)) {
                    this.SortOrderField = value;
                    this.RaisePropertyChanged("SortOrder");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DocuSignHistory", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class DocuSignHistory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ActionStatusField;
        
        private System.DateTime ActionTimeField;
        
        private string EnvelopeStatusField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActionStatus {
            get {
                return this.ActionStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ActionStatusField, value) != true)) {
                    this.ActionStatusField = value;
                    this.RaisePropertyChanged("ActionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ActionTime {
            get {
                return this.ActionTimeField;
            }
            set {
                if ((this.ActionTimeField.Equals(value) != true)) {
                    this.ActionTimeField = value;
                    this.RaisePropertyChanged("ActionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EnvelopeStatus {
            get {
                return this.EnvelopeStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.EnvelopeStatusField, value) != true)) {
                    this.EnvelopeStatusField = value;
                    this.RaisePropertyChanged("EnvelopeStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateGridItem", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateGridItem : Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateBase {
        
        private bool AcceptVisibleField;
        
        private bool ActivateVisibleField;
        
        private bool AllowToResetCurrentMilestoneField;
        
        private bool AllowUndoCurrentRevisionField;
        
        private bool AllowUndoSetContractField;
        
        private bool AssignToMeVisibleField;
        
        private bool AssignVisibleField;
        
        private bool CancelVisibleField;
        
        private bool CommentsVisibleField;
        
        private bool DifficultyVisibleField;
        
        private bool DueDateVisibleField;
        
        private bool EditVisibleField;
        
        private bool EffectiveDateVisibleField;
        
        private bool HistoryVisibleField;
        
        private bool OnHoldVisibleField;
        
        private bool PreviewVisibleField;
        
        private int PreviousRevisionIdField;
        
        private bool RejectVisibleField;
        
        private string RevisionDetailsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AcceptVisible {
            get {
                return this.AcceptVisibleField;
            }
            set {
                if ((this.AcceptVisibleField.Equals(value) != true)) {
                    this.AcceptVisibleField = value;
                    this.RaisePropertyChanged("AcceptVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ActivateVisible {
            get {
                return this.ActivateVisibleField;
            }
            set {
                if ((this.ActivateVisibleField.Equals(value) != true)) {
                    this.ActivateVisibleField = value;
                    this.RaisePropertyChanged("ActivateVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToResetCurrentMilestone {
            get {
                return this.AllowToResetCurrentMilestoneField;
            }
            set {
                if ((this.AllowToResetCurrentMilestoneField.Equals(value) != true)) {
                    this.AllowToResetCurrentMilestoneField = value;
                    this.RaisePropertyChanged("AllowToResetCurrentMilestone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUndoCurrentRevision {
            get {
                return this.AllowUndoCurrentRevisionField;
            }
            set {
                if ((this.AllowUndoCurrentRevisionField.Equals(value) != true)) {
                    this.AllowUndoCurrentRevisionField = value;
                    this.RaisePropertyChanged("AllowUndoCurrentRevision");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowUndoSetContract {
            get {
                return this.AllowUndoSetContractField;
            }
            set {
                if ((this.AllowUndoSetContractField.Equals(value) != true)) {
                    this.AllowUndoSetContractField = value;
                    this.RaisePropertyChanged("AllowUndoSetContract");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AssignToMeVisible {
            get {
                return this.AssignToMeVisibleField;
            }
            set {
                if ((this.AssignToMeVisibleField.Equals(value) != true)) {
                    this.AssignToMeVisibleField = value;
                    this.RaisePropertyChanged("AssignToMeVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AssignVisible {
            get {
                return this.AssignVisibleField;
            }
            set {
                if ((this.AssignVisibleField.Equals(value) != true)) {
                    this.AssignVisibleField = value;
                    this.RaisePropertyChanged("AssignVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CancelVisible {
            get {
                return this.CancelVisibleField;
            }
            set {
                if ((this.CancelVisibleField.Equals(value) != true)) {
                    this.CancelVisibleField = value;
                    this.RaisePropertyChanged("CancelVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool CommentsVisible {
            get {
                return this.CommentsVisibleField;
            }
            set {
                if ((this.CommentsVisibleField.Equals(value) != true)) {
                    this.CommentsVisibleField = value;
                    this.RaisePropertyChanged("CommentsVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DifficultyVisible {
            get {
                return this.DifficultyVisibleField;
            }
            set {
                if ((this.DifficultyVisibleField.Equals(value) != true)) {
                    this.DifficultyVisibleField = value;
                    this.RaisePropertyChanged("DifficultyVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool DueDateVisible {
            get {
                return this.DueDateVisibleField;
            }
            set {
                if ((this.DueDateVisibleField.Equals(value) != true)) {
                    this.DueDateVisibleField = value;
                    this.RaisePropertyChanged("DueDateVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EditVisible {
            get {
                return this.EditVisibleField;
            }
            set {
                if ((this.EditVisibleField.Equals(value) != true)) {
                    this.EditVisibleField = value;
                    this.RaisePropertyChanged("EditVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EffectiveDateVisible {
            get {
                return this.EffectiveDateVisibleField;
            }
            set {
                if ((this.EffectiveDateVisibleField.Equals(value) != true)) {
                    this.EffectiveDateVisibleField = value;
                    this.RaisePropertyChanged("EffectiveDateVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HistoryVisible {
            get {
                return this.HistoryVisibleField;
            }
            set {
                if ((this.HistoryVisibleField.Equals(value) != true)) {
                    this.HistoryVisibleField = value;
                    this.RaisePropertyChanged("HistoryVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnHoldVisible {
            get {
                return this.OnHoldVisibleField;
            }
            set {
                if ((this.OnHoldVisibleField.Equals(value) != true)) {
                    this.OnHoldVisibleField = value;
                    this.RaisePropertyChanged("OnHoldVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PreviewVisible {
            get {
                return this.PreviewVisibleField;
            }
            set {
                if ((this.PreviewVisibleField.Equals(value) != true)) {
                    this.PreviewVisibleField = value;
                    this.RaisePropertyChanged("PreviewVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PreviousRevisionId {
            get {
                return this.PreviousRevisionIdField;
            }
            set {
                if ((this.PreviousRevisionIdField.Equals(value) != true)) {
                    this.PreviousRevisionIdField = value;
                    this.RaisePropertyChanged("PreviousRevisionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RejectVisible {
            get {
                return this.RejectVisibleField;
            }
            set {
                if ((this.RejectVisibleField.Equals(value) != true)) {
                    this.RejectVisibleField = value;
                    this.RaisePropertyChanged("RejectVisible");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionDetails {
            get {
                return this.RevisionDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionDetailsField, value) != true)) {
                    this.RevisionDetailsField = value;
                    this.RaisePropertyChanged("RevisionDetails");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateBase", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem))]
    public partial class EstimateBase : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccountidField;
        
        private bool AllowToAcceptItemField;
        
        private bool AllowToAddNSRField;
        
        private bool AllowToViewStudioMDocuSignField;
        
        private bool AllowToViewStudioMTabField;
        
        private System.DateTime AppointmentDateField;
        
        private string BusinessUnitField;
        
        private string ContractIDField;
        
        private int ContractNumberField;
        
        private string ContractStatusNameField;
        
        private string ContractTypeField;
        
        private System.DateTime CreatedOnField;
        
        private string CustomerNameField;
        
        private int CustomerNumberField;
        
        private string DifficultyRatingField;
        
        private int DifficultyRatingIdField;
        
        private System.DateTime DueDateField;
        
        private int EditEstimateUserIDField;
        
        private string EditEstimateUserNameField;
        
        private int EstimateIdField;
        
        private string HomeNameField;
        
        private string JobFlowTypeField;
        
        private string JobLocationField;
        
        private string MRSGroupField;
        
        private string OpportunityidField;
        
        private int OwnerIdField;
        
        private string OwnerNameField;
        
        private string PhoneField;
        
        private bool ReadOnlyField;
        
        private int RecordIdField;
        
        private string RecordTypeField;
        
        private int RegionIDField;
        
        private int RevisionNumberField;
        
        private string RevisionTypeCodeField;
        
        private int RevisionTypeIdField;
        
        private string SalesConsultantNameField;
        
        private int StatusIdField;
        
        private string StatusNameField;
        
        private bool ValidateAcceptedFlagField;
        
        private bool ValidateStandardInclusionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Accountid {
            get {
                return this.AccountidField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountidField, value) != true)) {
                    this.AccountidField = value;
                    this.RaisePropertyChanged("Accountid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToAcceptItem {
            get {
                return this.AllowToAcceptItemField;
            }
            set {
                if ((this.AllowToAcceptItemField.Equals(value) != true)) {
                    this.AllowToAcceptItemField = value;
                    this.RaisePropertyChanged("AllowToAcceptItem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToAddNSR {
            get {
                return this.AllowToAddNSRField;
            }
            set {
                if ((this.AllowToAddNSRField.Equals(value) != true)) {
                    this.AllowToAddNSRField = value;
                    this.RaisePropertyChanged("AllowToAddNSR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToViewStudioMDocuSign {
            get {
                return this.AllowToViewStudioMDocuSignField;
            }
            set {
                if ((this.AllowToViewStudioMDocuSignField.Equals(value) != true)) {
                    this.AllowToViewStudioMDocuSignField = value;
                    this.RaisePropertyChanged("AllowToViewStudioMDocuSign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool AllowToViewStudioMTab {
            get {
                return this.AllowToViewStudioMTabField;
            }
            set {
                if ((this.AllowToViewStudioMTabField.Equals(value) != true)) {
                    this.AllowToViewStudioMTabField = value;
                    this.RaisePropertyChanged("AllowToViewStudioMTab");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AppointmentDate {
            get {
                return this.AppointmentDateField;
            }
            set {
                if ((this.AppointmentDateField.Equals(value) != true)) {
                    this.AppointmentDateField = value;
                    this.RaisePropertyChanged("AppointmentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BusinessUnit {
            get {
                return this.BusinessUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.BusinessUnitField, value) != true)) {
                    this.BusinessUnitField = value;
                    this.RaisePropertyChanged("BusinessUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractID {
            get {
                return this.ContractIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractIDField, value) != true)) {
                    this.ContractIDField = value;
                    this.RaisePropertyChanged("ContractID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractNumber {
            get {
                return this.ContractNumberField;
            }
            set {
                if ((this.ContractNumberField.Equals(value) != true)) {
                    this.ContractNumberField = value;
                    this.RaisePropertyChanged("ContractNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractStatusName {
            get {
                return this.ContractStatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractStatusNameField, value) != true)) {
                    this.ContractStatusNameField = value;
                    this.RaisePropertyChanged("ContractStatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContractType {
            get {
                return this.ContractTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ContractTypeField, value) != true)) {
                    this.ContractTypeField = value;
                    this.RaisePropertyChanged("ContractType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedOn {
            get {
                return this.CreatedOnField;
            }
            set {
                if ((this.CreatedOnField.Equals(value) != true)) {
                    this.CreatedOnField = value;
                    this.RaisePropertyChanged("CreatedOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerNumber {
            get {
                return this.CustomerNumberField;
            }
            set {
                if ((this.CustomerNumberField.Equals(value) != true)) {
                    this.CustomerNumberField = value;
                    this.RaisePropertyChanged("CustomerNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DifficultyRating {
            get {
                return this.DifficultyRatingField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyRatingField, value) != true)) {
                    this.DifficultyRatingField = value;
                    this.RaisePropertyChanged("DifficultyRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DifficultyRatingId {
            get {
                return this.DifficultyRatingIdField;
            }
            set {
                if ((this.DifficultyRatingIdField.Equals(value) != true)) {
                    this.DifficultyRatingIdField = value;
                    this.RaisePropertyChanged("DifficultyRatingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DueDate {
            get {
                return this.DueDateField;
            }
            set {
                if ((this.DueDateField.Equals(value) != true)) {
                    this.DueDateField = value;
                    this.RaisePropertyChanged("DueDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EditEstimateUserID {
            get {
                return this.EditEstimateUserIDField;
            }
            set {
                if ((this.EditEstimateUserIDField.Equals(value) != true)) {
                    this.EditEstimateUserIDField = value;
                    this.RaisePropertyChanged("EditEstimateUserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EditEstimateUserName {
            get {
                return this.EditEstimateUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EditEstimateUserNameField, value) != true)) {
                    this.EditEstimateUserNameField = value;
                    this.RaisePropertyChanged("EditEstimateUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstimateId {
            get {
                return this.EstimateIdField;
            }
            set {
                if ((this.EstimateIdField.Equals(value) != true)) {
                    this.EstimateIdField = value;
                    this.RaisePropertyChanged("EstimateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeName {
            get {
                return this.HomeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeNameField, value) != true)) {
                    this.HomeNameField = value;
                    this.RaisePropertyChanged("HomeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobFlowType {
            get {
                return this.JobFlowTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.JobFlowTypeField, value) != true)) {
                    this.JobFlowTypeField = value;
                    this.RaisePropertyChanged("JobFlowType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobLocation {
            get {
                return this.JobLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.JobLocationField, value) != true)) {
                    this.JobLocationField = value;
                    this.RaisePropertyChanged("JobLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MRSGroup {
            get {
                return this.MRSGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.MRSGroupField, value) != true)) {
                    this.MRSGroupField = value;
                    this.RaisePropertyChanged("MRSGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Opportunityid {
            get {
                return this.OpportunityidField;
            }
            set {
                if ((object.ReferenceEquals(this.OpportunityidField, value) != true)) {
                    this.OpportunityidField = value;
                    this.RaisePropertyChanged("Opportunityid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OwnerId {
            get {
                return this.OwnerIdField;
            }
            set {
                if ((this.OwnerIdField.Equals(value) != true)) {
                    this.OwnerIdField = value;
                    this.RaisePropertyChanged("OwnerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerName {
            get {
                return this.OwnerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerNameField, value) != true)) {
                    this.OwnerNameField = value;
                    this.RaisePropertyChanged("OwnerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReadOnly {
            get {
                return this.ReadOnlyField;
            }
            set {
                if ((this.ReadOnlyField.Equals(value) != true)) {
                    this.ReadOnlyField = value;
                    this.RaisePropertyChanged("ReadOnly");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RecordId {
            get {
                return this.RecordIdField;
            }
            set {
                if ((this.RecordIdField.Equals(value) != true)) {
                    this.RecordIdField = value;
                    this.RaisePropertyChanged("RecordId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RecordType {
            get {
                return this.RecordTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordTypeField, value) != true)) {
                    this.RecordTypeField = value;
                    this.RaisePropertyChanged("RecordType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionID {
            get {
                return this.RegionIDField;
            }
            set {
                if ((this.RegionIDField.Equals(value) != true)) {
                    this.RegionIDField = value;
                    this.RaisePropertyChanged("RegionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionNumber {
            get {
                return this.RevisionNumberField;
            }
            set {
                if ((this.RevisionNumberField.Equals(value) != true)) {
                    this.RevisionNumberField = value;
                    this.RaisePropertyChanged("RevisionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionTypeCode {
            get {
                return this.RevisionTypeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionTypeCodeField, value) != true)) {
                    this.RevisionTypeCodeField = value;
                    this.RaisePropertyChanged("RevisionTypeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionTypeId {
            get {
                return this.RevisionTypeIdField;
            }
            set {
                if ((this.RevisionTypeIdField.Equals(value) != true)) {
                    this.RevisionTypeIdField = value;
                    this.RaisePropertyChanged("RevisionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesConsultantName {
            get {
                return this.SalesConsultantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesConsultantNameField, value) != true)) {
                    this.SalesConsultantNameField = value;
                    this.RaisePropertyChanged("SalesConsultantName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateAcceptedFlag {
            get {
                return this.ValidateAcceptedFlagField;
            }
            set {
                if ((this.ValidateAcceptedFlagField.Equals(value) != true)) {
                    this.ValidateAcceptedFlagField = value;
                    this.RaisePropertyChanged("ValidateAcceptedFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ValidateStandardInclusion {
            get {
                return this.ValidateStandardInclusionField;
            }
            set {
                if ((this.ValidateStandardInclusionField.Equals(value) != true)) {
                    this.ValidateStandardInclusionField = value;
                    this.RaisePropertyChanged("ValidateStandardInclusion");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateHeader", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateHeader : Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateBase {
        
        private int BasePriceExtensionDaysField;
        
        private string CSCField;
        
        private string CommentsField;
        
        private string CustomerDocumentDescField;
        
        private string CustomerDocumentNameField;
        
        private System.DateTime DepositDateField;
        
        private string DraftPersonField;
        
        private System.DateTime EffectiveDateField;
        
        private string HomeAndLandPackageField;
        
        private decimal HomePriceField;
        
        private string HomeRangeField;
        
        private string LotNumberField;
        
        private decimal MarginField;
        
        private string MarginStringField;
        
        private string PostCodeField;
        
        private System.DateTime PriceExpiryDateField;
        
        private string PromotionNameField;
        
        private decimal PromotionValueField;
        
        private string RegionField;
        
        private decimal RequiredPBE5PercentField;
        
        private decimal RequiredPBERollbackField;
        
        private int ReversedPriceHoldDaysField;
        
        private string SalesAcceptorField;
        
        private string SalesEstimatorField;
        
        private decimal SiteWorkValueField;
        
        private string StateField;
        
        private int StdPriceHoldDaysField;
        
        private string StreetAddressField;
        
        private string StreetNumberField;
        
        private string SuburbField;
        
        private decimal TargetMarginField;
        
        private decimal TotalCostBTPField;
        
        private decimal TotalCostDBCField;
        
        private decimal TotalMarginField;
        
        private decimal TotalPriceField;
        
        private decimal TotalPriceExcField;
        
        private decimal TotalVariationField;
        
        private decimal UpgradeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BasePriceExtensionDays {
            get {
                return this.BasePriceExtensionDaysField;
            }
            set {
                if ((this.BasePriceExtensionDaysField.Equals(value) != true)) {
                    this.BasePriceExtensionDaysField = value;
                    this.RaisePropertyChanged("BasePriceExtensionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CSC {
            get {
                return this.CSCField;
            }
            set {
                if ((object.ReferenceEquals(this.CSCField, value) != true)) {
                    this.CSCField = value;
                    this.RaisePropertyChanged("CSC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDocumentDesc {
            get {
                return this.CustomerDocumentDescField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocumentDescField, value) != true)) {
                    this.CustomerDocumentDescField = value;
                    this.RaisePropertyChanged("CustomerDocumentDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerDocumentName {
            get {
                return this.CustomerDocumentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerDocumentNameField, value) != true)) {
                    this.CustomerDocumentNameField = value;
                    this.RaisePropertyChanged("CustomerDocumentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DepositDate {
            get {
                return this.DepositDateField;
            }
            set {
                if ((this.DepositDateField.Equals(value) != true)) {
                    this.DepositDateField = value;
                    this.RaisePropertyChanged("DepositDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DraftPerson {
            get {
                return this.DraftPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.DraftPersonField, value) != true)) {
                    this.DraftPersonField = value;
                    this.RaisePropertyChanged("DraftPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeAndLandPackage {
            get {
                return this.HomeAndLandPackageField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeAndLandPackageField, value) != true)) {
                    this.HomeAndLandPackageField = value;
                    this.RaisePropertyChanged("HomeAndLandPackage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal HomePrice {
            get {
                return this.HomePriceField;
            }
            set {
                if ((this.HomePriceField.Equals(value) != true)) {
                    this.HomePriceField = value;
                    this.RaisePropertyChanged("HomePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HomeRange {
            get {
                return this.HomeRangeField;
            }
            set {
                if ((object.ReferenceEquals(this.HomeRangeField, value) != true)) {
                    this.HomeRangeField = value;
                    this.RaisePropertyChanged("HomeRange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LotNumber {
            get {
                return this.LotNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LotNumberField, value) != true)) {
                    this.LotNumberField = value;
                    this.RaisePropertyChanged("LotNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Margin {
            get {
                return this.MarginField;
            }
            set {
                if ((this.MarginField.Equals(value) != true)) {
                    this.MarginField = value;
                    this.RaisePropertyChanged("Margin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginString {
            get {
                return this.MarginStringField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginStringField, value) != true)) {
                    this.MarginStringField = value;
                    this.RaisePropertyChanged("MarginString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostCode {
            get {
                return this.PostCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostCodeField, value) != true)) {
                    this.PostCodeField = value;
                    this.RaisePropertyChanged("PostCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PriceExpiryDate {
            get {
                return this.PriceExpiryDateField;
            }
            set {
                if ((this.PriceExpiryDateField.Equals(value) != true)) {
                    this.PriceExpiryDateField = value;
                    this.RaisePropertyChanged("PriceExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PromotionName {
            get {
                return this.PromotionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PromotionNameField, value) != true)) {
                    this.PromotionNameField = value;
                    this.RaisePropertyChanged("PromotionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PromotionValue {
            get {
                return this.PromotionValueField;
            }
            set {
                if ((this.PromotionValueField.Equals(value) != true)) {
                    this.PromotionValueField = value;
                    this.RaisePropertyChanged("PromotionValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RequiredPBE5Percent {
            get {
                return this.RequiredPBE5PercentField;
            }
            set {
                if ((this.RequiredPBE5PercentField.Equals(value) != true)) {
                    this.RequiredPBE5PercentField = value;
                    this.RaisePropertyChanged("RequiredPBE5Percent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RequiredPBERollback {
            get {
                return this.RequiredPBERollbackField;
            }
            set {
                if ((this.RequiredPBERollbackField.Equals(value) != true)) {
                    this.RequiredPBERollbackField = value;
                    this.RaisePropertyChanged("RequiredPBERollback");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReversedPriceHoldDays {
            get {
                return this.ReversedPriceHoldDaysField;
            }
            set {
                if ((this.ReversedPriceHoldDaysField.Equals(value) != true)) {
                    this.ReversedPriceHoldDaysField = value;
                    this.RaisePropertyChanged("ReversedPriceHoldDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesAcceptor {
            get {
                return this.SalesAcceptorField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesAcceptorField, value) != true)) {
                    this.SalesAcceptorField = value;
                    this.RaisePropertyChanged("SalesAcceptor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SalesEstimator {
            get {
                return this.SalesEstimatorField;
            }
            set {
                if ((object.ReferenceEquals(this.SalesEstimatorField, value) != true)) {
                    this.SalesEstimatorField = value;
                    this.RaisePropertyChanged("SalesEstimator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SiteWorkValue {
            get {
                return this.SiteWorkValueField;
            }
            set {
                if ((this.SiteWorkValueField.Equals(value) != true)) {
                    this.SiteWorkValueField = value;
                    this.RaisePropertyChanged("SiteWorkValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StdPriceHoldDays {
            get {
                return this.StdPriceHoldDaysField;
            }
            set {
                if ((this.StdPriceHoldDaysField.Equals(value) != true)) {
                    this.StdPriceHoldDaysField = value;
                    this.RaisePropertyChanged("StdPriceHoldDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetAddress {
            get {
                return this.StreetAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetAddressField, value) != true)) {
                    this.StreetAddressField = value;
                    this.RaisePropertyChanged("StreetAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StreetNumber {
            get {
                return this.StreetNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetNumberField, value) != true)) {
                    this.StreetNumberField = value;
                    this.RaisePropertyChanged("StreetNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TargetMargin {
            get {
                return this.TargetMarginField;
            }
            set {
                if ((this.TargetMarginField.Equals(value) != true)) {
                    this.TargetMarginField = value;
                    this.RaisePropertyChanged("TargetMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCostBTP {
            get {
                return this.TotalCostBTPField;
            }
            set {
                if ((this.TotalCostBTPField.Equals(value) != true)) {
                    this.TotalCostBTPField = value;
                    this.RaisePropertyChanged("TotalCostBTP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCostDBC {
            get {
                return this.TotalCostDBCField;
            }
            set {
                if ((this.TotalCostDBCField.Equals(value) != true)) {
                    this.TotalCostDBCField = value;
                    this.RaisePropertyChanged("TotalCostDBC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalMargin {
            get {
                return this.TotalMarginField;
            }
            set {
                if ((this.TotalMarginField.Equals(value) != true)) {
                    this.TotalMarginField = value;
                    this.RaisePropertyChanged("TotalMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPrice {
            get {
                return this.TotalPriceField;
            }
            set {
                if ((this.TotalPriceField.Equals(value) != true)) {
                    this.TotalPriceField = value;
                    this.RaisePropertyChanged("TotalPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalPriceExc {
            get {
                return this.TotalPriceExcField;
            }
            set {
                if ((this.TotalPriceExcField.Equals(value) != true)) {
                    this.TotalPriceExcField = value;
                    this.RaisePropertyChanged("TotalPriceExc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalVariation {
            get {
                return this.TotalVariationField;
            }
            set {
                if ((this.TotalVariationField.Equals(value) != true)) {
                    this.TotalVariationField = value;
                    this.RaisePropertyChanged("TotalVariation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UpgradeValue {
            get {
                return this.UpgradeValueField;
            }
            set {
                if ((this.UpgradeValueField.Equals(value) != true)) {
                    this.UpgradeValueField = value;
                    this.RaisePropertyChanged("UpgradeValue");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateDisclaimerUpdateDetail", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateDisclaimerUpdateDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int DisclaimerCurrentIdField;
        
        private int DisclaimerNewIdField;
        
        private int DisclaimerVariationCurrentIdField;
        
        private int DisclaimerVariationNewIdField;
        
        private int RevisionIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisclaimerCurrentId {
            get {
                return this.DisclaimerCurrentIdField;
            }
            set {
                if ((this.DisclaimerCurrentIdField.Equals(value) != true)) {
                    this.DisclaimerCurrentIdField = value;
                    this.RaisePropertyChanged("DisclaimerCurrentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisclaimerNewId {
            get {
                return this.DisclaimerNewIdField;
            }
            set {
                if ((this.DisclaimerNewIdField.Equals(value) != true)) {
                    this.DisclaimerNewIdField = value;
                    this.RaisePropertyChanged("DisclaimerNewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisclaimerVariationCurrentId {
            get {
                return this.DisclaimerVariationCurrentIdField;
            }
            set {
                if ((this.DisclaimerVariationCurrentIdField.Equals(value) != true)) {
                    this.DisclaimerVariationCurrentIdField = value;
                    this.RaisePropertyChanged("DisclaimerVariationCurrentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DisclaimerVariationNewId {
            get {
                return this.DisclaimerVariationNewIdField;
            }
            set {
                if ((this.DisclaimerVariationNewIdField.Equals(value) != true)) {
                    this.DisclaimerVariationNewIdField = value;
                    this.RaisePropertyChanged("DisclaimerVariationNewId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionId {
            get {
                return this.RevisionIdField;
            }
            set {
                if ((this.RevisionIdField.Equals(value) != true)) {
                    this.RevisionIdField = value;
                    this.RaisePropertyChanged("RevisionId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericClassCodeName", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class GenericClassCodeName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeTextField;
        
        private string CodeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarginReportDetail", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class MarginReportDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string BCForecastDateField;
        
        private double BPEChargeField;
        
        private int BasePriceExtensionDaysField;
        
        private int DaysFromField;
        
        private System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> PriceEffectiveDatesField;
        
        private double RequiredBPEChargeField;
        
        private int RequiredBPEChargeTypeField;
        
        private int RevisionIDField;
        
        private bool TitledLandField;
        
        private int TitledLandDaysField;
        
        private double TodaysPriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BCForecastDate {
            get {
                return this.BCForecastDateField;
            }
            set {
                if ((object.ReferenceEquals(this.BCForecastDateField, value) != true)) {
                    this.BCForecastDateField = value;
                    this.RaisePropertyChanged("BCForecastDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BPECharge {
            get {
                return this.BPEChargeField;
            }
            set {
                if ((this.BPEChargeField.Equals(value) != true)) {
                    this.BPEChargeField = value;
                    this.RaisePropertyChanged("BPECharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BasePriceExtensionDays {
            get {
                return this.BasePriceExtensionDaysField;
            }
            set {
                if ((this.BasePriceExtensionDaysField.Equals(value) != true)) {
                    this.BasePriceExtensionDaysField = value;
                    this.RaisePropertyChanged("BasePriceExtensionDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DaysFrom {
            get {
                return this.DaysFromField;
            }
            set {
                if ((this.DaysFromField.Equals(value) != true)) {
                    this.DaysFromField = value;
                    this.RaisePropertyChanged("DaysFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> PriceEffectiveDates {
            get {
                return this.PriceEffectiveDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceEffectiveDatesField, value) != true)) {
                    this.PriceEffectiveDatesField = value;
                    this.RaisePropertyChanged("PriceEffectiveDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RequiredBPECharge {
            get {
                return this.RequiredBPEChargeField;
            }
            set {
                if ((this.RequiredBPEChargeField.Equals(value) != true)) {
                    this.RequiredBPEChargeField = value;
                    this.RaisePropertyChanged("RequiredBPECharge");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RequiredBPEChargeType {
            get {
                return this.RequiredBPEChargeTypeField;
            }
            set {
                if ((this.RequiredBPEChargeTypeField.Equals(value) != true)) {
                    this.RequiredBPEChargeTypeField = value;
                    this.RaisePropertyChanged("RequiredBPEChargeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionID {
            get {
                return this.RevisionIDField;
            }
            set {
                if ((this.RevisionIDField.Equals(value) != true)) {
                    this.RevisionIDField = value;
                    this.RaisePropertyChanged("RevisionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TitledLand {
            get {
                return this.TitledLandField;
            }
            set {
                if ((this.TitledLandField.Equals(value) != true)) {
                    this.TitledLandField = value;
                    this.RaisePropertyChanged("TitledLand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TitledLandDays {
            get {
                return this.TitledLandDaysField;
            }
            set {
                if ((this.TitledLandDaysField.Equals(value) != true)) {
                    this.TitledLandDaysField = value;
                    this.RaisePropertyChanged("TitledLandDays");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TodaysPrice {
            get {
                return this.TodaysPriceField;
            }
            set {
                if ((this.TodaysPriceField.Equals(value) != true)) {
                    this.TodaysPriceField = value;
                    this.RaisePropertyChanged("TodaysPrice");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HomePrice", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class HomePrice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime EffectiveDateField;
        
        private string EffectiveDateOptionNameField;
        
        private decimal EffectivePriceField;
        
        private int PriceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EffectiveDate {
            get {
                return this.EffectiveDateField;
            }
            set {
                if ((this.EffectiveDateField.Equals(value) != true)) {
                    this.EffectiveDateField = value;
                    this.RaisePropertyChanged("EffectiveDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EffectiveDateOptionName {
            get {
                return this.EffectiveDateOptionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EffectiveDateOptionNameField, value) != true)) {
                    this.EffectiveDateOptionNameField = value;
                    this.RaisePropertyChanged("EffectiveDateOptionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal EffectivePrice {
            get {
                return this.EffectivePriceField;
            }
            set {
                if ((this.EffectivePriceField.Equals(value) != true)) {
                    this.EffectivePriceField = value;
                    this.RaisePropertyChanged("EffectivePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceId {
            get {
                return this.PriceIdField;
            }
            set {
                if ((this.PriceIdField.Equals(value) != true)) {
                    this.PriceIdField = value;
                    this.RaisePropertyChanged("PriceId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EmailAddressField;
        
        private string FullNameField;
        
        private int LoginPriceRegionIdField;
        
        private int PrimaryRoleIdField;
        
        private int RegionIdField;
        
        private string RegionNameField;
        
        private int StateIdField;
        
        private int UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailAddress {
            get {
                return this.EmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailAddressField, value) != true)) {
                    this.EmailAddressField = value;
                    this.RaisePropertyChanged("EmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FullName {
            get {
                return this.FullNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FullNameField, value) != true)) {
                    this.FullNameField = value;
                    this.RaisePropertyChanged("FullName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoginPriceRegionId {
            get {
                return this.LoginPriceRegionIdField;
            }
            set {
                if ((this.LoginPriceRegionIdField.Equals(value) != true)) {
                    this.LoginPriceRegionIdField = value;
                    this.RaisePropertyChanged("LoginPriceRegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PrimaryRoleId {
            get {
                return this.PrimaryRoleIdField;
            }
            set {
                if ((this.PrimaryRoleIdField.Equals(value) != true)) {
                    this.PrimaryRoleIdField = value;
                    this.RaisePropertyChanged("PrimaryRoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateId {
            get {
                return this.StateIdField;
            }
            set {
                if ((this.StateIdField.Equals(value) != true)) {
                    this.StateIdField = value;
                    this.RaisePropertyChanged("StateId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserRole", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class UserRole : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool IsManagerField;
        
        private int RoleIdField;
        
        private string RoleNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsManager {
            get {
                return this.IsManagerField;
            }
            set {
                if ((this.IsManagerField.Equals(value) != true)) {
                    this.IsManagerField = value;
                    this.RaisePropertyChanged("IsManager");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateStatus", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StatusIdField;
        
        private string StatusNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusId {
            get {
                return this.StatusIdField;
            }
            set {
                if ((this.StatusIdField.Equals(value) != true)) {
                    this.StatusIdField = value;
                    this.RaisePropertyChanged("StatusId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusReason", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class StatusReason : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int StatusReasonIdField;
        
        private string StatusReasonNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusReasonId {
            get {
                return this.StatusReasonIdField;
            }
            set {
                if ((this.StatusReasonIdField.Equals(value) != true)) {
                    this.StatusReasonIdField = value;
                    this.RaisePropertyChanged("StatusReasonId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusReasonName {
            get {
                return this.StatusReasonNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusReasonNameField, value) != true)) {
                    this.StatusReasonNameField = value;
                    this.RaisePropertyChanged("StatusReasonName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DifficultyRating", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class DifficultyRating : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int DifficultyRatingIdField;
        
        private string DifficultyRatingNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DifficultyRatingId {
            get {
                return this.DifficultyRatingIdField;
            }
            set {
                if ((this.DifficultyRatingIdField.Equals(value) != true)) {
                    this.DifficultyRatingIdField = value;
                    this.RaisePropertyChanged("DifficultyRatingId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DifficultyRatingName {
            get {
                return this.DifficultyRatingNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyRatingNameField, value) != true)) {
                    this.DifficultyRatingNameField = value;
                    this.RaisePropertyChanged("DifficultyRatingName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RevisionType", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class RevisionType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RevisionTypeIdField;
        
        private string RevisionTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RevisionTypeId {
            get {
                return this.RevisionTypeIdField;
            }
            set {
                if ((this.RevisionTypeIdField.Equals(value) != true)) {
                    this.RevisionTypeIdField = value;
                    this.RaisePropertyChanged("RevisionTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RevisionTypeName {
            get {
                return this.RevisionTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RevisionTypeNameField, value) != true)) {
                    this.RevisionTypeNameField = value;
                    this.RaisePropertyChanged("RevisionTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateDetailsComparison", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateDetailsComparison : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AreaNameField;
        
        private string ChangesField;
        
        private string GroupNameField;
        
        private string PagIDField;
        
        private string PriceAField;
        
        private string PriceBField;
        
        private string ProductDescriptionAField;
        
        private string ProductDescriptionBField;
        
        private string ProductNameAField;
        
        private string ProductNameBField;
        
        private string QuantityAField;
        
        private string QuantityBField;
        
        private string ReasonField;
        
        private string UomAField;
        
        private string UomBField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AreaName {
            get {
                return this.AreaNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AreaNameField, value) != true)) {
                    this.AreaNameField = value;
                    this.RaisePropertyChanged("AreaName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Changes {
            get {
                return this.ChangesField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangesField, value) != true)) {
                    this.ChangesField = value;
                    this.RaisePropertyChanged("Changes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PagID {
            get {
                return this.PagIDField;
            }
            set {
                if ((object.ReferenceEquals(this.PagIDField, value) != true)) {
                    this.PagIDField = value;
                    this.RaisePropertyChanged("PagID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceA {
            get {
                return this.PriceAField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceAField, value) != true)) {
                    this.PriceAField = value;
                    this.RaisePropertyChanged("PriceA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceB {
            get {
                return this.PriceBField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceBField, value) != true)) {
                    this.PriceBField = value;
                    this.RaisePropertyChanged("PriceB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescriptionA {
            get {
                return this.ProductDescriptionAField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionAField, value) != true)) {
                    this.ProductDescriptionAField = value;
                    this.RaisePropertyChanged("ProductDescriptionA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductDescriptionB {
            get {
                return this.ProductDescriptionBField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductDescriptionBField, value) != true)) {
                    this.ProductDescriptionBField = value;
                    this.RaisePropertyChanged("ProductDescriptionB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNameA {
            get {
                return this.ProductNameAField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameAField, value) != true)) {
                    this.ProductNameAField = value;
                    this.RaisePropertyChanged("ProductNameA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductNameB {
            get {
                return this.ProductNameBField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameBField, value) != true)) {
                    this.ProductNameBField = value;
                    this.RaisePropertyChanged("ProductNameB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityA {
            get {
                return this.QuantityAField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityAField, value) != true)) {
                    this.QuantityAField = value;
                    this.RaisePropertyChanged("QuantityA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityB {
            get {
                return this.QuantityBField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityBField, value) != true)) {
                    this.QuantityBField = value;
                    this.RaisePropertyChanged("QuantityB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Reason {
            get {
                return this.ReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.ReasonField, value) != true)) {
                    this.ReasonField = value;
                    this.RaisePropertyChanged("Reason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomA {
            get {
                return this.UomAField;
            }
            set {
                if ((object.ReferenceEquals(this.UomAField, value) != true)) {
                    this.UomAField = value;
                    this.RaisePropertyChanged("UomA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UomB {
            get {
                return this.UomBField;
            }
            set {
                if ((object.ReferenceEquals(this.UomBField, value) != true)) {
                    this.UomBField = value;
                    this.RaisePropertyChanged("UomB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateHeaderComparison", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateHeaderComparison : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string FieldNameField;
        
        private string ValueAField;
        
        private string ValueBField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FieldName {
            get {
                return this.FieldNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FieldNameField, value) != true)) {
                    this.FieldNameField = value;
                    this.RaisePropertyChanged("FieldName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueA {
            get {
                return this.ValueAField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueAField, value) != true)) {
                    this.ValueAField = value;
                    this.RaisePropertyChanged("ValueA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ValueB {
            get {
                return this.ValueBField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueBField, value) != true)) {
                    this.ValueBField = value;
                    this.RaisePropertyChanged("ValueB");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OptionTreeProducts", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class OptionTreeProducts : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AField;
        
        private int AIField;
        
        private string DField;
        
        private string GField;
        
        private int GIField;
        
        private int IField;
        
        private int MField;
        
        private string NField;
        
        private int OField;
        
        private decimal PField;
        
        private string PIField;
        
        private decimal QField;
        
        private bool SField;
        
        private string UField;
        
        private bool WField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string A {
            get {
                return this.AField;
            }
            set {
                if ((object.ReferenceEquals(this.AField, value) != true)) {
                    this.AField = value;
                    this.RaisePropertyChanged("A");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AI {
            get {
                return this.AIField;
            }
            set {
                if ((this.AIField.Equals(value) != true)) {
                    this.AIField = value;
                    this.RaisePropertyChanged("AI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string D {
            get {
                return this.DField;
            }
            set {
                if ((object.ReferenceEquals(this.DField, value) != true)) {
                    this.DField = value;
                    this.RaisePropertyChanged("D");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string G {
            get {
                return this.GField;
            }
            set {
                if ((object.ReferenceEquals(this.GField, value) != true)) {
                    this.GField = value;
                    this.RaisePropertyChanged("G");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GI {
            get {
                return this.GIField;
            }
            set {
                if ((this.GIField.Equals(value) != true)) {
                    this.GIField = value;
                    this.RaisePropertyChanged("GI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int I {
            get {
                return this.IField;
            }
            set {
                if ((this.IField.Equals(value) != true)) {
                    this.IField = value;
                    this.RaisePropertyChanged("I");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int M {
            get {
                return this.MField;
            }
            set {
                if ((this.MField.Equals(value) != true)) {
                    this.MField = value;
                    this.RaisePropertyChanged("M");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string N {
            get {
                return this.NField;
            }
            set {
                if ((object.ReferenceEquals(this.NField, value) != true)) {
                    this.NField = value;
                    this.RaisePropertyChanged("N");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int O {
            get {
                return this.OField;
            }
            set {
                if ((this.OField.Equals(value) != true)) {
                    this.OField = value;
                    this.RaisePropertyChanged("O");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal P {
            get {
                return this.PField;
            }
            set {
                if ((this.PField.Equals(value) != true)) {
                    this.PField = value;
                    this.RaisePropertyChanged("P");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PI {
            get {
                return this.PIField;
            }
            set {
                if ((object.ReferenceEquals(this.PIField, value) != true)) {
                    this.PIField = value;
                    this.RaisePropertyChanged("PI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Q {
            get {
                return this.QField;
            }
            set {
                if ((this.QField.Equals(value) != true)) {
                    this.QField = value;
                    this.RaisePropertyChanged("Q");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool S {
            get {
                return this.SField;
            }
            set {
                if ((this.SField.Equals(value) != true)) {
                    this.SField = value;
                    this.RaisePropertyChanged("S");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string U {
            get {
                return this.UField;
            }
            set {
                if ((object.ReferenceEquals(this.UField, value) != true)) {
                    this.UField = value;
                    this.RaisePropertyChanged("U");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool W {
            get {
                return this.WField;
            }
            set {
                if ((this.WField.Equals(value) != true)) {
                    this.WField = value;
                    this.RaisePropertyChanged("W");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EstimateComments", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class EstimateComments : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CommentsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQSConfiguration", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SQSConfiguration : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string CodeTextField;
        
        private string CodeValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeText {
            get {
                return this.CodeTextField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeTextField, value) != true)) {
                    this.CodeTextField = value;
                    this.RaisePropertyChanged("CodeText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodeValue {
            get {
                return this.CodeValueField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeValueField, value) != true)) {
                    this.CodeValueField = value;
                    this.RaisePropertyChanged("CodeValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SQSSalesRegion", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class SQSSalesRegion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int RegionIdField;
        
        private string RegionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MRSLogAction", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public enum MRSLogAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Accept = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Assign = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssignToMe = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reject = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ModifyEffectiveDate = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancel = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Reactivate = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeJobFlow = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeContractType = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeFacade = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateAppointment = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SkipRSTM = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeHomeName = 13,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ChangeHome = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CopyEstimate = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndoRevision = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndoSetAsContract = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UndoCurrentMilestone = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateNewDisclaimer = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrentMilestone = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateMarginReportSettings = 21,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContractStatus", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public enum ContractStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkInProgress = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OnHold = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonStandardCategory", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class NonStandardCategory : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CategoryIdField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NonStandardGroup", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class NonStandardGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int GroupIdField;
        
        private string GroupNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PriceDisplayCode", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class PriceDisplayCode : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string PriceDisplayCodeDescriptionField;
        
        private int PriceDisplayCodeIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceDisplayCodeDescription {
            get {
                return this.PriceDisplayCodeDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceDisplayCodeDescriptionField, value) != true)) {
                    this.PriceDisplayCodeDescriptionField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PriceDisplayCodeId {
            get {
                return this.PriceDisplayCodeIdField;
            }
            set {
                if ((this.PriceDisplayCodeIdField.Equals(value) != true)) {
                    this.PriceDisplayCodeIdField = value;
                    this.RaisePropertyChanged("PriceDisplayCodeId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductImage", Namespace="http://schemas.datacontract.org/2004/07/Metricon.WCF.MetriconRetailSystem.Contrac" +
        "ts")]
    public partial class ProductImage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] imageField;
        
        private int imageIDField;
        
        private string imagenameField;
        
        private string suppliernameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] image {
            get {
                return this.imageField;
            }
            set {
                if ((object.ReferenceEquals(this.imageField, value) != true)) {
                    this.imageField = value;
                    this.RaisePropertyChanged("image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int imageID {
            get {
                return this.imageIDField;
            }
            set {
                if ((this.imageIDField.Equals(value) != true)) {
                    this.imageIDField = value;
                    this.RaisePropertyChanged("imageID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string imagename {
            get {
                return this.imagenameField;
            }
            set {
                if ((object.ReferenceEquals(this.imagenameField, value) != true)) {
                    this.imagenameField = value;
                    this.RaisePropertyChanged("imagename");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string suppliername {
            get {
                return this.suppliernameField;
            }
            set {
                if ((object.ReferenceEquals(this.suppliernameField, value) != true)) {
                    this.suppliernameField = value;
                    this.RaisePropertyChanged("suppliername");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MRSService.IRetailSystem")]
    public interface IRetailSystem {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetContractDraftActionAvailability", ReplyAction="http://tempuri.org/IRetailSystem/GetContractDraftActionAvailabilityResponse")]
        System.IAsyncResult BeginGetContractDraftActionAvailability(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability EndGetContractDraftActionAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetFinalContractActionAvailability", ReplyAction="http://tempuri.org/IRetailSystem/GetFinalContractActionAvailabilityResponse")]
        System.IAsyncResult BeginGetFinalContractActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability EndGetFinalContractActionAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCustomerSupportActionAvailability", ReplyAction="http://tempuri.org/IRetailSystem/GetCustomerSupportActionAvailabilityResponse")]
        System.IAsyncResult BeginGetCustomerSupportActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability EndGetCustomerSupportActionAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetSalesEstimatorActionAvailability", ReplyAction="http://tempuri.org/IRetailSystem/GetSalesEstimatorActionAvailabilityResponse")]
        System.IAsyncResult BeginGetSalesEstimatorActionAvailability(int estimateRevisionId, int userid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability EndGetSalesEstimatorActionAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetContractDraftCreationVisibility", ReplyAction="http://tempuri.org/IRetailSystem/GetContractDraftCreationVisibilityResponse")]
        System.IAsyncResult BeginGetContractDraftCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        bool EndGetContractDraftCreationVisibility(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetFinalContractCreationVisibility", ReplyAction="http://tempuri.org/IRetailSystem/GetFinalContractCreationVisibilityResponse")]
        System.IAsyncResult BeginGetFinalContractCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        bool EndGetFinalContractCreationVisibility(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateRevisionStatus", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateRevisionStatusResponse")]
        System.IAsyncResult BeginGetEstimateRevisionStatus(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status, System.AsyncCallback callback, object asyncState);
        
        void EndGetEstimateRevisionStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateSplitStudioMRevisions", ReplyAction="http://tempuri.org/IRetailSystem/CreateSplitStudioMRevisionsResponse")]
        System.IAsyncResult BeginCreateSplitStudioMRevisions(int estimateRevisionId, string revisionTypeIds, string assignedToUserIds, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateSplitStudioMRevisions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/MergeStudioMRevisions", ReplyAction="http://tempuri.org/IRetailSystem/MergeStudioMRevisionsResponse")]
        System.IAsyncResult BeginMergeStudioMRevisions(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        void EndMergeStudioMRevisions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateContractDraft", ReplyAction="http://tempuri.org/IRetailSystem/CreateContractDraftResponse")]
        System.IAsyncResult BeginCreateContractDraft(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateContractDraft(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateFinalContract", ReplyAction="http://tempuri.org/IRetailSystem/CreateFinalContractResponse")]
        System.IAsyncResult BeginCreateFinalContract(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateFinalContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateCscVariation", ReplyAction="http://tempuri.org/IRetailSystem/CreateCscVariationResponse")]
        System.IAsyncResult BeginCreateCscVariation(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateCscVariation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateStudioMRevision", ReplyAction="http://tempuri.org/IRetailSystem/CreateStudioMRevisionResponse")]
        System.IAsyncResult BeginCreateStudioMRevision(int estimateRevisionId, int ownerId, System.DateTime appointmentDateTime, int revisionTypeId, int createdbyId, System.AsyncCallback callback, object asyncState);
        
        string EndCreateStudioMRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ValidateSetEstimateStatus", ReplyAction="http://tempuri.org/IRetailSystem/ValidateSetEstimateStatusResponse")]
        System.IAsyncResult BeginValidateSetEstimateStatus(int estimateRevisionId, int nextRevisionTypeId, System.AsyncCallback callback, object asyncState);
        
        string EndValidateSetEstimateStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCustomerDocumentType", ReplyAction="http://tempuri.org/IRetailSystem/GetCustomerDocumentTypeResponse")]
        System.IAsyncResult BeginGetCustomerDocumentType(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        string EndGetCustomerDocumentType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateCustomerDocumentDetails", ReplyAction="http://tempuri.org/IRetailSystem/UpdateCustomerDocumentDetailsResponse")]
        System.IAsyncResult BeginUpdateCustomerDocumentDetails(Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document, System.AsyncCallback callback, object asyncState);
        
        int EndUpdateCustomerDocumentDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCustomerDocumentDetails", ReplyAction="http://tempuri.org/IRetailSystem/GetCustomerDocumentDetailsResponse")]
        System.IAsyncResult BeginGetCustomerDocumentDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails EndGetCustomerDocumentDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetRelevantPAGFromOnePAG", ReplyAction="http://tempuri.org/IRetailSystem/GetRelevantPAGFromOnePAGResponse")]
        System.IAsyncResult BeginGetRelevantPAGFromOnePAG(string estimatedetailsid, string revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> EndGetRelevantPAGFromOnePAG(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateVariation", ReplyAction="http://tempuri.org/IRetailSystem/CreateVariationResponse")]
        System.IAsyncResult BeginCreateVariation(int estimateRevisionId, int revisionTypeId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndCreateVariation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/RejectVariation", ReplyAction="http://tempuri.org/IRetailSystem/RejectVariationResponse")]
        System.IAsyncResult BeginRejectVariation(int estimateRevisionId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndRejectVariation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SaveSelectedItemsFromOptionTreeToEstimate", ReplyAction="http://tempuri.org/IRetailSystem/SaveSelectedItemsFromOptionTreeToEstimateRespons" +
            "e")]
        System.IAsyncResult BeginSaveSelectedItemsFromOptionTreeToEstimate(
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgststring, 
                    string costbtpoverwriteflagstring, 
                    string costdbcexcgststring, 
                    string costdbcoverwriteflagstring, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ReplaceSaveSelectedItemsFromOptionTreeToEstimate" +
            "", ReplyAction="http://tempuri.org/IRetailSystem/ReplaceSaveSelectedItemsFromOptionTreeToEstimate" +
            "Response")]
        System.IAsyncResult BeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(
                    string sourceEstimateRevisionDetailsId, 
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgst, 
                    string costdbcexcgst, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    string copyquantity, 
                    string copyadditionalnotes, 
                    string copyextradescription, 
                    string copyinternalnotes, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndReplaceSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckRevisionTypeAllowToAddNSR", ReplyAction="http://tempuri.org/IRetailSystem/CheckRevisionTypeAllowToAddNSRResponse")]
        System.IAsyncResult BeginCheckRevisionTypeAllowToAddNSR(int revisontypeid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission EndCheckRevisionTypeAllowToAddNSR(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ValidateAcceptFlagForRevision", ReplyAction="http://tempuri.org/IRetailSystem/ValidateAcceptFlagForRevisionResponse")]
        System.IAsyncResult BeginValidateAcceptFlagForRevision(int estimaterevisionid, int userroleid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateAcceptFlagForRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ValidateStudioMRevisions", ReplyAction="http://tempuri.org/IRetailSystem/ValidateStudioMRevisionsResponse")]
        System.IAsyncResult BeginValidateStudioMRevisions(int estimaterevisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateStudioMRevisions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ValidateAppointmentDate", ReplyAction="http://tempuri.org/IRetailSystem/ValidateAppointmentDateResponse")]
        System.IAsyncResult BeginValidateAppointmentDate(int estimaterevisionid, System.AsyncCallback callback, object asyncState);
        
        bool EndValidateAppointmentDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetNextEstimateRevision", ReplyAction="http://tempuri.org/IRetailSystem/GetNextEstimateRevisionResponse")]
        System.IAsyncResult BeginGetNextEstimateRevision(int estimateRevisionId, int statusId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> EndGetNextEstimateRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAuditLogs", ReplyAction="http://tempuri.org/IRetailSystem/GetAuditLogsResponse")]
        System.IAsyncResult BeginGetAuditLogs(int revisionid, int revisiondetailid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> EndGetAuditLogs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetDeletedItems", ReplyAction="http://tempuri.org/IRetailSystem/GetDeletedItemsResponse")]
        System.IAsyncResult BeginGetDeletedItems(int revisionid, Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> EndGetDeletedItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ReAddDeletedEstimateItem", ReplyAction="http://tempuri.org/IRetailSystem/ReAddDeletedEstimateItemResponse")]
        System.IAsyncResult BeginReAddDeletedEstimateItem(int sourceEstimateRevisionId, int targetEstimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState);
        
        bool EndReAddDeletedEstimateItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ReAddDeletedMasterPromotionEstimateItem", ReplyAction="http://tempuri.org/IRetailSystem/ReAddDeletedMasterPromotionEstimateItemResponse")]
        System.IAsyncResult BeginReAddDeletedMasterPromotionEstimateItem(int estimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState);
        
        bool EndReAddDeletedMasterPromotionEstimateItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAllFacadeFromRevisonID", ReplyAction="http://tempuri.org/IRetailSystem/GetAllFacadeFromRevisonIDResponse")]
        System.IAsyncResult BeginGetAllFacadeFromRevisonID(int revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetAllFacadeFromRevisonID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAllAvailableHomeByState", ReplyAction="http://tempuri.org/IRetailSystem/GetAllAvailableHomeByStateResponse")]
        System.IAsyncResult BeginGetAllAvailableHomeByState(int stateid, string searchText, bool showdisplayhomes, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetAllAvailableHomeByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetHomeFullNameByState", ReplyAction="http://tempuri.org/IRetailSystem/GetHomeFullNameByStateResponse")]
        System.IAsyncResult BeginGetHomeFullNameByState(int stateid, int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetHomeFullNameByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAreaNameWithAll", ReplyAction="http://tempuri.org/IRetailSystem/GetAreaNameWithAllResponse")]
        System.IAsyncResult BeginGetAreaNameWithAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> EndGetAreaNameWithAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetGroupNameWithAll", ReplyAction="http://tempuri.org/IRetailSystem/GetGroupNameWithAllResponse")]
        System.IAsyncResult BeginGetGroupNameWithAll(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> EndGetGroupNameWithAll(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckFacadeConfigurationDifference", ReplyAction="http://tempuri.org/IRetailSystem/CheckFacadeConfigurationDifferenceResponse")]
        System.IAsyncResult BeginCheckFacadeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCheckFacadeConfigurationDifference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckHomeConfigurationDifference", ReplyAction="http://tempuri.org/IRetailSystem/CheckHomeConfigurationDifferenceResponse")]
        System.IAsyncResult BeginCheckHomeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCheckHomeConfigurationDifference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ChangeFacade", ReplyAction="http://tempuri.org/IRetailSystem/ChangeFacadeResponse")]
        System.IAsyncResult BeginChangeFacade(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndChangeFacade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ChangeHome", ReplyAction="http://tempuri.org/IRetailSystem/ChangeHomeResponse")]
        System.IAsyncResult BeginChangeHome(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndChangeHome(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetContractType", ReplyAction="http://tempuri.org/IRetailSystem/GetContractTypeResponse")]
        System.IAsyncResult BeginGetContractType(string configCode, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> EndGetContractType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateContractType", ReplyAction="http://tempuri.org/IRetailSystem/UpdateContractTypeResponse")]
        System.IAsyncResult BeginUpdateContractType(int revisionid, string contracttype, string jobflowtype, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateContractType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetHomeName", ReplyAction="http://tempuri.org/IRetailSystem/GetHomeNameResponse")]
        System.IAsyncResult BeginGetHomeName(int revisionid, System.AsyncCallback callback, object asyncState);
        
        string EndGetHomeName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateHomeName", ReplyAction="http://tempuri.org/IRetailSystem/UpdateHomeNameResponse")]
        System.IAsyncResult BeginUpdateHomeName(int revisionid, string homename, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateHomeName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyEstimateCheckDifference", ReplyAction="http://tempuri.org/IRetailSystem/CopyEstimateCheckDifferenceResponse")]
        System.IAsyncResult BeginCopyEstimateCheckDifference(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCopyEstimateCheckDifference(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyEstimate", ReplyAction="http://tempuri.org/IRetailSystem/CopyEstimateResponse")]
        System.IAsyncResult BeginCopyEstimate(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState);
        
        bool EndCopyEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAreaSurcharge", ReplyAction="http://tempuri.org/IRetailSystem/GetAreaSurchargeResponse")]
        System.IAsyncResult BeginGetAreaSurcharge(int revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<decimal> EndGetAreaSurcharge(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetPagByID", ReplyAction="http://tempuri.org/IRetailSystem/GetPagByIDResponse")]
        System.IAsyncResult BeginGetPagByID(int estimaterevisionid, int optionid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndGetPagByID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetUpgradeOptionListForStandardInclusion", ReplyAction="http://tempuri.org/IRetailSystem/GetUpgradeOptionListForStandardInclusionResponse" +
            "")]
        System.IAsyncResult BeginGetUpgradeOptionListForStandardInclusion(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> EndGetUpgradeOptionListForStandardInclusion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetStudioMQandA", ReplyAction="http://tempuri.org/IRetailSystem/GetStudioMQandAResponse")]
        System.IAsyncResult BeginGetStudioMQandA(int optionId, System.AsyncCallback callback, object asyncState);
        
        string EndGetStudioMQandA(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/Sharepoint_GetFileList", ReplyAction="http://tempuri.org/IRetailSystem/Sharepoint_GetFileListResponse")]
        System.IAsyncResult BeginSharepoint_GetFileList(string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> EndSharepoint_GetFileList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/Sharepoint_SharepointUploadFile", ReplyAction="http://tempuri.org/IRetailSystem/Sharepoint_SharepointUploadFileResponse")]
        System.IAsyncResult BeginSharepoint_SharepointUploadFile(string filename, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, System.AsyncCallback callback, object asyncState);
        
        bool EndSharepoint_SharepointUploadFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/Sharepoint_DeleteFileFromSharepointLibrary", ReplyAction="http://tempuri.org/IRetailSystem/Sharepoint_DeleteFileFromSharepointLibraryRespon" +
            "se")]
        System.IAsyncResult BeginSharepoint_DeleteFileFromSharepointLibrary(Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc, string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState);
        
        bool EndSharepoint_DeleteFileFromSharepointLibrary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/Sharepoint_GetSalesDocumentType", ReplyAction="http://tempuri.org/IRetailSystem/Sharepoint_GetSalesDocumentTypeResponse")]
        System.IAsyncResult BeginSharepoint_GetSalesDocumentType(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> EndSharepoint_GetSalesDocumentType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SendNotificationEmail", ReplyAction="http://tempuri.org/IRetailSystem/SendNotificationEmailResponse")]
        System.IAsyncResult BeginSendNotificationEmail(string templateobjectid, string actionuserfullname, string recipientfullname, string contractnumber, string templateobjecttype, string emailtype, string estimatenumber, string revisionnumber, string comments, System.AsyncCallback callback, object asyncState);
        
        bool EndSendNotificationEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SendCrmEmail", ReplyAction="http://tempuri.org/IRetailSystem/SendCrmEmailResponse")]
        System.IAsyncResult BeginSendCrmEmail(System.Guid contractId, int recipientId, string subject, string body, System.AsyncCallback callback, object asyncState);
        
        bool EndSendCrmEmail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetStudioMQuestionForAProduct", ReplyAction="http://tempuri.org/IRetailSystem/GetStudioMQuestionForAProductResponse")]
        System.IAsyncResult BeginGetStudioMQuestionForAProduct(string pproductid, System.AsyncCallback callback, object asyncState);
        
        string EndGetStudioMQuestionForAProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetInLieuStandardPromotionItems", ReplyAction="http://tempuri.org/IRetailSystem/GetInLieuStandardPromotionItemsResponse")]
        System.IAsyncResult BeginGetInLieuStandardPromotionItems(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> EndGetInLieuStandardPromotionItems(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetRoleAccessModule", ReplyAction="http://tempuri.org/IRetailSystem/GetRoleAccessModuleResponse")]
        System.IAsyncResult BeginGetRoleAccessModule(int roleid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule EndGetRoleAccessModule(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetItemRemoveReason", ReplyAction="http://tempuri.org/IRetailSystem/GetItemRemoveReasonResponse")]
        System.IAsyncResult BeginGetItemRemoveReason(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> EndGetItemRemoveReason(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetItemsNeedSetDefaultAnswer", ReplyAction="http://tempuri.org/IRetailSystem/GetItemsNeedSetDefaultAnswerResponse")]
        System.IAsyncResult BeginGetItemsNeedSetDefaultAnswer(string revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> EndGetItemsNeedSetDefaultAnswer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SetDefaultAnswerForEstimateRevision", ReplyAction="http://tempuri.org/IRetailSystem/SetDefaultAnswerForEstimateRevisionResponse")]
        System.IAsyncResult BeginSetDefaultAnswerForEstimateRevision(string idstring, string studiomstring, string usercode, System.AsyncCallback callback, object asyncState);
        
        bool EndSetDefaultAnswerForEstimateRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/RegisterEvent", ReplyAction="http://tempuri.org/IRetailSystem/RegisterEventResponse")]
        System.IAsyncResult BeginRegisterEvent(string action, int revisionid, int userid, System.AsyncCallback callback, object asyncState);
        
        void EndRegisterEvent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetStudioMAppointmentTime", ReplyAction="http://tempuri.org/IRetailSystem/GetStudioMAppointmentTimeResponse")]
        System.IAsyncResult BeginGetStudioMAppointmentTime(string contractNumber, string eventNumber, System.AsyncCallback callback, object asyncState);
        
        System.DateTime EndGetStudioMAppointmentTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateDetailsDescription", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateDetailsDescriptionResponse")]
        System.IAsyncResult BeginUpdateEstimateDetailsDescription(System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateDetailsDescription(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/MoveEstimateDetailItem", ReplyAction="http://tempuri.org/IRetailSystem/MoveEstimateDetailItemResponse")]
        System.IAsyncResult BeginMoveEstimateDetailItem(int revisionDetailsIdSource, int revisionDetailsIdTarget, int userId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveEstimateDetailItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_GetDocumentInfo", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_GetDocumentInfoResponse")]
        System.IAsyncResult BeginDocuSign_GetDocumentInfo(string revisionid, string estimateid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> EndDocuSign_GetDocumentInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_PushDocumentToTheProcessQueue", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_PushDocumentToTheProcessQueueResponse")]
        System.IAsyncResult BeginDocuSign_PushDocumentToTheProcessQueue(string revisionid, string printtype, string documenttype, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndDocuSign_PushDocumentToTheProcessQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetPromotionProductByMasterPromotionRevisionDeta" +
            "ilsID", ReplyAction="http://tempuri.org/IRetailSystem/GetPromotionProductByMasterPromotionRevisionDeta" +
            "ilsIDResponse")]
        System.IAsyncResult BeginGetPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetExistingPromotionProductByMasterPromotionRevi" +
            "sionDetailsID", ReplyAction="http://tempuri.org/IRetailSystem/GetExistingPromotionProductByMasterPromotionRevi" +
            "sionDetailsIDResponse")]
        System.IAsyncResult BeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> EndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateDetailsByIDString", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateDetailsByIDStringResponse")]
        System.IAsyncResult BeginGetEstimateDetailsByIDString(string selectedrevisiondetailsid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetEstimateDetailsByIDString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DeleteMasterPromotionItem", ReplyAction="http://tempuri.org/IRetailSystem/DeleteMasterPromotionItemResponse")]
        System.IAsyncResult BeginDeleteMasterPromotionItem(string masterpromotionitemid, string selectedpromotionitemids, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteMasterPromotionItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_RemoveDocumentFromTheProcessQueue", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_RemoveDocumentFromTheProcessQueueRespon" +
            "se")]
        System.IAsyncResult BeginDocuSign_RemoveDocumentFromTheProcessQueue(string integrationid, System.AsyncCallback callback, object asyncState);
        
        bool EndDocuSign_RemoveDocumentFromTheProcessQueue(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCRMContactForAccountAsSigner", ReplyAction="http://tempuri.org/IRetailSystem/GetCRMContactForAccountAsSignerResponse")]
        System.IAsyncResult BeginGetCRMContactForAccountAsSigner(System.Guid accountid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> EndGetCRMContactForAccountAsSigner(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_GetEnvelopeHistory", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_GetEnvelopeHistoryResponse")]
        System.IAsyncResult BeginDocuSign_GetEnvelopeHistory(string envelopeid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> EndDocuSign_GetEnvelopeHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_GetEnvelopeHistoryByRevision", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_GetEnvelopeHistoryByRevisionResponse")]
        System.IAsyncResult BeginDocuSign_GetEnvelopeHistoryByRevision(string revisionid, string versiontype, string printtype, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> EndDocuSign_GetEnvelopeHistoryByRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DocuSign_ValidateSignerAndDocuemnt", ReplyAction="http://tempuri.org/IRetailSystem/DocuSign_ValidateSignerAndDocuemntResponse")]
        System.IAsyncResult BeginDocuSign_ValidateSignerAndDocuemnt(string estimateid, string versionnumber, string recipientname, string recipienttype, string recipientaction, System.AsyncCallback callback, object asyncState);
        
        string EndDocuSign_ValidateSignerAndDocuemnt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SearchSpecificJob", ReplyAction="http://tempuri.org/IRetailSystem/SearchSpecificJobResponse")]
        System.IAsyncResult BeginSearchSpecificJob(string customernumber, string contractnumber, string SelectedSalesConsultantId, string LotNumber, string StreetName, string Suburb, string businessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndSearchSpecificJob(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ResetEditEstimateUserID", ReplyAction="http://tempuri.org/IRetailSystem/ResetEditEstimateUserIDResponse")]
        System.IAsyncResult BeginResetEditEstimateUserID(int estimateRevisionId, int editEstimateUserID, System.AsyncCallback callback, object asyncState);
        
        int EndResetEditEstimateUserID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ApplyRounding", ReplyAction="http://tempuri.org/IRetailSystem/ApplyRoundingResponse")]
        System.IAsyncResult BeginApplyRounding(int revisionid, System.AsyncCallback callback, object asyncState);
        
        bool EndApplyRounding(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateDisclaimerUpdateDetails", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateDisclaimerUpdateDetailsResponse")]
        System.IAsyncResult BeginGetEstimateDisclaimerUpdateDetails(int revisionid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail EndGetEstimateDisclaimerUpdateDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SaveDisclaimerUpdateDetails", ReplyAction="http://tempuri.org/IRetailSystem/SaveDisclaimerUpdateDetailsResponse")]
        System.IAsyncResult BeginSaveDisclaimerUpdateDetails(int revisionId, int typeId, int disclaimerNewId, int userId, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveDisclaimerUpdateDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetBusinessUnits", ReplyAction="http://tempuri.org/IRetailSystem/GetBusinessUnitsResponse")]
        System.IAsyncResult BeginGetBusinessUnits(int regionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> EndGetBusinessUnits(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetBCForecastDate", ReplyAction="http://tempuri.org/IRetailSystem/GetBCForecastDateResponse")]
        System.IAsyncResult BeginGetBCForecastDate(string bcContractNumber, System.AsyncCallback callback, object asyncState);
        
        string EndGetBCForecastDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AcceptOriginalEstimate", ReplyAction="http://tempuri.org/IRetailSystem/AcceptOriginalEstimateResponse")]
        System.IAsyncResult BeginAcceptOriginalEstimate(int estimateId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndAcceptOriginalEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AssignQueuedEstimate", ReplyAction="http://tempuri.org/IRetailSystem/AssignQueuedEstimateResponse")]
        System.IAsyncResult BeginAssignQueuedEstimate(int queueId, int userId, int ownerId, System.AsyncCallback callback, object asyncState);
        
        int EndAssignQueuedEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AssignWorkingEstimate", ReplyAction="http://tempuri.org/IRetailSystem/AssignWorkingEstimateResponse")]
        System.IAsyncResult BeginAssignWorkingEstimate(int estimateRevisionId, int userId, int ownerId, System.AsyncCallback callback, object asyncState);
        
        void EndAssignWorkingEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CompleteEstimate", ReplyAction="http://tempuri.org/IRetailSystem/CompleteEstimateResponse")]
        System.IAsyncResult BeginCompleteEstimate(int revisionId, int userId, int statusId, int statusReasonId, int revisionTypeId, int ownerId, System.AsyncCallback callback, object asyncState);
        
        void EndCompleteEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetQueuedEstimates", ReplyAction="http://tempuri.org/IRetailSystem/GetQueuedEstimatesResponse")]
        System.IAsyncResult BeginGetQueuedEstimates(int revisionTypeId, int regionId, int roleId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndGetQueuedEstimates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAssignedEstimates", ReplyAction="http://tempuri.org/IRetailSystem/GetAssignedEstimatesResponse")]
        System.IAsyncResult BeginGetAssignedEstimates(int revisionTypeId, int roleId, int statusId, int userId, int regionId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndGetAssignedEstimates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateHeader", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateHeaderResponse")]
        System.IAsyncResult BeginGetEstimateHeader(int revisionId, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader EndGetEstimateHeader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateDetails", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateDetailsResponse")]
        System.IAsyncResult BeginGetEstimateDetails(int revisionId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetEstimateDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimatesRevisions", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimatesRevisionsResponse")]
        System.IAsyncResult BeginGetEstimatesRevisions(int estimateId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> EndGetEstimatesRevisions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UndoThisRevision", ReplyAction="http://tempuri.org/IRetailSystem/UndoThisRevisionResponse")]
        System.IAsyncResult BeginUndoThisRevision(int bcContractNumber, int estimateId, int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState);
        
        string EndUndoThisRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UndoThisRevisionValidate", ReplyAction="http://tempuri.org/IRetailSystem/UndoThisRevisionValidateResponse")]
        System.IAsyncResult BeginUndoThisRevisionValidate(int estimateId, int bcContractNumber, int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> EndUndoThisRevisionValidate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UndoCurrentMilestone", ReplyAction="http://tempuri.org/IRetailSystem/UndoCurrentMilestoneResponse")]
        System.IAsyncResult BeginUndoCurrentMilestone(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState);
        
        string EndUndoCurrentMilestone(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UndoSetAsContract", ReplyAction="http://tempuri.org/IRetailSystem/UndoSetAsContractResponse")]
        System.IAsyncResult BeginUndoSetAsContract(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState);
        
        string EndUndoSetAsContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateDetails", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateDetailsResponse")]
        System.IAsyncResult BeginUpdateEstimateDetails(
                    int revisionDetailsId, 
                    decimal price, 
                    decimal quantity, 
                    decimal totalprice, 
                    string productDescription, 
                    string extraDescription, 
                    string internalDescription, 
                    string additionalnotes, 
                    string studioManswer, 
                    int itemaccepted, 
                    int categoryid, 
                    int groupid, 
                    int pricedisplayid, 
                    int userId, 
                    int applyanswertoallgroup, 
                    string selectedimageid, 
                    bool issiteworkitem, 
                    string costbtp, 
                    string costdbc, 
                    System.AsyncCallback callback, 
                    object asyncState);
        
        void EndUpdateEstimateDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/DeleteProduct", ReplyAction="http://tempuri.org/IRetailSystem/DeleteProductResponse")]
        System.IAsyncResult BeginDeleteProduct(int revisionDetailsId, string reason, int reasonid, int userId, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndDeleteProduct(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/InsertComment", ReplyAction="http://tempuri.org/IRetailSystem/InsertCommentResponse")]
        System.IAsyncResult BeginInsertComment(int revisionId, string comment, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndInsertComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateComment", ReplyAction="http://tempuri.org/IRetailSystem/UpdateCommentResponse")]
        System.IAsyncResult BeginUpdateComment(int estimateRevisionId, string comment, int userid, int variationnumber, string variationsummary, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateComment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateStatus", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateStatusResponse")]
        System.IAsyncResult BeginUpdateEstimateStatus(int revisionId, int statusId, int statusReasonId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateDifficultyRating", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateDifficultyRatingResponse")]
        System.IAsyncResult BeginUpdateEstimateDifficultyRating(int estimateRevisionId, int difficultyRatingId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateDifficultyRating(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateQueueDifficultyRating", ReplyAction="http://tempuri.org/IRetailSystem/UpdateQueueDifficultyRatingResponse")]
        System.IAsyncResult BeginUpdateQueueDifficultyRating(int queueId, int difficultyRatingId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateQueueDifficultyRating(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/MarginReport_SaveDetails", ReplyAction="http://tempuri.org/IRetailSystem/MarginReport_SaveDetailsResponse")]
        System.IAsyncResult BeginMarginReport_SaveDetails(int estimateRevisionId, int titledLand, int titledLandDays, int basePriceExtensionDays, System.DateTime effectiveDate, double bpeCharge, int requiredBPEChargeType, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndMarginReport_SaveDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/MarginReport_GetDetails", ReplyAction="http://tempuri.org/IRetailSystem/MarginReport_GetDetailsResponse")]
        System.IAsyncResult BeginMarginReport_GetDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail EndMarginReport_GetDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateDueDate", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateDueDateResponse")]
        System.IAsyncResult BeginUpdateEstimateDueDate(int estimateRevisionId, System.DateTime duedate, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateDueDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateAppointmentTime", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateAppointmentTimeResponse")]
        System.IAsyncResult BeginUpdateEstimateAppointmentTime(int estimateRevisionId, System.DateTime appointmentTime, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateAppointmentTime(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateQueueDueDate", ReplyAction="http://tempuri.org/IRetailSystem/UpdateQueueDueDateResponse")]
        System.IAsyncResult BeginUpdateQueueDueDate(int queueId, System.DateTime duedate, int userid, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateQueueDueDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateEstimateEffectiveDate", ReplyAction="http://tempuri.org/IRetailSystem/UpdateEstimateEffectiveDateResponse")]
        System.IAsyncResult BeginUpdateEstimateEffectiveDate(int estimateRevisionId, int priceId, int userId, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateEstimateEffectiveDate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetUsersByRegionAndRole", ReplyAction="http://tempuri.org/IRetailSystem/GetUsersByRegionAndRoleResponse")]
        System.IAsyncResult BeginGetUsersByRegionAndRole(int regionId, int roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> EndGetUsersByRegionAndRole(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetUsersByRegionAndRevisionType", ReplyAction="http://tempuri.org/IRetailSystem/GetUsersByRegionAndRevisionTypeResponse")]
        System.IAsyncResult BeginGetUsersByRegionAndRevisionType(int regionId, int revisionTypeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> EndGetUsersByRegionAndRevisionType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCurrentUser", ReplyAction="http://tempuri.org/IRetailSystem/GetCurrentUserResponse")]
        System.IAsyncResult BeginGetCurrentUser(string loginName, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.User EndGetCurrentUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetUserRoles", ReplyAction="http://tempuri.org/IRetailSystem/GetUserRolesResponse")]
        System.IAsyncResult BeginGetUserRoles(int userId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> EndGetUserRoles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateStatuses", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateStatusesResponse")]
        System.IAsyncResult BeginGetEstimateStatuses(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> EndGetEstimateStatuses(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetStatusReasons", ReplyAction="http://tempuri.org/IRetailSystem/GetStatusReasonsResponse")]
        System.IAsyncResult BeginGetStatusReasons(int statusId, int revisionTypeId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> EndGetStatusReasons(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetDifficultyRatings", ReplyAction="http://tempuri.org/IRetailSystem/GetDifficultyRatingsResponse")]
        System.IAsyncResult BeginGetDifficultyRatings(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> EndGetDifficultyRatings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetRevisionTypeAccess", ReplyAction="http://tempuri.org/IRetailSystem/GetRevisionTypeAccessResponse")]
        System.IAsyncResult BeginGetRevisionTypeAccess(int roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> EndGetRevisionTypeAccess(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetHomePrices", ReplyAction="http://tempuri.org/IRetailSystem/GetHomePricesResponse")]
        System.IAsyncResult BeginGetHomePrices(int estimateRevisionId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> EndGetHomePrices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAuditTrail", ReplyAction="http://tempuri.org/IRetailSystem/GetAuditTrailResponse")]
        System.IAsyncResult BeginGetAuditTrail(int estimateId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> EndGetAuditTrail(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CompareEstimateDetails", ReplyAction="http://tempuri.org/IRetailSystem/CompareEstimateDetailsResponse")]
        System.IAsyncResult BeginCompareEstimateDetails(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> EndCompareEstimateDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CompareEstimateHeader", ReplyAction="http://tempuri.org/IRetailSystem/CompareEstimateHeaderResponse")]
        System.IAsyncResult BeginCompareEstimateHeader(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> EndCompareEstimateHeader(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetLatestEstimateRevisionId", ReplyAction="http://tempuri.org/IRetailSystem/GetLatestEstimateRevisionIdResponse")]
        System.IAsyncResult BeginGetLatestEstimateRevisionId(int estimateId, System.AsyncCallback callback, object asyncState);
        
        int EndGetLatestEstimateRevisionId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetResubmittedEstimateCount", ReplyAction="http://tempuri.org/IRetailSystem/GetResubmittedEstimateCountResponse")]
        System.IAsyncResult BeginGetResubmittedEstimateCount(int userId, int regionId, System.AsyncCallback callback, object asyncState);
        
        int EndGetResubmittedEstimateCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetOptionTreeFromMasterHome", ReplyAction="http://tempuri.org/IRetailSystem/GetOptionTreeFromMasterHomeResponse")]
        System.IAsyncResult BeginGetOptionTreeFromMasterHome(string regionid, string homeid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromMasterHome(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckValidProductByRevision", ReplyAction="http://tempuri.org/IRetailSystem/CheckValidProductByRevisionResponse")]
        System.IAsyncResult BeginCheckValidProductByRevision(int revisionId, string productId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckValidProductByRevision(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetOptionTreeAsOptionTreeProductsForEstimateItem" +
            "Replace", ReplyAction="http://tempuri.org/IRetailSystem/GetOptionTreeAsOptionTreeProductsForEstimateItem" +
            "ReplaceResponse")]
        System.IAsyncResult BeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(string revisionId, string areaName, string groupName, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetOptionTreeAsOptionTreeProducts", ReplyAction="http://tempuri.org/IRetailSystem/GetOptionTreeAsOptionTreeProductsResponse")]
        System.IAsyncResult BeginGetOptionTreeAsOptionTreeProducts(string revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeAsOptionTreeProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetOptionTreeFromAllProducts", ReplyAction="http://tempuri.org/IRetailSystem/GetOptionTreeFromAllProductsResponse")]
        System.IAsyncResult BeginGetOptionTreeFromAllProducts(string regionid, string searchText, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromAllProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetOptionTreeFromAllProductsExtended", ReplyAction="http://tempuri.org/IRetailSystem/GetOptionTreeFromAllProductsExtendedResponse")]
        System.IAsyncResult BeginGetOptionTreeFromAllProductsExtended(int stateid, string regionid, int homeid, string productname, string productdesc, int areaid, int groupid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromAllProductsExtended(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetSelectedPAG", ReplyAction="http://tempuri.org/IRetailSystem/GetSelectedPAGResponse")]
        System.IAsyncResult BeginGetSelectedPAG(string estimateid, string revisionnumber, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> EndGetSelectedPAG(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetCommentsForAnEstimate", ReplyAction="http://tempuri.org/IRetailSystem/GetCommentsForAnEstimateResponse")]
        System.IAsyncResult BeginGetCommentsForAnEstimate(string revisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> EndGetCommentsForAnEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAccessPermission", ReplyAction="http://tempuri.org/IRetailSystem/GetAccessPermissionResponse")]
        System.IAsyncResult BeginGetAccessPermission(string revisionid, string userid, string roleid, System.AsyncCallback callback, object asyncState);
        
        bool EndGetAccessPermission(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetEstimateCount", ReplyAction="http://tempuri.org/IRetailSystem/GetEstimateCountResponse")]
        System.IAsyncResult BeginGetEstimateCount(int userId, int roleId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<int> EndGetEstimateCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SaveSelectedItem", ReplyAction="http://tempuri.org/IRetailSystem/SaveSelectedItemResponse")]
        System.IAsyncResult BeginSaveSelectedItem(int selectedid, int revisionid, int pagid, int userid, System.AsyncCallback callback, object asyncState);
        
        int EndSaveSelectedItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SaveEditItemDetails", ReplyAction="http://tempuri.org/IRetailSystem/SaveEditItemDetailsResponse")]
        System.IAsyncResult BeginSaveEditItemDetails(int selectedid, int revisionid, decimal qty, decimal sellprice, string productdescription, string extradescription, string internaldescription, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveEditItemDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/RemoveItem", ReplyAction="http://tempuri.org/IRetailSystem/RemoveItemResponse")]
        System.IAsyncResult BeginRemoveItem(int selectedid, int estimateid, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyItemFromOptionTreeToEstimate", ReplyAction="http://tempuri.org/IRetailSystem/CopyItemFromOptionTreeToEstimateResponse")]
        System.IAsyncResult BeginCopyItemFromOptionTreeToEstimate(int estimatedetailsid, int revisiondetailsid, int revisionid, int productareagroupid, int userid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromOptionTreeToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyItemFromMasterHomeToEstimate", ReplyAction="http://tempuri.org/IRetailSystem/CopyItemFromMasterHomeToEstimateResponse")]
        System.IAsyncResult BeginCopyItemFromMasterHomeToEstimate(int regionid, int optionid, int revisionid, int userid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromMasterHomeToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyItemFromAllProductsToEstimate", ReplyAction="http://tempuri.org/IRetailSystem/CopyItemFromAllProductsToEstimateResponse")]
        System.IAsyncResult BeginCopyItemFromAllProductsToEstimate(int regionid, string productid, int revisionid, int userid, System.AsyncCallback callback, object asyncState);
        
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromAllProductsToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SynchronizeNewOptionToEstimate", ReplyAction="http://tempuri.org/IRetailSystem/SynchronizeNewOptionToEstimateResponse")]
        System.IAsyncResult BeginSynchronizeNewOptionToEstimate(int revisionid, System.AsyncCallback callback, object asyncState);
        
        bool EndSynchronizeNewOptionToEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAdditionalNotesTemplateAndProducts", ReplyAction="http://tempuri.org/IRetailSystem/GetAdditionalNotesTemplateAndProductsResponse")]
        System.IAsyncResult BeginGetAdditionalNotesTemplateAndProducts(int revisionid, int userid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAdditionalNotesTemplateAndProducts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAdditionalNotesTemplateAndProductsByRegion", ReplyAction="http://tempuri.org/IRetailSystem/GetAdditionalNotesTemplateAndProductsByRegionRes" +
            "ponse")]
        System.IAsyncResult BeginGetAdditionalNotesTemplateAndProductsByRegion(string templatename, string subregionid, int userid, int active, int selectedroleid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAdditionalNotesTemplateAndProductsByRegion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateNoteTemplate", ReplyAction="http://tempuri.org/IRetailSystem/UpdateNoteTemplateResponse")]
        System.IAsyncResult BeginUpdateNoteTemplate(int templateid, string templatename, int status, int userid, string action, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateNoteTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckNewNoteTemplateNameExists", ReplyAction="http://tempuri.org/IRetailSystem/CheckNewNoteTemplateNameExistsResponse")]
        System.IAsyncResult BeginCheckNewNoteTemplateNameExists(int templateid, string templatename, System.AsyncCallback callback, object asyncState);
        
        string EndCheckNewNoteTemplateNameExists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AddAdditonalNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/AddAdditonalNotesTemplateResponse")]
        System.IAsyncResult BeginAddAdditonalNotesTemplate(string templatename, int revisionid, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndAddAdditonalNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetSQSConfiguration", ReplyAction="http://tempuri.org/IRetailSystem/GetSQSConfigurationResponse")]
        System.IAsyncResult BeginGetSQSConfiguration(string configCode, string codeValue, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> EndGetSQSConfiguration(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetSalesRegionByState", ReplyAction="http://tempuri.org/IRetailSystem/GetSalesRegionByStateResponse")]
        System.IAsyncResult BeginGetSalesRegionByState(string stateid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> EndGetSalesRegionByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetPriceRegionByState", ReplyAction="http://tempuri.org/IRetailSystem/GetPriceRegionByStateResponse")]
        System.IAsyncResult BeginGetPriceRegionByState(string stateid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> EndGetPriceRegionByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateSalesEstimateLog", ReplyAction="http://tempuri.org/IRetailSystem/CreateSalesEstimateLogResponse")]
        System.IAsyncResult BeginCreateSalesEstimateLog(string username, Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action, int estimateRevisionId, string extraDescription, int reasonCode, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateSalesEstimateLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SetContractStatus", ReplyAction="http://tempuri.org/IRetailSystem/SetContractStatusResponse")]
        System.IAsyncResult BeginSetContractStatus(string username, int estimateRevisionId, Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status, System.AsyncCallback callback, object asyncState);
        
        bool EndSetContractStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/RemoveItemFromNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/RemoveItemFromNotesTemplateResponse")]
        System.IAsyncResult BeginRemoveItemFromNotesTemplate(string templateid, string productareagroupid, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveItemFromNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetAvailableItemsForNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/GetAvailableItemsForNotesTemplateResponse")]
        System.IAsyncResult BeginGetAvailableItemsForNotesTemplate(string templateid, string searchtext, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAvailableItemsForNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AddItemToNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/AddItemToNotesTemplateResponse")]
        System.IAsyncResult BeginAddItemToNotesTemplate(string templateid, string selecteditemids, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndAddItemToNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/AddNewNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/AddNewNotesTemplateResponse")]
        System.IAsyncResult BeginAddNewNotesTemplate(string templatename, string regionid, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndAddNewNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/RemoveNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/RemoveNotesTemplateResponse")]
        System.IAsyncResult BeginRemoveNotesTemplate(string templateid, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndRemoveNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CopyNotesTemplate", ReplyAction="http://tempuri.org/IRetailSystem/CopyNotesTemplateResponse")]
        System.IAsyncResult BeginCopyNotesTemplate(string templatename, string regionid, int userid, string templateid, System.AsyncCallback callback, object asyncState);
        
        bool EndCopyNotesTemplate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CreateTaskForContract", ReplyAction="http://tempuri.org/IRetailSystem/CreateTaskForContractResponse")]
        System.IAsyncResult BeginCreateTaskForContract(string contractid, int revisionid, string subject, System.DateTime duedate, string category, string notes, System.AsyncCallback callback, object asyncState);
        
        bool EndCreateTaskForContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateNotesTemplateItem", ReplyAction="http://tempuri.org/IRetailSystem/UpdateNotesTemplateItemResponse")]
        System.IAsyncResult BeginUpdateNotesTemplateItem(string templateid, string productareagroupid, decimal quanitity, decimal price, string extradescription, string internaldescription, string additionalinfo, int userid, bool usedefaultquantity, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateNotesTemplateItem(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/SynchroniseCustomerDetails", ReplyAction="http://tempuri.org/IRetailSystem/SynchroniseCustomerDetailsResponse")]
        System.IAsyncResult BeginSynchroniseCustomerDetails(string contractNo, System.AsyncCallback callback, object asyncState);
        
        string EndSynchroniseCustomerDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetNonstandardCategory", ReplyAction="http://tempuri.org/IRetailSystem/GetNonstandardCategoryResponse")]
        System.IAsyncResult BeginGetNonstandardCategory(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> EndGetNonstandardCategory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetNonstandardCategoryByState", ReplyAction="http://tempuri.org/IRetailSystem/GetNonstandardCategoryByStateResponse")]
        System.IAsyncResult BeginGetNonstandardCategoryByState(int stateid, int selectedareaid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> EndGetNonstandardCategoryByState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetNonstandardGroups", ReplyAction="http://tempuri.org/IRetailSystem/GetNonstandardGroupsResponse")]
        System.IAsyncResult BeginGetNonstandardGroups(int selectedareaid, int stateid, int selectedgroupid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> EndGetNonstandardGroups(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetPriceDisplayCodes", ReplyAction="http://tempuri.org/IRetailSystem/GetPriceDisplayCodesResponse")]
        System.IAsyncResult BeginGetPriceDisplayCodes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> EndGetPriceDisplayCodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/GetProductImages", ReplyAction="http://tempuri.org/IRetailSystem/GetProductImagesResponse")]
        System.IAsyncResult BeginGetProductImages(string productid, int supplierid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> EndGetProductImages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/CheckEstimateLockStatus", ReplyAction="http://tempuri.org/IRetailSystem/CheckEstimateLockStatusResponse")]
        System.IAsyncResult BeginCheckEstimateLockStatus(int estimaterevisionid, System.AsyncCallback callback, object asyncState);
        
        string EndCheckEstimateLockStatus(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UnlockEstimate", ReplyAction="http://tempuri.org/IRetailSystem/UnlockEstimateResponse")]
        System.IAsyncResult BeginUnlockEstimate(int estimaterevisionid, int type, System.AsyncCallback callback, object asyncState);
        
        void EndUnlockEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/ValidateStudioMEstimate", ReplyAction="http://tempuri.org/IRetailSystem/ValidateStudioMEstimateResponse")]
        System.IAsyncResult BeginValidateStudioMEstimate(int estimaterevisionid, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateStudioMEstimate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IRetailSystem/UpdateItemAcceptance", ReplyAction="http://tempuri.org/IRetailSystem/UpdateItemAcceptanceResponse")]
        System.IAsyncResult BeginUpdateItemAcceptance(string revisionestimatedetailsid, int accepted, int userid, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdateItemAcceptance(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IRetailSystemChannel : Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContractDraftActionAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContractDraftActionAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFinalContractActionAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFinalContractActionAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerSupportActionAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerSupportActionAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalesEstimatorActionAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalesEstimatorActionAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContractDraftCreationVisibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContractDraftCreationVisibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFinalContractCreationVisibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFinalContractCreationVisibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateStudioMRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateStudioMRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateSetEstimateStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateSetEstimateStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCustomerDocumentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCustomerDocumentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCustomerDocumentDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCustomerDocumentDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRelevantPAGFromOnePAGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRelevantPAGFromOnePAGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckRevisionTypeAllowToAddNSRCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckRevisionTypeAllowToAddNSRCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateAcceptFlagForRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateAcceptFlagForRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateStudioMRevisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateStudioMRevisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateAppointmentDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateAppointmentDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNextEstimateRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNextEstimateRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAuditLogsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuditLogsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDeletedItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDeletedItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReAddDeletedEstimateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReAddDeletedEstimateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReAddDeletedMasterPromotionEstimateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReAddDeletedMasterPromotionEstimateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllFacadeFromRevisonIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllFacadeFromRevisonIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAllAvailableHomeByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllAvailableHomeByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHomeFullNameByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHomeFullNameByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAreaNameWithAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAreaNameWithAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetGroupNameWithAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetGroupNameWithAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckFacadeConfigurationDifferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckFacadeConfigurationDifferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckHomeConfigurationDifferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckHomeConfigurationDifferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeFacadeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeFacadeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeHomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeHomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContractTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContractTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateContractTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateContractTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHomeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHomeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateHomeNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateHomeNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyEstimateCheckDifferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyEstimateCheckDifferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAreaSurchargeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAreaSurchargeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<decimal> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<decimal>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPagByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPagByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUpgradeOptionListForStandardInclusionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUpgradeOptionListForStandardInclusionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudioMQandACompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudioMQandACompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Sharepoint_GetFileListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Sharepoint_GetFileListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Sharepoint_SharepointUploadFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Sharepoint_SharepointUploadFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Sharepoint_DeleteFileFromSharepointLibraryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Sharepoint_DeleteFileFromSharepointLibraryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Sharepoint_GetSalesDocumentTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public Sharepoint_GetSalesDocumentTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendNotificationEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendNotificationEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendCrmEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendCrmEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudioMQuestionForAProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudioMQuestionForAProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInLieuStandardPromotionItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInLieuStandardPromotionItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoleAccessModuleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoleAccessModuleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemRemoveReasonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemRemoveReasonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetItemsNeedSetDefaultAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetItemsNeedSetDefaultAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDefaultAnswerForEstimateRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDefaultAnswerForEstimateRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStudioMAppointmentTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStudioMAppointmentTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.DateTime Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.DateTime)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveEstimateDetailItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveEstimateDetailItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_GetDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_GetDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_PushDocumentToTheProcessQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_PushDocumentToTheProcessQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateDetailsByIDStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateDetailsByIDStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteMasterPromotionItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteMasterPromotionItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_RemoveDocumentFromTheProcessQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_RemoveDocumentFromTheProcessQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCRMContactForAccountAsSignerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCRMContactForAccountAsSignerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_GetEnvelopeHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_GetEnvelopeHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_GetEnvelopeHistoryByRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_GetEnvelopeHistoryByRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DocuSign_ValidateSignerAndDocuemntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DocuSign_ValidateSignerAndDocuemntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchSpecificJobCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchSpecificJobCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ResetEditEstimateUserIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ResetEditEstimateUserIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplyRoundingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ApplyRoundingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateDisclaimerUpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateDisclaimerUpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveDisclaimerUpdateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveDisclaimerUpdateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBusinessUnitsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBusinessUnitsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBCForecastDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBCForecastDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AssignQueuedEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AssignQueuedEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQueuedEstimatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQueuedEstimatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAssignedEstimatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAssignedEstimatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimatesRevisionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimatesRevisionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UndoThisRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UndoThisRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UndoThisRevisionValidateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UndoThisRevisionValidateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UndoCurrentMilestoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UndoCurrentMilestoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UndoSetAsContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UndoSetAsContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteProductCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteProductCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MarginReport_GetDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MarginReport_GetDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersByRegionAndRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersByRegionAndRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersByRegionAndRevisionTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersByRegionAndRevisionTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrentUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrentUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserRolesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserRolesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateStatusesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateStatusesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatusReasonsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusReasonsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDifficultyRatingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDifficultyRatingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRevisionTypeAccessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRevisionTypeAccessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHomePricesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHomePricesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAuditTrailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAuditTrailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompareEstimateDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CompareEstimateDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CompareEstimateHeaderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CompareEstimateHeaderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLatestEstimateRevisionIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLatestEstimateRevisionIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResubmittedEstimateCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResubmittedEstimateCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionTreeFromMasterHomeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionTreeFromMasterHomeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckValidProductByRevisionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckValidProductByRevisionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionTreeAsOptionTreeProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionTreeAsOptionTreeProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionTreeFromAllProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionTreeFromAllProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOptionTreeFromAllProductsExtendedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOptionTreeFromAllProductsExtendedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSelectedPAGCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSelectedPAGCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCommentsForAnEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCommentsForAnEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccessPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccessPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEstimateCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEstimateCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveSelectedItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveSelectedItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveEditItemDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveEditItemDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyItemFromOptionTreeToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyItemFromOptionTreeToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyItemFromMasterHomeToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyItemFromMasterHomeToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyItemFromAllProductsToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyItemFromAllProductsToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SynchronizeNewOptionToEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SynchronizeNewOptionToEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAdditionalNotesTemplateAndProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAdditionalNotesTemplateAndProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAdditionalNotesTemplateAndProductsByRegionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAdditionalNotesTemplateAndProductsByRegionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNoteTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNoteTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckNewNoteTemplateNameExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckNewNoteTemplateNameExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddAdditonalNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddAdditonalNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSQSConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSQSConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSalesRegionByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSalesRegionByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPriceRegionByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPriceRegionByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateSalesEstimateLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateSalesEstimateLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetContractStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetContractStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveItemFromNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveItemFromNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableItemsForNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableItemsForNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddItemToNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddItemToNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddNewNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddNewNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoveNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RemoveNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyNotesTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyNotesTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateTaskForContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateTaskForContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateNotesTemplateItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateNotesTemplateItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SynchroniseCustomerDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SynchroniseCustomerDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNonstandardCategoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNonstandardCategoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNonstandardCategoryByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNonstandardCategoryByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetNonstandardGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNonstandardGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPriceDisplayCodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPriceDisplayCodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductImagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductImagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckEstimateLockStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckEstimateLockStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateStudioMEstimateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ValidateStudioMEstimateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateItemAcceptanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateItemAcceptanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RetailSystemClient : System.ServiceModel.ClientBase<Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem>, Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem {
        
        private BeginOperationDelegate onBeginGetContractDraftActionAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetContractDraftActionAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetContractDraftActionAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFinalContractActionAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetFinalContractActionAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetFinalContractActionAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerSupportActionAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetCustomerSupportActionAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerSupportActionAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalesEstimatorActionAvailabilityDelegate;
        
        private EndOperationDelegate onEndGetSalesEstimatorActionAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalesEstimatorActionAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContractDraftCreationVisibilityDelegate;
        
        private EndOperationDelegate onEndGetContractDraftCreationVisibilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetContractDraftCreationVisibilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFinalContractCreationVisibilityDelegate;
        
        private EndOperationDelegate onEndGetFinalContractCreationVisibilityDelegate;
        
        private System.Threading.SendOrPostCallback onGetFinalContractCreationVisibilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateRevisionStatusDelegate;
        
        private EndOperationDelegate onEndGetEstimateRevisionStatusDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateRevisionStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateSplitStudioMRevisionsDelegate;
        
        private EndOperationDelegate onEndCreateSplitStudioMRevisionsDelegate;
        
        private System.Threading.SendOrPostCallback onCreateSplitStudioMRevisionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMergeStudioMRevisionsDelegate;
        
        private EndOperationDelegate onEndMergeStudioMRevisionsDelegate;
        
        private System.Threading.SendOrPostCallback onMergeStudioMRevisionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateContractDraftDelegate;
        
        private EndOperationDelegate onEndCreateContractDraftDelegate;
        
        private System.Threading.SendOrPostCallback onCreateContractDraftCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateFinalContractDelegate;
        
        private EndOperationDelegate onEndCreateFinalContractDelegate;
        
        private System.Threading.SendOrPostCallback onCreateFinalContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCscVariationDelegate;
        
        private EndOperationDelegate onEndCreateCscVariationDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCscVariationCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateStudioMRevisionDelegate;
        
        private EndOperationDelegate onEndCreateStudioMRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onCreateStudioMRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateSetEstimateStatusDelegate;
        
        private EndOperationDelegate onEndValidateSetEstimateStatusDelegate;
        
        private System.Threading.SendOrPostCallback onValidateSetEstimateStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDocumentTypeDelegate;
        
        private EndOperationDelegate onEndGetCustomerDocumentTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDocumentTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCustomerDocumentDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateCustomerDocumentDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCustomerDocumentDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCustomerDocumentDetailsDelegate;
        
        private EndOperationDelegate onEndGetCustomerDocumentDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCustomerDocumentDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRelevantPAGFromOnePAGDelegate;
        
        private EndOperationDelegate onEndGetRelevantPAGFromOnePAGDelegate;
        
        private System.Threading.SendOrPostCallback onGetRelevantPAGFromOnePAGCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateVariationDelegate;
        
        private EndOperationDelegate onEndCreateVariationDelegate;
        
        private System.Threading.SendOrPostCallback onCreateVariationCompletedDelegate;
        
        private BeginOperationDelegate onBeginRejectVariationDelegate;
        
        private EndOperationDelegate onEndRejectVariationDelegate;
        
        private System.Threading.SendOrPostCallback onRejectVariationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSelectedItemsFromOptionTreeToEstimateDelegate;
        
        private EndOperationDelegate onEndSaveSelectedItemsFromOptionTreeToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate;
        
        private EndOperationDelegate onEndReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckRevisionTypeAllowToAddNSRDelegate;
        
        private EndOperationDelegate onEndCheckRevisionTypeAllowToAddNSRDelegate;
        
        private System.Threading.SendOrPostCallback onCheckRevisionTypeAllowToAddNSRCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateAcceptFlagForRevisionDelegate;
        
        private EndOperationDelegate onEndValidateAcceptFlagForRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onValidateAcceptFlagForRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateStudioMRevisionsDelegate;
        
        private EndOperationDelegate onEndValidateStudioMRevisionsDelegate;
        
        private System.Threading.SendOrPostCallback onValidateStudioMRevisionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateAppointmentDateDelegate;
        
        private EndOperationDelegate onEndValidateAppointmentDateDelegate;
        
        private System.Threading.SendOrPostCallback onValidateAppointmentDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNextEstimateRevisionDelegate;
        
        private EndOperationDelegate onEndGetNextEstimateRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onGetNextEstimateRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuditLogsDelegate;
        
        private EndOperationDelegate onEndGetAuditLogsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuditLogsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDeletedItemsDelegate;
        
        private EndOperationDelegate onEndGetDeletedItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDeletedItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginReAddDeletedEstimateItemDelegate;
        
        private EndOperationDelegate onEndReAddDeletedEstimateItemDelegate;
        
        private System.Threading.SendOrPostCallback onReAddDeletedEstimateItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginReAddDeletedMasterPromotionEstimateItemDelegate;
        
        private EndOperationDelegate onEndReAddDeletedMasterPromotionEstimateItemDelegate;
        
        private System.Threading.SendOrPostCallback onReAddDeletedMasterPromotionEstimateItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllFacadeFromRevisonIDDelegate;
        
        private EndOperationDelegate onEndGetAllFacadeFromRevisonIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllFacadeFromRevisonIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllAvailableHomeByStateDelegate;
        
        private EndOperationDelegate onEndGetAllAvailableHomeByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllAvailableHomeByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHomeFullNameByStateDelegate;
        
        private EndOperationDelegate onEndGetHomeFullNameByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetHomeFullNameByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAreaNameWithAllDelegate;
        
        private EndOperationDelegate onEndGetAreaNameWithAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetAreaNameWithAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetGroupNameWithAllDelegate;
        
        private EndOperationDelegate onEndGetGroupNameWithAllDelegate;
        
        private System.Threading.SendOrPostCallback onGetGroupNameWithAllCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckFacadeConfigurationDifferenceDelegate;
        
        private EndOperationDelegate onEndCheckFacadeConfigurationDifferenceDelegate;
        
        private System.Threading.SendOrPostCallback onCheckFacadeConfigurationDifferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckHomeConfigurationDifferenceDelegate;
        
        private EndOperationDelegate onEndCheckHomeConfigurationDifferenceDelegate;
        
        private System.Threading.SendOrPostCallback onCheckHomeConfigurationDifferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeFacadeDelegate;
        
        private EndOperationDelegate onEndChangeFacadeDelegate;
        
        private System.Threading.SendOrPostCallback onChangeFacadeCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeHomeDelegate;
        
        private EndOperationDelegate onEndChangeHomeDelegate;
        
        private System.Threading.SendOrPostCallback onChangeHomeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContractTypeDelegate;
        
        private EndOperationDelegate onEndGetContractTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetContractTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateContractTypeDelegate;
        
        private EndOperationDelegate onEndUpdateContractTypeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateContractTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHomeNameDelegate;
        
        private EndOperationDelegate onEndGetHomeNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetHomeNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateHomeNameDelegate;
        
        private EndOperationDelegate onEndUpdateHomeNameDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateHomeNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyEstimateCheckDifferenceDelegate;
        
        private EndOperationDelegate onEndCopyEstimateCheckDifferenceDelegate;
        
        private System.Threading.SendOrPostCallback onCopyEstimateCheckDifferenceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyEstimateDelegate;
        
        private EndOperationDelegate onEndCopyEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAreaSurchargeDelegate;
        
        private EndOperationDelegate onEndGetAreaSurchargeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAreaSurchargeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPagByIDDelegate;
        
        private EndOperationDelegate onEndGetPagByIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPagByIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUpgradeOptionListForStandardInclusionDelegate;
        
        private EndOperationDelegate onEndGetUpgradeOptionListForStandardInclusionDelegate;
        
        private System.Threading.SendOrPostCallback onGetUpgradeOptionListForStandardInclusionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudioMQandADelegate;
        
        private EndOperationDelegate onEndGetStudioMQandADelegate;
        
        private System.Threading.SendOrPostCallback onGetStudioMQandACompletedDelegate;
        
        private BeginOperationDelegate onBeginSharepoint_GetFileListDelegate;
        
        private EndOperationDelegate onEndSharepoint_GetFileListDelegate;
        
        private System.Threading.SendOrPostCallback onSharepoint_GetFileListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSharepoint_SharepointUploadFileDelegate;
        
        private EndOperationDelegate onEndSharepoint_SharepointUploadFileDelegate;
        
        private System.Threading.SendOrPostCallback onSharepoint_SharepointUploadFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginSharepoint_DeleteFileFromSharepointLibraryDelegate;
        
        private EndOperationDelegate onEndSharepoint_DeleteFileFromSharepointLibraryDelegate;
        
        private System.Threading.SendOrPostCallback onSharepoint_DeleteFileFromSharepointLibraryCompletedDelegate;
        
        private BeginOperationDelegate onBeginSharepoint_GetSalesDocumentTypeDelegate;
        
        private EndOperationDelegate onEndSharepoint_GetSalesDocumentTypeDelegate;
        
        private System.Threading.SendOrPostCallback onSharepoint_GetSalesDocumentTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendNotificationEmailDelegate;
        
        private EndOperationDelegate onEndSendNotificationEmailDelegate;
        
        private System.Threading.SendOrPostCallback onSendNotificationEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendCrmEmailDelegate;
        
        private EndOperationDelegate onEndSendCrmEmailDelegate;
        
        private System.Threading.SendOrPostCallback onSendCrmEmailCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudioMQuestionForAProductDelegate;
        
        private EndOperationDelegate onEndGetStudioMQuestionForAProductDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudioMQuestionForAProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInLieuStandardPromotionItemsDelegate;
        
        private EndOperationDelegate onEndGetInLieuStandardPromotionItemsDelegate;
        
        private System.Threading.SendOrPostCallback onGetInLieuStandardPromotionItemsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoleAccessModuleDelegate;
        
        private EndOperationDelegate onEndGetRoleAccessModuleDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoleAccessModuleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemRemoveReasonDelegate;
        
        private EndOperationDelegate onEndGetItemRemoveReasonDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemRemoveReasonCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetItemsNeedSetDefaultAnswerDelegate;
        
        private EndOperationDelegate onEndGetItemsNeedSetDefaultAnswerDelegate;
        
        private System.Threading.SendOrPostCallback onGetItemsNeedSetDefaultAnswerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDefaultAnswerForEstimateRevisionDelegate;
        
        private EndOperationDelegate onEndSetDefaultAnswerForEstimateRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onSetDefaultAnswerForEstimateRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterEventDelegate;
        
        private EndOperationDelegate onEndRegisterEventDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStudioMAppointmentTimeDelegate;
        
        private EndOperationDelegate onEndGetStudioMAppointmentTimeDelegate;
        
        private System.Threading.SendOrPostCallback onGetStudioMAppointmentTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateDetailsDescriptionDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateDetailsDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateDetailsDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveEstimateDetailItemDelegate;
        
        private EndOperationDelegate onEndMoveEstimateDetailItemDelegate;
        
        private System.Threading.SendOrPostCallback onMoveEstimateDetailItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_GetDocumentInfoDelegate;
        
        private EndOperationDelegate onEndDocuSign_GetDocumentInfoDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_GetDocumentInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_PushDocumentToTheProcessQueueDelegate;
        
        private EndOperationDelegate onEndDocuSign_PushDocumentToTheProcessQueueDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_PushDocumentToTheProcessQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate;
        
        private EndOperationDelegate onEndGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate;
        
        private EndOperationDelegate onEndGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate;
        
        private System.Threading.SendOrPostCallback onGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateDetailsByIDStringDelegate;
        
        private EndOperationDelegate onEndGetEstimateDetailsByIDStringDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateDetailsByIDStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteMasterPromotionItemDelegate;
        
        private EndOperationDelegate onEndDeleteMasterPromotionItemDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteMasterPromotionItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_RemoveDocumentFromTheProcessQueueDelegate;
        
        private EndOperationDelegate onEndDocuSign_RemoveDocumentFromTheProcessQueueDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_RemoveDocumentFromTheProcessQueueCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCRMContactForAccountAsSignerDelegate;
        
        private EndOperationDelegate onEndGetCRMContactForAccountAsSignerDelegate;
        
        private System.Threading.SendOrPostCallback onGetCRMContactForAccountAsSignerCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_GetEnvelopeHistoryDelegate;
        
        private EndOperationDelegate onEndDocuSign_GetEnvelopeHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_GetEnvelopeHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_GetEnvelopeHistoryByRevisionDelegate;
        
        private EndOperationDelegate onEndDocuSign_GetEnvelopeHistoryByRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_GetEnvelopeHistoryByRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginDocuSign_ValidateSignerAndDocuemntDelegate;
        
        private EndOperationDelegate onEndDocuSign_ValidateSignerAndDocuemntDelegate;
        
        private System.Threading.SendOrPostCallback onDocuSign_ValidateSignerAndDocuemntCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchSpecificJobDelegate;
        
        private EndOperationDelegate onEndSearchSpecificJobDelegate;
        
        private System.Threading.SendOrPostCallback onSearchSpecificJobCompletedDelegate;
        
        private BeginOperationDelegate onBeginResetEditEstimateUserIDDelegate;
        
        private EndOperationDelegate onEndResetEditEstimateUserIDDelegate;
        
        private System.Threading.SendOrPostCallback onResetEditEstimateUserIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginApplyRoundingDelegate;
        
        private EndOperationDelegate onEndApplyRoundingDelegate;
        
        private System.Threading.SendOrPostCallback onApplyRoundingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateDisclaimerUpdateDetailsDelegate;
        
        private EndOperationDelegate onEndGetEstimateDisclaimerUpdateDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateDisclaimerUpdateDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDisclaimerUpdateDetailsDelegate;
        
        private EndOperationDelegate onEndSaveDisclaimerUpdateDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDisclaimerUpdateDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBusinessUnitsDelegate;
        
        private EndOperationDelegate onEndGetBusinessUnitsDelegate;
        
        private System.Threading.SendOrPostCallback onGetBusinessUnitsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBCForecastDateDelegate;
        
        private EndOperationDelegate onEndGetBCForecastDateDelegate;
        
        private System.Threading.SendOrPostCallback onGetBCForecastDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcceptOriginalEstimateDelegate;
        
        private EndOperationDelegate onEndAcceptOriginalEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onAcceptOriginalEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssignQueuedEstimateDelegate;
        
        private EndOperationDelegate onEndAssignQueuedEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onAssignQueuedEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAssignWorkingEstimateDelegate;
        
        private EndOperationDelegate onEndAssignWorkingEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onAssignWorkingEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompleteEstimateDelegate;
        
        private EndOperationDelegate onEndCompleteEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onCompleteEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQueuedEstimatesDelegate;
        
        private EndOperationDelegate onEndGetQueuedEstimatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetQueuedEstimatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAssignedEstimatesDelegate;
        
        private EndOperationDelegate onEndGetAssignedEstimatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAssignedEstimatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateHeaderDelegate;
        
        private EndOperationDelegate onEndGetEstimateHeaderDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateHeaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateDetailsDelegate;
        
        private EndOperationDelegate onEndGetEstimateDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimatesRevisionsDelegate;
        
        private EndOperationDelegate onEndGetEstimatesRevisionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimatesRevisionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUndoThisRevisionDelegate;
        
        private EndOperationDelegate onEndUndoThisRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onUndoThisRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUndoThisRevisionValidateDelegate;
        
        private EndOperationDelegate onEndUndoThisRevisionValidateDelegate;
        
        private System.Threading.SendOrPostCallback onUndoThisRevisionValidateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUndoCurrentMilestoneDelegate;
        
        private EndOperationDelegate onEndUndoCurrentMilestoneDelegate;
        
        private System.Threading.SendOrPostCallback onUndoCurrentMilestoneCompletedDelegate;
        
        private BeginOperationDelegate onBeginUndoSetAsContractDelegate;
        
        private EndOperationDelegate onEndUndoSetAsContractDelegate;
        
        private System.Threading.SendOrPostCallback onUndoSetAsContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateDetailsDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteProductDelegate;
        
        private EndOperationDelegate onEndDeleteProductDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteProductCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertCommentDelegate;
        
        private EndOperationDelegate onEndInsertCommentDelegate;
        
        private System.Threading.SendOrPostCallback onInsertCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateCommentDelegate;
        
        private EndOperationDelegate onEndUpdateCommentDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCommentCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateStatusDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateStatusDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateDifficultyRatingDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateDifficultyRatingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateDifficultyRatingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateQueueDifficultyRatingDelegate;
        
        private EndOperationDelegate onEndUpdateQueueDifficultyRatingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateQueueDifficultyRatingCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarginReport_SaveDetailsDelegate;
        
        private EndOperationDelegate onEndMarginReport_SaveDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onMarginReport_SaveDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMarginReport_GetDetailsDelegate;
        
        private EndOperationDelegate onEndMarginReport_GetDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onMarginReport_GetDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateDueDateDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateDueDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateDueDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateAppointmentTimeDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateAppointmentTimeDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateAppointmentTimeCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateQueueDueDateDelegate;
        
        private EndOperationDelegate onEndUpdateQueueDueDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateQueueDueDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEstimateEffectiveDateDelegate;
        
        private EndOperationDelegate onEndUpdateEstimateEffectiveDateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEstimateEffectiveDateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersByRegionAndRoleDelegate;
        
        private EndOperationDelegate onEndGetUsersByRegionAndRoleDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersByRegionAndRoleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersByRegionAndRevisionTypeDelegate;
        
        private EndOperationDelegate onEndGetUsersByRegionAndRevisionTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersByRegionAndRevisionTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrentUserDelegate;
        
        private EndOperationDelegate onEndGetCurrentUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrentUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserRolesDelegate;
        
        private EndOperationDelegate onEndGetUserRolesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserRolesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateStatusesDelegate;
        
        private EndOperationDelegate onEndGetEstimateStatusesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateStatusesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusReasonsDelegate;
        
        private EndOperationDelegate onEndGetStatusReasonsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusReasonsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDifficultyRatingsDelegate;
        
        private EndOperationDelegate onEndGetDifficultyRatingsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDifficultyRatingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRevisionTypeAccessDelegate;
        
        private EndOperationDelegate onEndGetRevisionTypeAccessDelegate;
        
        private System.Threading.SendOrPostCallback onGetRevisionTypeAccessCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHomePricesDelegate;
        
        private EndOperationDelegate onEndGetHomePricesDelegate;
        
        private System.Threading.SendOrPostCallback onGetHomePricesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAuditTrailDelegate;
        
        private EndOperationDelegate onEndGetAuditTrailDelegate;
        
        private System.Threading.SendOrPostCallback onGetAuditTrailCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompareEstimateDetailsDelegate;
        
        private EndOperationDelegate onEndCompareEstimateDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onCompareEstimateDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginCompareEstimateHeaderDelegate;
        
        private EndOperationDelegate onEndCompareEstimateHeaderDelegate;
        
        private System.Threading.SendOrPostCallback onCompareEstimateHeaderCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLatestEstimateRevisionIdDelegate;
        
        private EndOperationDelegate onEndGetLatestEstimateRevisionIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetLatestEstimateRevisionIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResubmittedEstimateCountDelegate;
        
        private EndOperationDelegate onEndGetResubmittedEstimateCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetResubmittedEstimateCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionTreeFromMasterHomeDelegate;
        
        private EndOperationDelegate onEndGetOptionTreeFromMasterHomeDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionTreeFromMasterHomeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckValidProductByRevisionDelegate;
        
        private EndOperationDelegate onEndCheckValidProductByRevisionDelegate;
        
        private System.Threading.SendOrPostCallback onCheckValidProductByRevisionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate;
        
        private EndOperationDelegate onEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionTreeAsOptionTreeProductsDelegate;
        
        private EndOperationDelegate onEndGetOptionTreeAsOptionTreeProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionTreeAsOptionTreeProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionTreeFromAllProductsDelegate;
        
        private EndOperationDelegate onEndGetOptionTreeFromAllProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionTreeFromAllProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOptionTreeFromAllProductsExtendedDelegate;
        
        private EndOperationDelegate onEndGetOptionTreeFromAllProductsExtendedDelegate;
        
        private System.Threading.SendOrPostCallback onGetOptionTreeFromAllProductsExtendedCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSelectedPAGDelegate;
        
        private EndOperationDelegate onEndGetSelectedPAGDelegate;
        
        private System.Threading.SendOrPostCallback onGetSelectedPAGCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCommentsForAnEstimateDelegate;
        
        private EndOperationDelegate onEndGetCommentsForAnEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onGetCommentsForAnEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccessPermissionDelegate;
        
        private EndOperationDelegate onEndGetAccessPermissionDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccessPermissionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEstimateCountDelegate;
        
        private EndOperationDelegate onEndGetEstimateCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetEstimateCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveSelectedItemDelegate;
        
        private EndOperationDelegate onEndSaveSelectedItemDelegate;
        
        private System.Threading.SendOrPostCallback onSaveSelectedItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveEditItemDetailsDelegate;
        
        private EndOperationDelegate onEndSaveEditItemDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveEditItemDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveItemDelegate;
        
        private EndOperationDelegate onEndRemoveItemDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyItemFromOptionTreeToEstimateDelegate;
        
        private EndOperationDelegate onEndCopyItemFromOptionTreeToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyItemFromOptionTreeToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyItemFromMasterHomeToEstimateDelegate;
        
        private EndOperationDelegate onEndCopyItemFromMasterHomeToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyItemFromMasterHomeToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyItemFromAllProductsToEstimateDelegate;
        
        private EndOperationDelegate onEndCopyItemFromAllProductsToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyItemFromAllProductsToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSynchronizeNewOptionToEstimateDelegate;
        
        private EndOperationDelegate onEndSynchronizeNewOptionToEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onSynchronizeNewOptionToEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAdditionalNotesTemplateAndProductsDelegate;
        
        private EndOperationDelegate onEndGetAdditionalNotesTemplateAndProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAdditionalNotesTemplateAndProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAdditionalNotesTemplateAndProductsByRegionDelegate;
        
        private EndOperationDelegate onEndGetAdditionalNotesTemplateAndProductsByRegionDelegate;
        
        private System.Threading.SendOrPostCallback onGetAdditionalNotesTemplateAndProductsByRegionCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNoteTemplateDelegate;
        
        private EndOperationDelegate onEndUpdateNoteTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNoteTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckNewNoteTemplateNameExistsDelegate;
        
        private EndOperationDelegate onEndCheckNewNoteTemplateNameExistsDelegate;
        
        private System.Threading.SendOrPostCallback onCheckNewNoteTemplateNameExistsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddAdditonalNotesTemplateDelegate;
        
        private EndOperationDelegate onEndAddAdditonalNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddAdditonalNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSQSConfigurationDelegate;
        
        private EndOperationDelegate onEndGetSQSConfigurationDelegate;
        
        private System.Threading.SendOrPostCallback onGetSQSConfigurationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSalesRegionByStateDelegate;
        
        private EndOperationDelegate onEndGetSalesRegionByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetSalesRegionByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPriceRegionByStateDelegate;
        
        private EndOperationDelegate onEndGetPriceRegionByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetPriceRegionByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateSalesEstimateLogDelegate;
        
        private EndOperationDelegate onEndCreateSalesEstimateLogDelegate;
        
        private System.Threading.SendOrPostCallback onCreateSalesEstimateLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetContractStatusDelegate;
        
        private EndOperationDelegate onEndSetContractStatusDelegate;
        
        private System.Threading.SendOrPostCallback onSetContractStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveItemFromNotesTemplateDelegate;
        
        private EndOperationDelegate onEndRemoveItemFromNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveItemFromNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableItemsForNotesTemplateDelegate;
        
        private EndOperationDelegate onEndGetAvailableItemsForNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableItemsForNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddItemToNotesTemplateDelegate;
        
        private EndOperationDelegate onEndAddItemToNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddItemToNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddNewNotesTemplateDelegate;
        
        private EndOperationDelegate onEndAddNewNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onAddNewNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginRemoveNotesTemplateDelegate;
        
        private EndOperationDelegate onEndRemoveNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onRemoveNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyNotesTemplateDelegate;
        
        private EndOperationDelegate onEndCopyNotesTemplateDelegate;
        
        private System.Threading.SendOrPostCallback onCopyNotesTemplateCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateTaskForContractDelegate;
        
        private EndOperationDelegate onEndCreateTaskForContractDelegate;
        
        private System.Threading.SendOrPostCallback onCreateTaskForContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateNotesTemplateItemDelegate;
        
        private EndOperationDelegate onEndUpdateNotesTemplateItemDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateNotesTemplateItemCompletedDelegate;
        
        private BeginOperationDelegate onBeginSynchroniseCustomerDetailsDelegate;
        
        private EndOperationDelegate onEndSynchroniseCustomerDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onSynchroniseCustomerDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNonstandardCategoryDelegate;
        
        private EndOperationDelegate onEndGetNonstandardCategoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetNonstandardCategoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNonstandardCategoryByStateDelegate;
        
        private EndOperationDelegate onEndGetNonstandardCategoryByStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetNonstandardCategoryByStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNonstandardGroupsDelegate;
        
        private EndOperationDelegate onEndGetNonstandardGroupsDelegate;
        
        private System.Threading.SendOrPostCallback onGetNonstandardGroupsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPriceDisplayCodesDelegate;
        
        private EndOperationDelegate onEndGetPriceDisplayCodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetPriceDisplayCodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductImagesDelegate;
        
        private EndOperationDelegate onEndGetProductImagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductImagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckEstimateLockStatusDelegate;
        
        private EndOperationDelegate onEndCheckEstimateLockStatusDelegate;
        
        private System.Threading.SendOrPostCallback onCheckEstimateLockStatusCompletedDelegate;
        
        private BeginOperationDelegate onBeginUnlockEstimateDelegate;
        
        private EndOperationDelegate onEndUnlockEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onUnlockEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginValidateStudioMEstimateDelegate;
        
        private EndOperationDelegate onEndValidateStudioMEstimateDelegate;
        
        private System.Threading.SendOrPostCallback onValidateStudioMEstimateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateItemAcceptanceDelegate;
        
        private EndOperationDelegate onEndUpdateItemAcceptanceDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateItemAcceptanceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public RetailSystemClient() {
        }
        
        public RetailSystemClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RetailSystemClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetailSystemClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RetailSystemClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetContractDraftActionAvailabilityCompletedEventArgs> GetContractDraftActionAvailabilityCompleted;
        
        public event System.EventHandler<GetFinalContractActionAvailabilityCompletedEventArgs> GetFinalContractActionAvailabilityCompleted;
        
        public event System.EventHandler<GetCustomerSupportActionAvailabilityCompletedEventArgs> GetCustomerSupportActionAvailabilityCompleted;
        
        public event System.EventHandler<GetSalesEstimatorActionAvailabilityCompletedEventArgs> GetSalesEstimatorActionAvailabilityCompleted;
        
        public event System.EventHandler<GetContractDraftCreationVisibilityCompletedEventArgs> GetContractDraftCreationVisibilityCompleted;
        
        public event System.EventHandler<GetFinalContractCreationVisibilityCompletedEventArgs> GetFinalContractCreationVisibilityCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> GetEstimateRevisionStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateSplitStudioMRevisionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MergeStudioMRevisionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateContractDraftCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateFinalContractCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateCscVariationCompleted;
        
        public event System.EventHandler<CreateStudioMRevisionCompletedEventArgs> CreateStudioMRevisionCompleted;
        
        public event System.EventHandler<ValidateSetEstimateStatusCompletedEventArgs> ValidateSetEstimateStatusCompleted;
        
        public event System.EventHandler<GetCustomerDocumentTypeCompletedEventArgs> GetCustomerDocumentTypeCompleted;
        
        public event System.EventHandler<UpdateCustomerDocumentDetailsCompletedEventArgs> UpdateCustomerDocumentDetailsCompleted;
        
        public event System.EventHandler<GetCustomerDocumentDetailsCompletedEventArgs> GetCustomerDocumentDetailsCompleted;
        
        public event System.EventHandler<GetRelevantPAGFromOnePAGCompletedEventArgs> GetRelevantPAGFromOnePAGCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CreateVariationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RejectVariationCompleted;
        
        public event System.EventHandler<SaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs> SaveSelectedItemsFromOptionTreeToEstimateCompleted;
        
        public event System.EventHandler<ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs> ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompleted;
        
        public event System.EventHandler<CheckRevisionTypeAllowToAddNSRCompletedEventArgs> CheckRevisionTypeAllowToAddNSRCompleted;
        
        public event System.EventHandler<ValidateAcceptFlagForRevisionCompletedEventArgs> ValidateAcceptFlagForRevisionCompleted;
        
        public event System.EventHandler<ValidateStudioMRevisionsCompletedEventArgs> ValidateStudioMRevisionsCompleted;
        
        public event System.EventHandler<ValidateAppointmentDateCompletedEventArgs> ValidateAppointmentDateCompleted;
        
        public event System.EventHandler<GetNextEstimateRevisionCompletedEventArgs> GetNextEstimateRevisionCompleted;
        
        public event System.EventHandler<GetAuditLogsCompletedEventArgs> GetAuditLogsCompleted;
        
        public event System.EventHandler<GetDeletedItemsCompletedEventArgs> GetDeletedItemsCompleted;
        
        public event System.EventHandler<ReAddDeletedEstimateItemCompletedEventArgs> ReAddDeletedEstimateItemCompleted;
        
        public event System.EventHandler<ReAddDeletedMasterPromotionEstimateItemCompletedEventArgs> ReAddDeletedMasterPromotionEstimateItemCompleted;
        
        public event System.EventHandler<GetAllFacadeFromRevisonIDCompletedEventArgs> GetAllFacadeFromRevisonIDCompleted;
        
        public event System.EventHandler<GetAllAvailableHomeByStateCompletedEventArgs> GetAllAvailableHomeByStateCompleted;
        
        public event System.EventHandler<GetHomeFullNameByStateCompletedEventArgs> GetHomeFullNameByStateCompleted;
        
        public event System.EventHandler<GetAreaNameWithAllCompletedEventArgs> GetAreaNameWithAllCompleted;
        
        public event System.EventHandler<GetGroupNameWithAllCompletedEventArgs> GetGroupNameWithAllCompleted;
        
        public event System.EventHandler<CheckFacadeConfigurationDifferenceCompletedEventArgs> CheckFacadeConfigurationDifferenceCompleted;
        
        public event System.EventHandler<CheckHomeConfigurationDifferenceCompletedEventArgs> CheckHomeConfigurationDifferenceCompleted;
        
        public event System.EventHandler<ChangeFacadeCompletedEventArgs> ChangeFacadeCompleted;
        
        public event System.EventHandler<ChangeHomeCompletedEventArgs> ChangeHomeCompleted;
        
        public event System.EventHandler<GetContractTypeCompletedEventArgs> GetContractTypeCompleted;
        
        public event System.EventHandler<UpdateContractTypeCompletedEventArgs> UpdateContractTypeCompleted;
        
        public event System.EventHandler<GetHomeNameCompletedEventArgs> GetHomeNameCompleted;
        
        public event System.EventHandler<UpdateHomeNameCompletedEventArgs> UpdateHomeNameCompleted;
        
        public event System.EventHandler<CopyEstimateCheckDifferenceCompletedEventArgs> CopyEstimateCheckDifferenceCompleted;
        
        public event System.EventHandler<CopyEstimateCompletedEventArgs> CopyEstimateCompleted;
        
        public event System.EventHandler<GetAreaSurchargeCompletedEventArgs> GetAreaSurchargeCompleted;
        
        public event System.EventHandler<GetPagByIDCompletedEventArgs> GetPagByIDCompleted;
        
        public event System.EventHandler<GetUpgradeOptionListForStandardInclusionCompletedEventArgs> GetUpgradeOptionListForStandardInclusionCompleted;
        
        public event System.EventHandler<GetStudioMQandACompletedEventArgs> GetStudioMQandACompleted;
        
        public event System.EventHandler<Sharepoint_GetFileListCompletedEventArgs> Sharepoint_GetFileListCompleted;
        
        public event System.EventHandler<Sharepoint_SharepointUploadFileCompletedEventArgs> Sharepoint_SharepointUploadFileCompleted;
        
        public event System.EventHandler<Sharepoint_DeleteFileFromSharepointLibraryCompletedEventArgs> Sharepoint_DeleteFileFromSharepointLibraryCompleted;
        
        public event System.EventHandler<Sharepoint_GetSalesDocumentTypeCompletedEventArgs> Sharepoint_GetSalesDocumentTypeCompleted;
        
        public event System.EventHandler<SendNotificationEmailCompletedEventArgs> SendNotificationEmailCompleted;
        
        public event System.EventHandler<SendCrmEmailCompletedEventArgs> SendCrmEmailCompleted;
        
        public event System.EventHandler<GetStudioMQuestionForAProductCompletedEventArgs> GetStudioMQuestionForAProductCompleted;
        
        public event System.EventHandler<GetInLieuStandardPromotionItemsCompletedEventArgs> GetInLieuStandardPromotionItemsCompleted;
        
        public event System.EventHandler<GetRoleAccessModuleCompletedEventArgs> GetRoleAccessModuleCompleted;
        
        public event System.EventHandler<GetItemRemoveReasonCompletedEventArgs> GetItemRemoveReasonCompleted;
        
        public event System.EventHandler<GetItemsNeedSetDefaultAnswerCompletedEventArgs> GetItemsNeedSetDefaultAnswerCompleted;
        
        public event System.EventHandler<SetDefaultAnswerForEstimateRevisionCompletedEventArgs> SetDefaultAnswerForEstimateRevisionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RegisterEventCompleted;
        
        public event System.EventHandler<GetStudioMAppointmentTimeCompletedEventArgs> GetStudioMAppointmentTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateDetailsDescriptionCompleted;
        
        public event System.EventHandler<MoveEstimateDetailItemCompletedEventArgs> MoveEstimateDetailItemCompleted;
        
        public event System.EventHandler<DocuSign_GetDocumentInfoCompletedEventArgs> DocuSign_GetDocumentInfoCompleted;
        
        public event System.EventHandler<DocuSign_PushDocumentToTheProcessQueueCompletedEventArgs> DocuSign_PushDocumentToTheProcessQueueCompleted;
        
        public event System.EventHandler<GetPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs> GetPromotionProductByMasterPromotionRevisionDetailsIDCompleted;
        
        public event System.EventHandler<GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs> GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompleted;
        
        public event System.EventHandler<GetEstimateDetailsByIDStringCompletedEventArgs> GetEstimateDetailsByIDStringCompleted;
        
        public event System.EventHandler<DeleteMasterPromotionItemCompletedEventArgs> DeleteMasterPromotionItemCompleted;
        
        public event System.EventHandler<DocuSign_RemoveDocumentFromTheProcessQueueCompletedEventArgs> DocuSign_RemoveDocumentFromTheProcessQueueCompleted;
        
        public event System.EventHandler<GetCRMContactForAccountAsSignerCompletedEventArgs> GetCRMContactForAccountAsSignerCompleted;
        
        public event System.EventHandler<DocuSign_GetEnvelopeHistoryCompletedEventArgs> DocuSign_GetEnvelopeHistoryCompleted;
        
        public event System.EventHandler<DocuSign_GetEnvelopeHistoryByRevisionCompletedEventArgs> DocuSign_GetEnvelopeHistoryByRevisionCompleted;
        
        public event System.EventHandler<DocuSign_ValidateSignerAndDocuemntCompletedEventArgs> DocuSign_ValidateSignerAndDocuemntCompleted;
        
        public event System.EventHandler<SearchSpecificJobCompletedEventArgs> SearchSpecificJobCompleted;
        
        public event System.EventHandler<ResetEditEstimateUserIDCompletedEventArgs> ResetEditEstimateUserIDCompleted;
        
        public event System.EventHandler<ApplyRoundingCompletedEventArgs> ApplyRoundingCompleted;
        
        public event System.EventHandler<GetEstimateDisclaimerUpdateDetailsCompletedEventArgs> GetEstimateDisclaimerUpdateDetailsCompleted;
        
        public event System.EventHandler<SaveDisclaimerUpdateDetailsCompletedEventArgs> SaveDisclaimerUpdateDetailsCompleted;
        
        public event System.EventHandler<GetBusinessUnitsCompletedEventArgs> GetBusinessUnitsCompleted;
        
        public event System.EventHandler<GetBCForecastDateCompletedEventArgs> GetBCForecastDateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AcceptOriginalEstimateCompleted;
        
        public event System.EventHandler<AssignQueuedEstimateCompletedEventArgs> AssignQueuedEstimateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AssignWorkingEstimateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CompleteEstimateCompleted;
        
        public event System.EventHandler<GetQueuedEstimatesCompletedEventArgs> GetQueuedEstimatesCompleted;
        
        public event System.EventHandler<GetAssignedEstimatesCompletedEventArgs> GetAssignedEstimatesCompleted;
        
        public event System.EventHandler<GetEstimateHeaderCompletedEventArgs> GetEstimateHeaderCompleted;
        
        public event System.EventHandler<GetEstimateDetailsCompletedEventArgs> GetEstimateDetailsCompleted;
        
        public event System.EventHandler<GetEstimatesRevisionsCompletedEventArgs> GetEstimatesRevisionsCompleted;
        
        public event System.EventHandler<UndoThisRevisionCompletedEventArgs> UndoThisRevisionCompleted;
        
        public event System.EventHandler<UndoThisRevisionValidateCompletedEventArgs> UndoThisRevisionValidateCompleted;
        
        public event System.EventHandler<UndoCurrentMilestoneCompletedEventArgs> UndoCurrentMilestoneCompleted;
        
        public event System.EventHandler<UndoSetAsContractCompletedEventArgs> UndoSetAsContractCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateDetailsCompleted;
        
        public event System.EventHandler<DeleteProductCompletedEventArgs> DeleteProductCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateCommentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateDifficultyRatingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateQueueDifficultyRatingCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MarginReport_SaveDetailsCompleted;
        
        public event System.EventHandler<MarginReport_GetDetailsCompletedEventArgs> MarginReport_GetDetailsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateDueDateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateAppointmentTimeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateQueueDueDateCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateEstimateEffectiveDateCompleted;
        
        public event System.EventHandler<GetUsersByRegionAndRoleCompletedEventArgs> GetUsersByRegionAndRoleCompleted;
        
        public event System.EventHandler<GetUsersByRegionAndRevisionTypeCompletedEventArgs> GetUsersByRegionAndRevisionTypeCompleted;
        
        public event System.EventHandler<GetCurrentUserCompletedEventArgs> GetCurrentUserCompleted;
        
        public event System.EventHandler<GetUserRolesCompletedEventArgs> GetUserRolesCompleted;
        
        public event System.EventHandler<GetEstimateStatusesCompletedEventArgs> GetEstimateStatusesCompleted;
        
        public event System.EventHandler<GetStatusReasonsCompletedEventArgs> GetStatusReasonsCompleted;
        
        public event System.EventHandler<GetDifficultyRatingsCompletedEventArgs> GetDifficultyRatingsCompleted;
        
        public event System.EventHandler<GetRevisionTypeAccessCompletedEventArgs> GetRevisionTypeAccessCompleted;
        
        public event System.EventHandler<GetHomePricesCompletedEventArgs> GetHomePricesCompleted;
        
        public event System.EventHandler<GetAuditTrailCompletedEventArgs> GetAuditTrailCompleted;
        
        public event System.EventHandler<CompareEstimateDetailsCompletedEventArgs> CompareEstimateDetailsCompleted;
        
        public event System.EventHandler<CompareEstimateHeaderCompletedEventArgs> CompareEstimateHeaderCompleted;
        
        public event System.EventHandler<GetLatestEstimateRevisionIdCompletedEventArgs> GetLatestEstimateRevisionIdCompleted;
        
        public event System.EventHandler<GetResubmittedEstimateCountCompletedEventArgs> GetResubmittedEstimateCountCompleted;
        
        public event System.EventHandler<GetOptionTreeFromMasterHomeCompletedEventArgs> GetOptionTreeFromMasterHomeCompleted;
        
        public event System.EventHandler<CheckValidProductByRevisionCompletedEventArgs> CheckValidProductByRevisionCompleted;
        
        public event System.EventHandler<GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedEventArgs> GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompleted;
        
        public event System.EventHandler<GetOptionTreeAsOptionTreeProductsCompletedEventArgs> GetOptionTreeAsOptionTreeProductsCompleted;
        
        public event System.EventHandler<GetOptionTreeFromAllProductsCompletedEventArgs> GetOptionTreeFromAllProductsCompleted;
        
        public event System.EventHandler<GetOptionTreeFromAllProductsExtendedCompletedEventArgs> GetOptionTreeFromAllProductsExtendedCompleted;
        
        public event System.EventHandler<GetSelectedPAGCompletedEventArgs> GetSelectedPAGCompleted;
        
        public event System.EventHandler<GetCommentsForAnEstimateCompletedEventArgs> GetCommentsForAnEstimateCompleted;
        
        public event System.EventHandler<GetAccessPermissionCompletedEventArgs> GetAccessPermissionCompleted;
        
        public event System.EventHandler<GetEstimateCountCompletedEventArgs> GetEstimateCountCompleted;
        
        public event System.EventHandler<SaveSelectedItemCompletedEventArgs> SaveSelectedItemCompleted;
        
        public event System.EventHandler<SaveEditItemDetailsCompletedEventArgs> SaveEditItemDetailsCompleted;
        
        public event System.EventHandler<RemoveItemCompletedEventArgs> RemoveItemCompleted;
        
        public event System.EventHandler<CopyItemFromOptionTreeToEstimateCompletedEventArgs> CopyItemFromOptionTreeToEstimateCompleted;
        
        public event System.EventHandler<CopyItemFromMasterHomeToEstimateCompletedEventArgs> CopyItemFromMasterHomeToEstimateCompleted;
        
        public event System.EventHandler<CopyItemFromAllProductsToEstimateCompletedEventArgs> CopyItemFromAllProductsToEstimateCompleted;
        
        public event System.EventHandler<SynchronizeNewOptionToEstimateCompletedEventArgs> SynchronizeNewOptionToEstimateCompleted;
        
        public event System.EventHandler<GetAdditionalNotesTemplateAndProductsCompletedEventArgs> GetAdditionalNotesTemplateAndProductsCompleted;
        
        public event System.EventHandler<GetAdditionalNotesTemplateAndProductsByRegionCompletedEventArgs> GetAdditionalNotesTemplateAndProductsByRegionCompleted;
        
        public event System.EventHandler<UpdateNoteTemplateCompletedEventArgs> UpdateNoteTemplateCompleted;
        
        public event System.EventHandler<CheckNewNoteTemplateNameExistsCompletedEventArgs> CheckNewNoteTemplateNameExistsCompleted;
        
        public event System.EventHandler<AddAdditonalNotesTemplateCompletedEventArgs> AddAdditonalNotesTemplateCompleted;
        
        public event System.EventHandler<GetSQSConfigurationCompletedEventArgs> GetSQSConfigurationCompleted;
        
        public event System.EventHandler<GetSalesRegionByStateCompletedEventArgs> GetSalesRegionByStateCompleted;
        
        public event System.EventHandler<GetPriceRegionByStateCompletedEventArgs> GetPriceRegionByStateCompleted;
        
        public event System.EventHandler<CreateSalesEstimateLogCompletedEventArgs> CreateSalesEstimateLogCompleted;
        
        public event System.EventHandler<SetContractStatusCompletedEventArgs> SetContractStatusCompleted;
        
        public event System.EventHandler<RemoveItemFromNotesTemplateCompletedEventArgs> RemoveItemFromNotesTemplateCompleted;
        
        public event System.EventHandler<GetAvailableItemsForNotesTemplateCompletedEventArgs> GetAvailableItemsForNotesTemplateCompleted;
        
        public event System.EventHandler<AddItemToNotesTemplateCompletedEventArgs> AddItemToNotesTemplateCompleted;
        
        public event System.EventHandler<AddNewNotesTemplateCompletedEventArgs> AddNewNotesTemplateCompleted;
        
        public event System.EventHandler<RemoveNotesTemplateCompletedEventArgs> RemoveNotesTemplateCompleted;
        
        public event System.EventHandler<CopyNotesTemplateCompletedEventArgs> CopyNotesTemplateCompleted;
        
        public event System.EventHandler<CreateTaskForContractCompletedEventArgs> CreateTaskForContractCompleted;
        
        public event System.EventHandler<UpdateNotesTemplateItemCompletedEventArgs> UpdateNotesTemplateItemCompleted;
        
        public event System.EventHandler<SynchroniseCustomerDetailsCompletedEventArgs> SynchroniseCustomerDetailsCompleted;
        
        public event System.EventHandler<GetNonstandardCategoryCompletedEventArgs> GetNonstandardCategoryCompleted;
        
        public event System.EventHandler<GetNonstandardCategoryByStateCompletedEventArgs> GetNonstandardCategoryByStateCompleted;
        
        public event System.EventHandler<GetNonstandardGroupsCompletedEventArgs> GetNonstandardGroupsCompleted;
        
        public event System.EventHandler<GetPriceDisplayCodesCompletedEventArgs> GetPriceDisplayCodesCompleted;
        
        public event System.EventHandler<GetProductImagesCompletedEventArgs> GetProductImagesCompleted;
        
        public event System.EventHandler<CheckEstimateLockStatusCompletedEventArgs> CheckEstimateLockStatusCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UnlockEstimateCompleted;
        
        public event System.EventHandler<ValidateStudioMEstimateCompletedEventArgs> ValidateStudioMEstimateCompleted;
        
        public event System.EventHandler<UpdateItemAcceptanceCompletedEventArgs> UpdateItemAcceptanceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetContractDraftActionAvailability(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContractDraftActionAvailability(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetContractDraftActionAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetContractDraftActionAvailability(result);
        }
        
        private System.IAsyncResult OnBeginGetContractDraftActionAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetContractDraftActionAvailability(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetContractDraftActionAvailability(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetContractDraftActionAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContractDraftActionAvailabilityCompleted(object state) {
            if ((this.GetContractDraftActionAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContractDraftActionAvailabilityCompleted(this, new GetContractDraftActionAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContractDraftActionAvailabilityAsync(int estimateRevisionId) {
            this.GetContractDraftActionAvailabilityAsync(estimateRevisionId, null);
        }
        
        public void GetContractDraftActionAvailabilityAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetContractDraftActionAvailabilityDelegate == null)) {
                this.onBeginGetContractDraftActionAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetContractDraftActionAvailability);
            }
            if ((this.onEndGetContractDraftActionAvailabilityDelegate == null)) {
                this.onEndGetContractDraftActionAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetContractDraftActionAvailability);
            }
            if ((this.onGetContractDraftActionAvailabilityCompletedDelegate == null)) {
                this.onGetContractDraftActionAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContractDraftActionAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetContractDraftActionAvailabilityDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetContractDraftActionAvailabilityDelegate, this.onGetContractDraftActionAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetFinalContractActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFinalContractActionAvailability(estimateRevisionId, contractNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetFinalContractActionAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetFinalContractActionAvailability(result);
        }
        
        private System.IAsyncResult OnBeginGetFinalContractActionAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            string contractNumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetFinalContractActionAvailability(estimateRevisionId, contractNumber, callback, asyncState);
        }
        
        private object[] OnEndGetFinalContractActionAvailability(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetFinalContractActionAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFinalContractActionAvailabilityCompleted(object state) {
            if ((this.GetFinalContractActionAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFinalContractActionAvailabilityCompleted(this, new GetFinalContractActionAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFinalContractActionAvailabilityAsync(int estimateRevisionId, string contractNumber) {
            this.GetFinalContractActionAvailabilityAsync(estimateRevisionId, contractNumber, null);
        }
        
        public void GetFinalContractActionAvailabilityAsync(int estimateRevisionId, string contractNumber, object userState) {
            if ((this.onBeginGetFinalContractActionAvailabilityDelegate == null)) {
                this.onBeginGetFinalContractActionAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetFinalContractActionAvailability);
            }
            if ((this.onEndGetFinalContractActionAvailabilityDelegate == null)) {
                this.onEndGetFinalContractActionAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetFinalContractActionAvailability);
            }
            if ((this.onGetFinalContractActionAvailabilityCompletedDelegate == null)) {
                this.onGetFinalContractActionAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFinalContractActionAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetFinalContractActionAvailabilityDelegate, new object[] {
                        estimateRevisionId,
                        contractNumber}, this.onEndGetFinalContractActionAvailabilityDelegate, this.onGetFinalContractActionAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCustomerSupportActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerSupportActionAvailability(estimateRevisionId, contractNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCustomerSupportActionAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerSupportActionAvailability(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerSupportActionAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            string contractNumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCustomerSupportActionAvailability(estimateRevisionId, contractNumber, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerSupportActionAvailability(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCustomerSupportActionAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerSupportActionAvailabilityCompleted(object state) {
            if ((this.GetCustomerSupportActionAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerSupportActionAvailabilityCompleted(this, new GetCustomerSupportActionAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerSupportActionAvailabilityAsync(int estimateRevisionId, string contractNumber) {
            this.GetCustomerSupportActionAvailabilityAsync(estimateRevisionId, contractNumber, null);
        }
        
        public void GetCustomerSupportActionAvailabilityAsync(int estimateRevisionId, string contractNumber, object userState) {
            if ((this.onBeginGetCustomerSupportActionAvailabilityDelegate == null)) {
                this.onBeginGetCustomerSupportActionAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerSupportActionAvailability);
            }
            if ((this.onEndGetCustomerSupportActionAvailabilityDelegate == null)) {
                this.onEndGetCustomerSupportActionAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetCustomerSupportActionAvailability);
            }
            if ((this.onGetCustomerSupportActionAvailabilityCompletedDelegate == null)) {
                this.onGetCustomerSupportActionAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerSupportActionAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerSupportActionAvailabilityDelegate, new object[] {
                        estimateRevisionId,
                        contractNumber}, this.onEndGetCustomerSupportActionAvailabilityDelegate, this.onGetCustomerSupportActionAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetSalesEstimatorActionAvailability(int estimateRevisionId, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalesEstimatorActionAvailability(estimateRevisionId, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetSalesEstimatorActionAvailability(System.IAsyncResult result) {
            return base.Channel.EndGetSalesEstimatorActionAvailability(result);
        }
        
        private System.IAsyncResult OnBeginGetSalesEstimatorActionAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int userid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetSalesEstimatorActionAvailability(estimateRevisionId, userid, callback, asyncState);
        }
        
        private object[] OnEndGetSalesEstimatorActionAvailability(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetSalesEstimatorActionAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalesEstimatorActionAvailabilityCompleted(object state) {
            if ((this.GetSalesEstimatorActionAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalesEstimatorActionAvailabilityCompleted(this, new GetSalesEstimatorActionAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalesEstimatorActionAvailabilityAsync(int estimateRevisionId, int userid) {
            this.GetSalesEstimatorActionAvailabilityAsync(estimateRevisionId, userid, null);
        }
        
        public void GetSalesEstimatorActionAvailabilityAsync(int estimateRevisionId, int userid, object userState) {
            if ((this.onBeginGetSalesEstimatorActionAvailabilityDelegate == null)) {
                this.onBeginGetSalesEstimatorActionAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginGetSalesEstimatorActionAvailability);
            }
            if ((this.onEndGetSalesEstimatorActionAvailabilityDelegate == null)) {
                this.onEndGetSalesEstimatorActionAvailabilityDelegate = new EndOperationDelegate(this.OnEndGetSalesEstimatorActionAvailability);
            }
            if ((this.onGetSalesEstimatorActionAvailabilityCompletedDelegate == null)) {
                this.onGetSalesEstimatorActionAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalesEstimatorActionAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalesEstimatorActionAvailabilityDelegate, new object[] {
                        estimateRevisionId,
                        userid}, this.onEndGetSalesEstimatorActionAvailabilityDelegate, this.onGetSalesEstimatorActionAvailabilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetContractDraftCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContractDraftCreationVisibility(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetContractDraftCreationVisibility(System.IAsyncResult result) {
            return base.Channel.EndGetContractDraftCreationVisibility(result);
        }
        
        private System.IAsyncResult OnBeginGetContractDraftCreationVisibility(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetContractDraftCreationVisibility(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetContractDraftCreationVisibility(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetContractDraftCreationVisibility(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContractDraftCreationVisibilityCompleted(object state) {
            if ((this.GetContractDraftCreationVisibilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContractDraftCreationVisibilityCompleted(this, new GetContractDraftCreationVisibilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContractDraftCreationVisibilityAsync(int estimateRevisionId) {
            this.GetContractDraftCreationVisibilityAsync(estimateRevisionId, null);
        }
        
        public void GetContractDraftCreationVisibilityAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetContractDraftCreationVisibilityDelegate == null)) {
                this.onBeginGetContractDraftCreationVisibilityDelegate = new BeginOperationDelegate(this.OnBeginGetContractDraftCreationVisibility);
            }
            if ((this.onEndGetContractDraftCreationVisibilityDelegate == null)) {
                this.onEndGetContractDraftCreationVisibilityDelegate = new EndOperationDelegate(this.OnEndGetContractDraftCreationVisibility);
            }
            if ((this.onGetContractDraftCreationVisibilityCompletedDelegate == null)) {
                this.onGetContractDraftCreationVisibilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContractDraftCreationVisibilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetContractDraftCreationVisibilityDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetContractDraftCreationVisibilityDelegate, this.onGetContractDraftCreationVisibilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetFinalContractCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFinalContractCreationVisibility(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetFinalContractCreationVisibility(System.IAsyncResult result) {
            return base.Channel.EndGetFinalContractCreationVisibility(result);
        }
        
        private System.IAsyncResult OnBeginGetFinalContractCreationVisibility(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetFinalContractCreationVisibility(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetFinalContractCreationVisibility(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetFinalContractCreationVisibility(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFinalContractCreationVisibilityCompleted(object state) {
            if ((this.GetFinalContractCreationVisibilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFinalContractCreationVisibilityCompleted(this, new GetFinalContractCreationVisibilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFinalContractCreationVisibilityAsync(int estimateRevisionId) {
            this.GetFinalContractCreationVisibilityAsync(estimateRevisionId, null);
        }
        
        public void GetFinalContractCreationVisibilityAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetFinalContractCreationVisibilityDelegate == null)) {
                this.onBeginGetFinalContractCreationVisibilityDelegate = new BeginOperationDelegate(this.OnBeginGetFinalContractCreationVisibility);
            }
            if ((this.onEndGetFinalContractCreationVisibilityDelegate == null)) {
                this.onEndGetFinalContractCreationVisibilityDelegate = new EndOperationDelegate(this.OnEndGetFinalContractCreationVisibility);
            }
            if ((this.onGetFinalContractCreationVisibilityCompletedDelegate == null)) {
                this.onGetFinalContractCreationVisibilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFinalContractCreationVisibilityCompleted);
            }
            base.InvokeAsync(this.onBeginGetFinalContractCreationVisibilityDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetFinalContractCreationVisibilityDelegate, this.onGetFinalContractCreationVisibilityCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateRevisionStatus(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateRevisionStatus(status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateRevisionStatus(System.IAsyncResult result) {
            base.Channel.EndGetEstimateRevisionStatus(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateRevisionStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateRevisionStatus(status, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateRevisionStatus(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateRevisionStatus(result);
            return null;
        }
        
        private void OnGetEstimateRevisionStatusCompleted(object state) {
            if ((this.GetEstimateRevisionStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateRevisionStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateRevisionStatusAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status) {
            this.GetEstimateRevisionStatusAsync(status, null);
        }
        
        public void GetEstimateRevisionStatusAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status, object userState) {
            if ((this.onBeginGetEstimateRevisionStatusDelegate == null)) {
                this.onBeginGetEstimateRevisionStatusDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateRevisionStatus);
            }
            if ((this.onEndGetEstimateRevisionStatusDelegate == null)) {
                this.onEndGetEstimateRevisionStatusDelegate = new EndOperationDelegate(this.OnEndGetEstimateRevisionStatus);
            }
            if ((this.onGetEstimateRevisionStatusCompletedDelegate == null)) {
                this.onGetEstimateRevisionStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateRevisionStatusCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateRevisionStatusDelegate, new object[] {
                        status}, this.onEndGetEstimateRevisionStatusDelegate, this.onGetEstimateRevisionStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateSplitStudioMRevisions(int estimateRevisionId, string revisionTypeIds, string assignedToUserIds, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateSplitStudioMRevisions(estimateRevisionId, revisionTypeIds, assignedToUserIds, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateSplitStudioMRevisions(System.IAsyncResult result) {
            base.Channel.EndCreateSplitStudioMRevisions(result);
        }
        
        private System.IAsyncResult OnBeginCreateSplitStudioMRevisions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            string revisionTypeIds = ((string)(inValues[1]));
            string assignedToUserIds = ((string)(inValues[2]));
            int createdbyId = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateSplitStudioMRevisions(estimateRevisionId, revisionTypeIds, assignedToUserIds, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndCreateSplitStudioMRevisions(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateSplitStudioMRevisions(result);
            return null;
        }
        
        private void OnCreateSplitStudioMRevisionsCompleted(object state) {
            if ((this.CreateSplitStudioMRevisionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateSplitStudioMRevisionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateSplitStudioMRevisionsAsync(int estimateRevisionId, string revisionTypeIds, string assignedToUserIds, int createdbyId) {
            this.CreateSplitStudioMRevisionsAsync(estimateRevisionId, revisionTypeIds, assignedToUserIds, createdbyId, null);
        }
        
        public void CreateSplitStudioMRevisionsAsync(int estimateRevisionId, string revisionTypeIds, string assignedToUserIds, int createdbyId, object userState) {
            if ((this.onBeginCreateSplitStudioMRevisionsDelegate == null)) {
                this.onBeginCreateSplitStudioMRevisionsDelegate = new BeginOperationDelegate(this.OnBeginCreateSplitStudioMRevisions);
            }
            if ((this.onEndCreateSplitStudioMRevisionsDelegate == null)) {
                this.onEndCreateSplitStudioMRevisionsDelegate = new EndOperationDelegate(this.OnEndCreateSplitStudioMRevisions);
            }
            if ((this.onCreateSplitStudioMRevisionsCompletedDelegate == null)) {
                this.onCreateSplitStudioMRevisionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateSplitStudioMRevisionsCompleted);
            }
            base.InvokeAsync(this.onBeginCreateSplitStudioMRevisionsDelegate, new object[] {
                        estimateRevisionId,
                        revisionTypeIds,
                        assignedToUserIds,
                        createdbyId}, this.onEndCreateSplitStudioMRevisionsDelegate, this.onCreateSplitStudioMRevisionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginMergeStudioMRevisions(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMergeStudioMRevisions(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndMergeStudioMRevisions(System.IAsyncResult result) {
            base.Channel.EndMergeStudioMRevisions(result);
        }
        
        private System.IAsyncResult OnBeginMergeStudioMRevisions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int createdbyId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginMergeStudioMRevisions(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndMergeStudioMRevisions(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndMergeStudioMRevisions(result);
            return null;
        }
        
        private void OnMergeStudioMRevisionsCompleted(object state) {
            if ((this.MergeStudioMRevisionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MergeStudioMRevisionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MergeStudioMRevisionsAsync(int estimateRevisionId, int createdbyId) {
            this.MergeStudioMRevisionsAsync(estimateRevisionId, createdbyId, null);
        }
        
        public void MergeStudioMRevisionsAsync(int estimateRevisionId, int createdbyId, object userState) {
            if ((this.onBeginMergeStudioMRevisionsDelegate == null)) {
                this.onBeginMergeStudioMRevisionsDelegate = new BeginOperationDelegate(this.OnBeginMergeStudioMRevisions);
            }
            if ((this.onEndMergeStudioMRevisionsDelegate == null)) {
                this.onEndMergeStudioMRevisionsDelegate = new EndOperationDelegate(this.OnEndMergeStudioMRevisions);
            }
            if ((this.onMergeStudioMRevisionsCompletedDelegate == null)) {
                this.onMergeStudioMRevisionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMergeStudioMRevisionsCompleted);
            }
            base.InvokeAsync(this.onBeginMergeStudioMRevisionsDelegate, new object[] {
                        estimateRevisionId,
                        createdbyId}, this.onEndMergeStudioMRevisionsDelegate, this.onMergeStudioMRevisionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateContractDraft(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateContractDraft(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateContractDraft(System.IAsyncResult result) {
            base.Channel.EndCreateContractDraft(result);
        }
        
        private System.IAsyncResult OnBeginCreateContractDraft(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int createdbyId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateContractDraft(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndCreateContractDraft(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateContractDraft(result);
            return null;
        }
        
        private void OnCreateContractDraftCompleted(object state) {
            if ((this.CreateContractDraftCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateContractDraftCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateContractDraftAsync(int estimateRevisionId, int createdbyId) {
            this.CreateContractDraftAsync(estimateRevisionId, createdbyId, null);
        }
        
        public void CreateContractDraftAsync(int estimateRevisionId, int createdbyId, object userState) {
            if ((this.onBeginCreateContractDraftDelegate == null)) {
                this.onBeginCreateContractDraftDelegate = new BeginOperationDelegate(this.OnBeginCreateContractDraft);
            }
            if ((this.onEndCreateContractDraftDelegate == null)) {
                this.onEndCreateContractDraftDelegate = new EndOperationDelegate(this.OnEndCreateContractDraft);
            }
            if ((this.onCreateContractDraftCompletedDelegate == null)) {
                this.onCreateContractDraftCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateContractDraftCompleted);
            }
            base.InvokeAsync(this.onBeginCreateContractDraftDelegate, new object[] {
                        estimateRevisionId,
                        createdbyId}, this.onEndCreateContractDraftDelegate, this.onCreateContractDraftCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateFinalContract(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateFinalContract(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateFinalContract(System.IAsyncResult result) {
            base.Channel.EndCreateFinalContract(result);
        }
        
        private System.IAsyncResult OnBeginCreateFinalContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int createdbyId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateFinalContract(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndCreateFinalContract(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateFinalContract(result);
            return null;
        }
        
        private void OnCreateFinalContractCompleted(object state) {
            if ((this.CreateFinalContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateFinalContractCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateFinalContractAsync(int estimateRevisionId, int createdbyId) {
            this.CreateFinalContractAsync(estimateRevisionId, createdbyId, null);
        }
        
        public void CreateFinalContractAsync(int estimateRevisionId, int createdbyId, object userState) {
            if ((this.onBeginCreateFinalContractDelegate == null)) {
                this.onBeginCreateFinalContractDelegate = new BeginOperationDelegate(this.OnBeginCreateFinalContract);
            }
            if ((this.onEndCreateFinalContractDelegate == null)) {
                this.onEndCreateFinalContractDelegate = new EndOperationDelegate(this.OnEndCreateFinalContract);
            }
            if ((this.onCreateFinalContractCompletedDelegate == null)) {
                this.onCreateFinalContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateFinalContractCompleted);
            }
            base.InvokeAsync(this.onBeginCreateFinalContractDelegate, new object[] {
                        estimateRevisionId,
                        createdbyId}, this.onEndCreateFinalContractDelegate, this.onCreateFinalContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateCscVariation(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCscVariation(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateCscVariation(System.IAsyncResult result) {
            base.Channel.EndCreateCscVariation(result);
        }
        
        private System.IAsyncResult OnBeginCreateCscVariation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int createdbyId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateCscVariation(estimateRevisionId, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndCreateCscVariation(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateCscVariation(result);
            return null;
        }
        
        private void OnCreateCscVariationCompleted(object state) {
            if ((this.CreateCscVariationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCscVariationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCscVariationAsync(int estimateRevisionId, int createdbyId) {
            this.CreateCscVariationAsync(estimateRevisionId, createdbyId, null);
        }
        
        public void CreateCscVariationAsync(int estimateRevisionId, int createdbyId, object userState) {
            if ((this.onBeginCreateCscVariationDelegate == null)) {
                this.onBeginCreateCscVariationDelegate = new BeginOperationDelegate(this.OnBeginCreateCscVariation);
            }
            if ((this.onEndCreateCscVariationDelegate == null)) {
                this.onEndCreateCscVariationDelegate = new EndOperationDelegate(this.OnEndCreateCscVariation);
            }
            if ((this.onCreateCscVariationCompletedDelegate == null)) {
                this.onCreateCscVariationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCscVariationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCscVariationDelegate, new object[] {
                        estimateRevisionId,
                        createdbyId}, this.onEndCreateCscVariationDelegate, this.onCreateCscVariationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateStudioMRevision(int estimateRevisionId, int ownerId, System.DateTime appointmentDateTime, int revisionTypeId, int createdbyId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateStudioMRevision(estimateRevisionId, ownerId, appointmentDateTime, revisionTypeId, createdbyId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateStudioMRevision(System.IAsyncResult result) {
            return base.Channel.EndCreateStudioMRevision(result);
        }
        
        private System.IAsyncResult OnBeginCreateStudioMRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int ownerId = ((int)(inValues[1]));
            System.DateTime appointmentDateTime = ((System.DateTime)(inValues[2]));
            int revisionTypeId = ((int)(inValues[3]));
            int createdbyId = ((int)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateStudioMRevision(estimateRevisionId, ownerId, appointmentDateTime, revisionTypeId, createdbyId, callback, asyncState);
        }
        
        private object[] OnEndCreateStudioMRevision(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateStudioMRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateStudioMRevisionCompleted(object state) {
            if ((this.CreateStudioMRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateStudioMRevisionCompleted(this, new CreateStudioMRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateStudioMRevisionAsync(int estimateRevisionId, int ownerId, System.DateTime appointmentDateTime, int revisionTypeId, int createdbyId) {
            this.CreateStudioMRevisionAsync(estimateRevisionId, ownerId, appointmentDateTime, revisionTypeId, createdbyId, null);
        }
        
        public void CreateStudioMRevisionAsync(int estimateRevisionId, int ownerId, System.DateTime appointmentDateTime, int revisionTypeId, int createdbyId, object userState) {
            if ((this.onBeginCreateStudioMRevisionDelegate == null)) {
                this.onBeginCreateStudioMRevisionDelegate = new BeginOperationDelegate(this.OnBeginCreateStudioMRevision);
            }
            if ((this.onEndCreateStudioMRevisionDelegate == null)) {
                this.onEndCreateStudioMRevisionDelegate = new EndOperationDelegate(this.OnEndCreateStudioMRevision);
            }
            if ((this.onCreateStudioMRevisionCompletedDelegate == null)) {
                this.onCreateStudioMRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateStudioMRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginCreateStudioMRevisionDelegate, new object[] {
                        estimateRevisionId,
                        ownerId,
                        appointmentDateTime,
                        revisionTypeId,
                        createdbyId}, this.onEndCreateStudioMRevisionDelegate, this.onCreateStudioMRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginValidateSetEstimateStatus(int estimateRevisionId, int nextRevisionTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateSetEstimateStatus(estimateRevisionId, nextRevisionTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndValidateSetEstimateStatus(System.IAsyncResult result) {
            return base.Channel.EndValidateSetEstimateStatus(result);
        }
        
        private System.IAsyncResult OnBeginValidateSetEstimateStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int nextRevisionTypeId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginValidateSetEstimateStatus(estimateRevisionId, nextRevisionTypeId, callback, asyncState);
        }
        
        private object[] OnEndValidateSetEstimateStatus(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndValidateSetEstimateStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateSetEstimateStatusCompleted(object state) {
            if ((this.ValidateSetEstimateStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateSetEstimateStatusCompleted(this, new ValidateSetEstimateStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateSetEstimateStatusAsync(int estimateRevisionId, int nextRevisionTypeId) {
            this.ValidateSetEstimateStatusAsync(estimateRevisionId, nextRevisionTypeId, null);
        }
        
        public void ValidateSetEstimateStatusAsync(int estimateRevisionId, int nextRevisionTypeId, object userState) {
            if ((this.onBeginValidateSetEstimateStatusDelegate == null)) {
                this.onBeginValidateSetEstimateStatusDelegate = new BeginOperationDelegate(this.OnBeginValidateSetEstimateStatus);
            }
            if ((this.onEndValidateSetEstimateStatusDelegate == null)) {
                this.onEndValidateSetEstimateStatusDelegate = new EndOperationDelegate(this.OnEndValidateSetEstimateStatus);
            }
            if ((this.onValidateSetEstimateStatusCompletedDelegate == null)) {
                this.onValidateSetEstimateStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateSetEstimateStatusCompleted);
            }
            base.InvokeAsync(this.onBeginValidateSetEstimateStatusDelegate, new object[] {
                        estimateRevisionId,
                        nextRevisionTypeId}, this.onEndValidateSetEstimateStatusDelegate, this.onValidateSetEstimateStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCustomerDocumentType(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDocumentType(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCustomerDocumentType(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDocumentType(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDocumentType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCustomerDocumentType(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDocumentType(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCustomerDocumentType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDocumentTypeCompleted(object state) {
            if ((this.GetCustomerDocumentTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDocumentTypeCompleted(this, new GetCustomerDocumentTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDocumentTypeAsync(int estimateRevisionId) {
            this.GetCustomerDocumentTypeAsync(estimateRevisionId, null);
        }
        
        public void GetCustomerDocumentTypeAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetCustomerDocumentTypeDelegate == null)) {
                this.onBeginGetCustomerDocumentTypeDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDocumentType);
            }
            if ((this.onEndGetCustomerDocumentTypeDelegate == null)) {
                this.onEndGetCustomerDocumentTypeDelegate = new EndOperationDelegate(this.OnEndGetCustomerDocumentType);
            }
            if ((this.onGetCustomerDocumentTypeCompletedDelegate == null)) {
                this.onGetCustomerDocumentTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDocumentTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDocumentTypeDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetCustomerDocumentTypeDelegate, this.onGetCustomerDocumentTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateCustomerDocumentDetails(Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateCustomerDocumentDetails(document, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateCustomerDocumentDetails(System.IAsyncResult result) {
            return base.Channel.EndUpdateCustomerDocumentDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateCustomerDocumentDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateCustomerDocumentDetails(document, callback, asyncState);
        }
        
        private object[] OnEndUpdateCustomerDocumentDetails(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateCustomerDocumentDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCustomerDocumentDetailsCompleted(object state) {
            if ((this.UpdateCustomerDocumentDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCustomerDocumentDetailsCompleted(this, new UpdateCustomerDocumentDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCustomerDocumentDetailsAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document) {
            this.UpdateCustomerDocumentDetailsAsync(document, null);
        }
        
        public void UpdateCustomerDocumentDetailsAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document, object userState) {
            if ((this.onBeginUpdateCustomerDocumentDetailsDelegate == null)) {
                this.onBeginUpdateCustomerDocumentDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateCustomerDocumentDetails);
            }
            if ((this.onEndUpdateCustomerDocumentDetailsDelegate == null)) {
                this.onEndUpdateCustomerDocumentDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateCustomerDocumentDetails);
            }
            if ((this.onUpdateCustomerDocumentDetailsCompletedDelegate == null)) {
                this.onUpdateCustomerDocumentDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerDocumentDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCustomerDocumentDetailsDelegate, new object[] {
                        document}, this.onEndUpdateCustomerDocumentDetailsDelegate, this.onUpdateCustomerDocumentDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCustomerDocumentDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCustomerDocumentDetails(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCustomerDocumentDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCustomerDocumentDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCustomerDocumentDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCustomerDocumentDetails(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetCustomerDocumentDetails(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCustomerDocumentDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCustomerDocumentDetailsCompleted(object state) {
            if ((this.GetCustomerDocumentDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCustomerDocumentDetailsCompleted(this, new GetCustomerDocumentDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCustomerDocumentDetailsAsync(int estimateRevisionId) {
            this.GetCustomerDocumentDetailsAsync(estimateRevisionId, null);
        }
        
        public void GetCustomerDocumentDetailsAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetCustomerDocumentDetailsDelegate == null)) {
                this.onBeginGetCustomerDocumentDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCustomerDocumentDetails);
            }
            if ((this.onEndGetCustomerDocumentDetailsDelegate == null)) {
                this.onEndGetCustomerDocumentDetailsDelegate = new EndOperationDelegate(this.OnEndGetCustomerDocumentDetails);
            }
            if ((this.onGetCustomerDocumentDetailsCompletedDelegate == null)) {
                this.onGetCustomerDocumentDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCustomerDocumentDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCustomerDocumentDetailsDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetCustomerDocumentDetailsDelegate, this.onGetCustomerDocumentDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetRelevantPAGFromOnePAG(string estimatedetailsid, string revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRelevantPAGFromOnePAG(estimatedetailsid, revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetRelevantPAGFromOnePAG(System.IAsyncResult result) {
            return base.Channel.EndGetRelevantPAGFromOnePAG(result);
        }
        
        private System.IAsyncResult OnBeginGetRelevantPAGFromOnePAG(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string estimatedetailsid = ((string)(inValues[0]));
            string revisionid = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetRelevantPAGFromOnePAG(estimatedetailsid, revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetRelevantPAGFromOnePAG(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetRelevantPAGFromOnePAG(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRelevantPAGFromOnePAGCompleted(object state) {
            if ((this.GetRelevantPAGFromOnePAGCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRelevantPAGFromOnePAGCompleted(this, new GetRelevantPAGFromOnePAGCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRelevantPAGFromOnePAGAsync(string estimatedetailsid, string revisionid) {
            this.GetRelevantPAGFromOnePAGAsync(estimatedetailsid, revisionid, null);
        }
        
        public void GetRelevantPAGFromOnePAGAsync(string estimatedetailsid, string revisionid, object userState) {
            if ((this.onBeginGetRelevantPAGFromOnePAGDelegate == null)) {
                this.onBeginGetRelevantPAGFromOnePAGDelegate = new BeginOperationDelegate(this.OnBeginGetRelevantPAGFromOnePAG);
            }
            if ((this.onEndGetRelevantPAGFromOnePAGDelegate == null)) {
                this.onEndGetRelevantPAGFromOnePAGDelegate = new EndOperationDelegate(this.OnEndGetRelevantPAGFromOnePAG);
            }
            if ((this.onGetRelevantPAGFromOnePAGCompletedDelegate == null)) {
                this.onGetRelevantPAGFromOnePAGCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRelevantPAGFromOnePAGCompleted);
            }
            base.InvokeAsync(this.onBeginGetRelevantPAGFromOnePAGDelegate, new object[] {
                        estimatedetailsid,
                        revisionid}, this.onEndGetRelevantPAGFromOnePAGDelegate, this.onGetRelevantPAGFromOnePAGCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateVariation(int estimateRevisionId, int revisionTypeId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateVariation(estimateRevisionId, revisionTypeId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateVariation(System.IAsyncResult result) {
            base.Channel.EndCreateVariation(result);
        }
        
        private System.IAsyncResult OnBeginCreateVariation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int revisionTypeId = ((int)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateVariation(estimateRevisionId, revisionTypeId, userId, callback, asyncState);
        }
        
        private object[] OnEndCreateVariation(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateVariation(result);
            return null;
        }
        
        private void OnCreateVariationCompleted(object state) {
            if ((this.CreateVariationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateVariationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateVariationAsync(int estimateRevisionId, int revisionTypeId, int userId) {
            this.CreateVariationAsync(estimateRevisionId, revisionTypeId, userId, null);
        }
        
        public void CreateVariationAsync(int estimateRevisionId, int revisionTypeId, int userId, object userState) {
            if ((this.onBeginCreateVariationDelegate == null)) {
                this.onBeginCreateVariationDelegate = new BeginOperationDelegate(this.OnBeginCreateVariation);
            }
            if ((this.onEndCreateVariationDelegate == null)) {
                this.onEndCreateVariationDelegate = new EndOperationDelegate(this.OnEndCreateVariation);
            }
            if ((this.onCreateVariationCompletedDelegate == null)) {
                this.onCreateVariationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateVariationCompleted);
            }
            base.InvokeAsync(this.onBeginCreateVariationDelegate, new object[] {
                        estimateRevisionId,
                        revisionTypeId,
                        userId}, this.onEndCreateVariationDelegate, this.onCreateVariationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginRejectVariation(int estimateRevisionId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRejectVariation(estimateRevisionId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndRejectVariation(System.IAsyncResult result) {
            base.Channel.EndRejectVariation(result);
        }
        
        private System.IAsyncResult OnBeginRejectVariation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginRejectVariation(estimateRevisionId, userId, callback, asyncState);
        }
        
        private object[] OnEndRejectVariation(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndRejectVariation(result);
            return null;
        }
        
        private void OnRejectVariationCompleted(object state) {
            if ((this.RejectVariationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RejectVariationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RejectVariationAsync(int estimateRevisionId, int userId) {
            this.RejectVariationAsync(estimateRevisionId, userId, null);
        }
        
        public void RejectVariationAsync(int estimateRevisionId, int userId, object userState) {
            if ((this.onBeginRejectVariationDelegate == null)) {
                this.onBeginRejectVariationDelegate = new BeginOperationDelegate(this.OnBeginRejectVariation);
            }
            if ((this.onEndRejectVariationDelegate == null)) {
                this.onEndRejectVariationDelegate = new EndOperationDelegate(this.OnEndRejectVariation);
            }
            if ((this.onRejectVariationCompletedDelegate == null)) {
                this.onRejectVariationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRejectVariationCompleted);
            }
            base.InvokeAsync(this.onBeginRejectVariationDelegate, new object[] {
                        estimateRevisionId,
                        userId}, this.onEndRejectVariationDelegate, this.onRejectVariationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSaveSelectedItemsFromOptionTreeToEstimate(
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgststring, 
                    string costbtpoverwriteflagstring, 
                    string costdbcexcgststring, 
                    string costdbcoverwriteflagstring, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginSaveSelectedItemsFromOptionTreeToEstimate(optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgststring, costbtpoverwriteflagstring, costdbcexcgststring, costdbcoverwriteflagstring, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
            return base.Channel.EndSaveSelectedItemsFromOptionTreeToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginSaveSelectedItemsFromOptionTreeToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string optionidstring = ((string)(inValues[0]));
            string standardinclusionidstring = ((string)(inValues[1]));
            string revisionid = ((string)(inValues[2]));
            string studiomanswer = ((string)(inValues[3]));
            string userid = ((string)(inValues[4]));
            string action = ((string)(inValues[5]));
            string derivedcost = ((string)(inValues[6]));
            string costbtpexcgststring = ((string)(inValues[7]));
            string costbtpoverwriteflagstring = ((string)(inValues[8]));
            string costdbcexcgststring = ((string)(inValues[9]));
            string costdbcoverwriteflagstring = ((string)(inValues[10]));
            string quantitystring = ((string)(inValues[11]));
            string pricestring = ((string)(inValues[12]));
            string isacceptedstring = ((string)(inValues[13]));
            string areaidstring = ((string)(inValues[14]));
            string groupidstring = ((string)(inValues[15]));
            string pricedisplaycodestring = ((string)(inValues[16]));
            string issiteworkstring = ((string)(inValues[17]));
            string productdescriptionstring = ((string)(inValues[18]));
            string additionalnotestring = ((string)(inValues[19]));
            string extradescriptionstring = ((string)(inValues[20]));
            string internaldescriptionstring = ((string)(inValues[21]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSaveSelectedItemsFromOptionTreeToEstimate(optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgststring, costbtpoverwriteflagstring, costdbcexcgststring, costdbcoverwriteflagstring, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, callback, asyncState);
        }
        
        private object[] OnEndSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSaveSelectedItemsFromOptionTreeToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveSelectedItemsFromOptionTreeToEstimateCompleted(object state) {
            if ((this.SaveSelectedItemsFromOptionTreeToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSelectedItemsFromOptionTreeToEstimateCompleted(this, new SaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSelectedItemsFromOptionTreeToEstimateAsync(
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgststring, 
                    string costbtpoverwriteflagstring, 
                    string costdbcexcgststring, 
                    string costdbcoverwriteflagstring, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring) {
            this.SaveSelectedItemsFromOptionTreeToEstimateAsync(optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgststring, costbtpoverwriteflagstring, costdbcexcgststring, costdbcoverwriteflagstring, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, null);
        }
        
        public void SaveSelectedItemsFromOptionTreeToEstimateAsync(
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgststring, 
                    string costbtpoverwriteflagstring, 
                    string costdbcexcgststring, 
                    string costdbcoverwriteflagstring, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    object userState) {
            if ((this.onBeginSaveSelectedItemsFromOptionTreeToEstimateDelegate == null)) {
                this.onBeginSaveSelectedItemsFromOptionTreeToEstimateDelegate = new BeginOperationDelegate(this.OnBeginSaveSelectedItemsFromOptionTreeToEstimate);
            }
            if ((this.onEndSaveSelectedItemsFromOptionTreeToEstimateDelegate == null)) {
                this.onEndSaveSelectedItemsFromOptionTreeToEstimateDelegate = new EndOperationDelegate(this.OnEndSaveSelectedItemsFromOptionTreeToEstimate);
            }
            if ((this.onSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate == null)) {
                this.onSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSelectedItemsFromOptionTreeToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSelectedItemsFromOptionTreeToEstimateDelegate, new object[] {
                        optionidstring,
                        standardinclusionidstring,
                        revisionid,
                        studiomanswer,
                        userid,
                        action,
                        derivedcost,
                        costbtpexcgststring,
                        costbtpoverwriteflagstring,
                        costdbcexcgststring,
                        costdbcoverwriteflagstring,
                        quantitystring,
                        pricestring,
                        isacceptedstring,
                        areaidstring,
                        groupidstring,
                        pricedisplaycodestring,
                        issiteworkstring,
                        productdescriptionstring,
                        additionalnotestring,
                        extradescriptionstring,
                        internaldescriptionstring}, this.onEndSaveSelectedItemsFromOptionTreeToEstimateDelegate, this.onSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(
                    string sourceEstimateRevisionDetailsId, 
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgst, 
                    string costdbcexcgst, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    string copyquantity, 
                    string copyadditionalnotes, 
                    string copyextradescription, 
                    string copyinternalnotes, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(sourceEstimateRevisionDetailsId, optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgst, costdbcexcgst, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, copyquantity, copyadditionalnotes, copyextradescription, copyinternalnotes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndReplaceSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
            return base.Channel.EndReplaceSaveSelectedItemsFromOptionTreeToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sourceEstimateRevisionDetailsId = ((string)(inValues[0]));
            string optionidstring = ((string)(inValues[1]));
            string standardinclusionidstring = ((string)(inValues[2]));
            string revisionid = ((string)(inValues[3]));
            string studiomanswer = ((string)(inValues[4]));
            string userid = ((string)(inValues[5]));
            string action = ((string)(inValues[6]));
            string derivedcost = ((string)(inValues[7]));
            string costbtpexcgst = ((string)(inValues[8]));
            string costdbcexcgst = ((string)(inValues[9]));
            string quantitystring = ((string)(inValues[10]));
            string pricestring = ((string)(inValues[11]));
            string isacceptedstring = ((string)(inValues[12]));
            string areaidstring = ((string)(inValues[13]));
            string groupidstring = ((string)(inValues[14]));
            string pricedisplaycodestring = ((string)(inValues[15]));
            string issiteworkstring = ((string)(inValues[16]));
            string productdescriptionstring = ((string)(inValues[17]));
            string additionalnotestring = ((string)(inValues[18]));
            string extradescriptionstring = ((string)(inValues[19]));
            string internaldescriptionstring = ((string)(inValues[20]));
            string copyquantity = ((string)(inValues[21]));
            string copyadditionalnotes = ((string)(inValues[22]));
            string copyextradescription = ((string)(inValues[23]));
            string copyinternalnotes = ((string)(inValues[24]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(sourceEstimateRevisionDetailsId, optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgst, costdbcexcgst, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, copyquantity, copyadditionalnotes, copyextradescription, copyinternalnotes, callback, asyncState);
        }
        
        private object[] OnEndReplaceSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndReplaceSaveSelectedItemsFromOptionTreeToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReplaceSaveSelectedItemsFromOptionTreeToEstimateCompleted(object state) {
            if ((this.ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompleted(this, new ReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplaceSaveSelectedItemsFromOptionTreeToEstimateAsync(
                    string sourceEstimateRevisionDetailsId, 
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgst, 
                    string costdbcexcgst, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    string copyquantity, 
                    string copyadditionalnotes, 
                    string copyextradescription, 
                    string copyinternalnotes) {
            this.ReplaceSaveSelectedItemsFromOptionTreeToEstimateAsync(sourceEstimateRevisionDetailsId, optionidstring, standardinclusionidstring, revisionid, studiomanswer, userid, action, derivedcost, costbtpexcgst, costdbcexcgst, quantitystring, pricestring, isacceptedstring, areaidstring, groupidstring, pricedisplaycodestring, issiteworkstring, productdescriptionstring, additionalnotestring, extradescriptionstring, internaldescriptionstring, copyquantity, copyadditionalnotes, copyextradescription, copyinternalnotes, null);
        }
        
        public void ReplaceSaveSelectedItemsFromOptionTreeToEstimateAsync(
                    string sourceEstimateRevisionDetailsId, 
                    string optionidstring, 
                    string standardinclusionidstring, 
                    string revisionid, 
                    string studiomanswer, 
                    string userid, 
                    string action, 
                    string derivedcost, 
                    string costbtpexcgst, 
                    string costdbcexcgst, 
                    string quantitystring, 
                    string pricestring, 
                    string isacceptedstring, 
                    string areaidstring, 
                    string groupidstring, 
                    string pricedisplaycodestring, 
                    string issiteworkstring, 
                    string productdescriptionstring, 
                    string additionalnotestring, 
                    string extradescriptionstring, 
                    string internaldescriptionstring, 
                    string copyquantity, 
                    string copyadditionalnotes, 
                    string copyextradescription, 
                    string copyinternalnotes, 
                    object userState) {
            if ((this.onBeginReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate == null)) {
                this.onBeginReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate = new BeginOperationDelegate(this.OnBeginReplaceSaveSelectedItemsFromOptionTreeToEstimate);
            }
            if ((this.onEndReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate == null)) {
                this.onEndReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate = new EndOperationDelegate(this.OnEndReplaceSaveSelectedItemsFromOptionTreeToEstimate);
            }
            if ((this.onReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate == null)) {
                this.onReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplaceSaveSelectedItemsFromOptionTreeToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate, new object[] {
                        sourceEstimateRevisionDetailsId,
                        optionidstring,
                        standardinclusionidstring,
                        revisionid,
                        studiomanswer,
                        userid,
                        action,
                        derivedcost,
                        costbtpexcgst,
                        costdbcexcgst,
                        quantitystring,
                        pricestring,
                        isacceptedstring,
                        areaidstring,
                        groupidstring,
                        pricedisplaycodestring,
                        issiteworkstring,
                        productdescriptionstring,
                        additionalnotestring,
                        extradescriptionstring,
                        internaldescriptionstring,
                        copyquantity,
                        copyadditionalnotes,
                        copyextradescription,
                        copyinternalnotes}, this.onEndReplaceSaveSelectedItemsFromOptionTreeToEstimateDelegate, this.onReplaceSaveSelectedItemsFromOptionTreeToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckRevisionTypeAllowToAddNSR(int revisontypeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckRevisionTypeAllowToAddNSR(revisontypeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckRevisionTypeAllowToAddNSR(System.IAsyncResult result) {
            return base.Channel.EndCheckRevisionTypeAllowToAddNSR(result);
        }
        
        private System.IAsyncResult OnBeginCheckRevisionTypeAllowToAddNSR(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisontypeid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckRevisionTypeAllowToAddNSR(revisontypeid, callback, asyncState);
        }
        
        private object[] OnEndCheckRevisionTypeAllowToAddNSR(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckRevisionTypeAllowToAddNSR(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckRevisionTypeAllowToAddNSRCompleted(object state) {
            if ((this.CheckRevisionTypeAllowToAddNSRCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckRevisionTypeAllowToAddNSRCompleted(this, new CheckRevisionTypeAllowToAddNSRCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckRevisionTypeAllowToAddNSRAsync(int revisontypeid) {
            this.CheckRevisionTypeAllowToAddNSRAsync(revisontypeid, null);
        }
        
        public void CheckRevisionTypeAllowToAddNSRAsync(int revisontypeid, object userState) {
            if ((this.onBeginCheckRevisionTypeAllowToAddNSRDelegate == null)) {
                this.onBeginCheckRevisionTypeAllowToAddNSRDelegate = new BeginOperationDelegate(this.OnBeginCheckRevisionTypeAllowToAddNSR);
            }
            if ((this.onEndCheckRevisionTypeAllowToAddNSRDelegate == null)) {
                this.onEndCheckRevisionTypeAllowToAddNSRDelegate = new EndOperationDelegate(this.OnEndCheckRevisionTypeAllowToAddNSR);
            }
            if ((this.onCheckRevisionTypeAllowToAddNSRCompletedDelegate == null)) {
                this.onCheckRevisionTypeAllowToAddNSRCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckRevisionTypeAllowToAddNSRCompleted);
            }
            base.InvokeAsync(this.onBeginCheckRevisionTypeAllowToAddNSRDelegate, new object[] {
                        revisontypeid}, this.onEndCheckRevisionTypeAllowToAddNSRDelegate, this.onCheckRevisionTypeAllowToAddNSRCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginValidateAcceptFlagForRevision(int estimaterevisionid, int userroleid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateAcceptFlagForRevision(estimaterevisionid, userroleid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndValidateAcceptFlagForRevision(System.IAsyncResult result) {
            return base.Channel.EndValidateAcceptFlagForRevision(result);
        }
        
        private System.IAsyncResult OnBeginValidateAcceptFlagForRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            int userroleid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginValidateAcceptFlagForRevision(estimaterevisionid, userroleid, callback, asyncState);
        }
        
        private object[] OnEndValidateAcceptFlagForRevision(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndValidateAcceptFlagForRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateAcceptFlagForRevisionCompleted(object state) {
            if ((this.ValidateAcceptFlagForRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateAcceptFlagForRevisionCompleted(this, new ValidateAcceptFlagForRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateAcceptFlagForRevisionAsync(int estimaterevisionid, int userroleid) {
            this.ValidateAcceptFlagForRevisionAsync(estimaterevisionid, userroleid, null);
        }
        
        public void ValidateAcceptFlagForRevisionAsync(int estimaterevisionid, int userroleid, object userState) {
            if ((this.onBeginValidateAcceptFlagForRevisionDelegate == null)) {
                this.onBeginValidateAcceptFlagForRevisionDelegate = new BeginOperationDelegate(this.OnBeginValidateAcceptFlagForRevision);
            }
            if ((this.onEndValidateAcceptFlagForRevisionDelegate == null)) {
                this.onEndValidateAcceptFlagForRevisionDelegate = new EndOperationDelegate(this.OnEndValidateAcceptFlagForRevision);
            }
            if ((this.onValidateAcceptFlagForRevisionCompletedDelegate == null)) {
                this.onValidateAcceptFlagForRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateAcceptFlagForRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginValidateAcceptFlagForRevisionDelegate, new object[] {
                        estimaterevisionid,
                        userroleid}, this.onEndValidateAcceptFlagForRevisionDelegate, this.onValidateAcceptFlagForRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginValidateStudioMRevisions(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateStudioMRevisions(estimaterevisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndValidateStudioMRevisions(System.IAsyncResult result) {
            return base.Channel.EndValidateStudioMRevisions(result);
        }
        
        private System.IAsyncResult OnBeginValidateStudioMRevisions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginValidateStudioMRevisions(estimaterevisionid, callback, asyncState);
        }
        
        private object[] OnEndValidateStudioMRevisions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndValidateStudioMRevisions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateStudioMRevisionsCompleted(object state) {
            if ((this.ValidateStudioMRevisionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateStudioMRevisionsCompleted(this, new ValidateStudioMRevisionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateStudioMRevisionsAsync(int estimaterevisionid) {
            this.ValidateStudioMRevisionsAsync(estimaterevisionid, null);
        }
        
        public void ValidateStudioMRevisionsAsync(int estimaterevisionid, object userState) {
            if ((this.onBeginValidateStudioMRevisionsDelegate == null)) {
                this.onBeginValidateStudioMRevisionsDelegate = new BeginOperationDelegate(this.OnBeginValidateStudioMRevisions);
            }
            if ((this.onEndValidateStudioMRevisionsDelegate == null)) {
                this.onEndValidateStudioMRevisionsDelegate = new EndOperationDelegate(this.OnEndValidateStudioMRevisions);
            }
            if ((this.onValidateStudioMRevisionsCompletedDelegate == null)) {
                this.onValidateStudioMRevisionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateStudioMRevisionsCompleted);
            }
            base.InvokeAsync(this.onBeginValidateStudioMRevisionsDelegate, new object[] {
                        estimaterevisionid}, this.onEndValidateStudioMRevisionsDelegate, this.onValidateStudioMRevisionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginValidateAppointmentDate(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateAppointmentDate(estimaterevisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndValidateAppointmentDate(System.IAsyncResult result) {
            return base.Channel.EndValidateAppointmentDate(result);
        }
        
        private System.IAsyncResult OnBeginValidateAppointmentDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginValidateAppointmentDate(estimaterevisionid, callback, asyncState);
        }
        
        private object[] OnEndValidateAppointmentDate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndValidateAppointmentDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateAppointmentDateCompleted(object state) {
            if ((this.ValidateAppointmentDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateAppointmentDateCompleted(this, new ValidateAppointmentDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateAppointmentDateAsync(int estimaterevisionid) {
            this.ValidateAppointmentDateAsync(estimaterevisionid, null);
        }
        
        public void ValidateAppointmentDateAsync(int estimaterevisionid, object userState) {
            if ((this.onBeginValidateAppointmentDateDelegate == null)) {
                this.onBeginValidateAppointmentDateDelegate = new BeginOperationDelegate(this.OnBeginValidateAppointmentDate);
            }
            if ((this.onEndValidateAppointmentDateDelegate == null)) {
                this.onEndValidateAppointmentDateDelegate = new EndOperationDelegate(this.OnEndValidateAppointmentDate);
            }
            if ((this.onValidateAppointmentDateCompletedDelegate == null)) {
                this.onValidateAppointmentDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateAppointmentDateCompleted);
            }
            base.InvokeAsync(this.onBeginValidateAppointmentDateDelegate, new object[] {
                        estimaterevisionid}, this.onEndValidateAppointmentDateDelegate, this.onValidateAppointmentDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetNextEstimateRevision(int estimateRevisionId, int statusId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNextEstimateRevision(estimateRevisionId, statusId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetNextEstimateRevision(System.IAsyncResult result) {
            return base.Channel.EndGetNextEstimateRevision(result);
        }
        
        private System.IAsyncResult OnBeginGetNextEstimateRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int statusId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetNextEstimateRevision(estimateRevisionId, statusId, callback, asyncState);
        }
        
        private object[] OnEndGetNextEstimateRevision(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetNextEstimateRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNextEstimateRevisionCompleted(object state) {
            if ((this.GetNextEstimateRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNextEstimateRevisionCompleted(this, new GetNextEstimateRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNextEstimateRevisionAsync(int estimateRevisionId, int statusId) {
            this.GetNextEstimateRevisionAsync(estimateRevisionId, statusId, null);
        }
        
        public void GetNextEstimateRevisionAsync(int estimateRevisionId, int statusId, object userState) {
            if ((this.onBeginGetNextEstimateRevisionDelegate == null)) {
                this.onBeginGetNextEstimateRevisionDelegate = new BeginOperationDelegate(this.OnBeginGetNextEstimateRevision);
            }
            if ((this.onEndGetNextEstimateRevisionDelegate == null)) {
                this.onEndGetNextEstimateRevisionDelegate = new EndOperationDelegate(this.OnEndGetNextEstimateRevision);
            }
            if ((this.onGetNextEstimateRevisionCompletedDelegate == null)) {
                this.onGetNextEstimateRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNextEstimateRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginGetNextEstimateRevisionDelegate, new object[] {
                        estimateRevisionId,
                        statusId}, this.onEndGetNextEstimateRevisionDelegate, this.onGetNextEstimateRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAuditLogs(int revisionid, int revisiondetailid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuditLogs(revisionid, revisiondetailid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAuditLogs(System.IAsyncResult result) {
            return base.Channel.EndGetAuditLogs(result);
        }
        
        private System.IAsyncResult OnBeginGetAuditLogs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int revisiondetailid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAuditLogs(revisionid, revisiondetailid, callback, asyncState);
        }
        
        private object[] OnEndGetAuditLogs(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAuditLogs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuditLogsCompleted(object state) {
            if ((this.GetAuditLogsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuditLogsCompleted(this, new GetAuditLogsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuditLogsAsync(int revisionid, int revisiondetailid) {
            this.GetAuditLogsAsync(revisionid, revisiondetailid, null);
        }
        
        public void GetAuditLogsAsync(int revisionid, int revisiondetailid, object userState) {
            if ((this.onBeginGetAuditLogsDelegate == null)) {
                this.onBeginGetAuditLogsDelegate = new BeginOperationDelegate(this.OnBeginGetAuditLogs);
            }
            if ((this.onEndGetAuditLogsDelegate == null)) {
                this.onEndGetAuditLogsDelegate = new EndOperationDelegate(this.OnEndGetAuditLogs);
            }
            if ((this.onGetAuditLogsCompletedDelegate == null)) {
                this.onGetAuditLogsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuditLogsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuditLogsDelegate, new object[] {
                        revisionid,
                        revisiondetailid}, this.onEndGetAuditLogsDelegate, this.onGetAuditLogsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetDeletedItems(int revisionid, Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDeletedItems(revisionid, resulttype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetDeletedItems(System.IAsyncResult result) {
            return base.Channel.EndGetDeletedItems(result);
        }
        
        private System.IAsyncResult OnBeginGetDeletedItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetDeletedItems(revisionid, resulttype, callback, asyncState);
        }
        
        private object[] OnEndGetDeletedItems(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetDeletedItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDeletedItemsCompleted(object state) {
            if ((this.GetDeletedItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDeletedItemsCompleted(this, new GetDeletedItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDeletedItemsAsync(int revisionid, Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype) {
            this.GetDeletedItemsAsync(revisionid, resulttype, null);
        }
        
        public void GetDeletedItemsAsync(int revisionid, Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype, object userState) {
            if ((this.onBeginGetDeletedItemsDelegate == null)) {
                this.onBeginGetDeletedItemsDelegate = new BeginOperationDelegate(this.OnBeginGetDeletedItems);
            }
            if ((this.onEndGetDeletedItemsDelegate == null)) {
                this.onEndGetDeletedItemsDelegate = new EndOperationDelegate(this.OnEndGetDeletedItems);
            }
            if ((this.onGetDeletedItemsCompletedDelegate == null)) {
                this.onGetDeletedItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDeletedItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDeletedItemsDelegate, new object[] {
                        revisionid,
                        resulttype}, this.onEndGetDeletedItemsDelegate, this.onGetDeletedItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginReAddDeletedEstimateItem(int sourceEstimateRevisionId, int targetEstimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReAddDeletedEstimateItem(sourceEstimateRevisionId, targetEstimateRevisionId, OptionId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndReAddDeletedEstimateItem(System.IAsyncResult result) {
            return base.Channel.EndReAddDeletedEstimateItem(result);
        }
        
        private System.IAsyncResult OnBeginReAddDeletedEstimateItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int sourceEstimateRevisionId = ((int)(inValues[0]));
            int targetEstimateRevisionId = ((int)(inValues[1]));
            int OptionId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginReAddDeletedEstimateItem(sourceEstimateRevisionId, targetEstimateRevisionId, OptionId, userId, callback, asyncState);
        }
        
        private object[] OnEndReAddDeletedEstimateItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndReAddDeletedEstimateItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReAddDeletedEstimateItemCompleted(object state) {
            if ((this.ReAddDeletedEstimateItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReAddDeletedEstimateItemCompleted(this, new ReAddDeletedEstimateItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReAddDeletedEstimateItemAsync(int sourceEstimateRevisionId, int targetEstimateRevisionId, int OptionId, int userId) {
            this.ReAddDeletedEstimateItemAsync(sourceEstimateRevisionId, targetEstimateRevisionId, OptionId, userId, null);
        }
        
        public void ReAddDeletedEstimateItemAsync(int sourceEstimateRevisionId, int targetEstimateRevisionId, int OptionId, int userId, object userState) {
            if ((this.onBeginReAddDeletedEstimateItemDelegate == null)) {
                this.onBeginReAddDeletedEstimateItemDelegate = new BeginOperationDelegate(this.OnBeginReAddDeletedEstimateItem);
            }
            if ((this.onEndReAddDeletedEstimateItemDelegate == null)) {
                this.onEndReAddDeletedEstimateItemDelegate = new EndOperationDelegate(this.OnEndReAddDeletedEstimateItem);
            }
            if ((this.onReAddDeletedEstimateItemCompletedDelegate == null)) {
                this.onReAddDeletedEstimateItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReAddDeletedEstimateItemCompleted);
            }
            base.InvokeAsync(this.onBeginReAddDeletedEstimateItemDelegate, new object[] {
                        sourceEstimateRevisionId,
                        targetEstimateRevisionId,
                        OptionId,
                        userId}, this.onEndReAddDeletedEstimateItemDelegate, this.onReAddDeletedEstimateItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginReAddDeletedMasterPromotionEstimateItem(int estimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReAddDeletedMasterPromotionEstimateItem(estimateRevisionId, OptionId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndReAddDeletedMasterPromotionEstimateItem(System.IAsyncResult result) {
            return base.Channel.EndReAddDeletedMasterPromotionEstimateItem(result);
        }
        
        private System.IAsyncResult OnBeginReAddDeletedMasterPromotionEstimateItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int OptionId = ((int)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginReAddDeletedMasterPromotionEstimateItem(estimateRevisionId, OptionId, userId, callback, asyncState);
        }
        
        private object[] OnEndReAddDeletedMasterPromotionEstimateItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndReAddDeletedMasterPromotionEstimateItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReAddDeletedMasterPromotionEstimateItemCompleted(object state) {
            if ((this.ReAddDeletedMasterPromotionEstimateItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReAddDeletedMasterPromotionEstimateItemCompleted(this, new ReAddDeletedMasterPromotionEstimateItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReAddDeletedMasterPromotionEstimateItemAsync(int estimateRevisionId, int OptionId, int userId) {
            this.ReAddDeletedMasterPromotionEstimateItemAsync(estimateRevisionId, OptionId, userId, null);
        }
        
        public void ReAddDeletedMasterPromotionEstimateItemAsync(int estimateRevisionId, int OptionId, int userId, object userState) {
            if ((this.onBeginReAddDeletedMasterPromotionEstimateItemDelegate == null)) {
                this.onBeginReAddDeletedMasterPromotionEstimateItemDelegate = new BeginOperationDelegate(this.OnBeginReAddDeletedMasterPromotionEstimateItem);
            }
            if ((this.onEndReAddDeletedMasterPromotionEstimateItemDelegate == null)) {
                this.onEndReAddDeletedMasterPromotionEstimateItemDelegate = new EndOperationDelegate(this.OnEndReAddDeletedMasterPromotionEstimateItem);
            }
            if ((this.onReAddDeletedMasterPromotionEstimateItemCompletedDelegate == null)) {
                this.onReAddDeletedMasterPromotionEstimateItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReAddDeletedMasterPromotionEstimateItemCompleted);
            }
            base.InvokeAsync(this.onBeginReAddDeletedMasterPromotionEstimateItemDelegate, new object[] {
                        estimateRevisionId,
                        OptionId,
                        userId}, this.onEndReAddDeletedMasterPromotionEstimateItemDelegate, this.onReAddDeletedMasterPromotionEstimateItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAllFacadeFromRevisonID(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllFacadeFromRevisonID(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAllFacadeFromRevisonID(System.IAsyncResult result) {
            return base.Channel.EndGetAllFacadeFromRevisonID(result);
        }
        
        private System.IAsyncResult OnBeginGetAllFacadeFromRevisonID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAllFacadeFromRevisonID(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetAllFacadeFromRevisonID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAllFacadeFromRevisonID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllFacadeFromRevisonIDCompleted(object state) {
            if ((this.GetAllFacadeFromRevisonIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllFacadeFromRevisonIDCompleted(this, new GetAllFacadeFromRevisonIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllFacadeFromRevisonIDAsync(int revisionid) {
            this.GetAllFacadeFromRevisonIDAsync(revisionid, null);
        }
        
        public void GetAllFacadeFromRevisonIDAsync(int revisionid, object userState) {
            if ((this.onBeginGetAllFacadeFromRevisonIDDelegate == null)) {
                this.onBeginGetAllFacadeFromRevisonIDDelegate = new BeginOperationDelegate(this.OnBeginGetAllFacadeFromRevisonID);
            }
            if ((this.onEndGetAllFacadeFromRevisonIDDelegate == null)) {
                this.onEndGetAllFacadeFromRevisonIDDelegate = new EndOperationDelegate(this.OnEndGetAllFacadeFromRevisonID);
            }
            if ((this.onGetAllFacadeFromRevisonIDCompletedDelegate == null)) {
                this.onGetAllFacadeFromRevisonIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllFacadeFromRevisonIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllFacadeFromRevisonIDDelegate, new object[] {
                        revisionid}, this.onEndGetAllFacadeFromRevisonIDDelegate, this.onGetAllFacadeFromRevisonIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAllAvailableHomeByState(int stateid, string searchText, bool showdisplayhomes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllAvailableHomeByState(stateid, searchText, showdisplayhomes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAllAvailableHomeByState(System.IAsyncResult result) {
            return base.Channel.EndGetAllAvailableHomeByState(result);
        }
        
        private System.IAsyncResult OnBeginGetAllAvailableHomeByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stateid = ((int)(inValues[0]));
            string searchText = ((string)(inValues[1]));
            bool showdisplayhomes = ((bool)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAllAvailableHomeByState(stateid, searchText, showdisplayhomes, callback, asyncState);
        }
        
        private object[] OnEndGetAllAvailableHomeByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAllAvailableHomeByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllAvailableHomeByStateCompleted(object state) {
            if ((this.GetAllAvailableHomeByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllAvailableHomeByStateCompleted(this, new GetAllAvailableHomeByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllAvailableHomeByStateAsync(int stateid, string searchText, bool showdisplayhomes) {
            this.GetAllAvailableHomeByStateAsync(stateid, searchText, showdisplayhomes, null);
        }
        
        public void GetAllAvailableHomeByStateAsync(int stateid, string searchText, bool showdisplayhomes, object userState) {
            if ((this.onBeginGetAllAvailableHomeByStateDelegate == null)) {
                this.onBeginGetAllAvailableHomeByStateDelegate = new BeginOperationDelegate(this.OnBeginGetAllAvailableHomeByState);
            }
            if ((this.onEndGetAllAvailableHomeByStateDelegate == null)) {
                this.onEndGetAllAvailableHomeByStateDelegate = new EndOperationDelegate(this.OnEndGetAllAvailableHomeByState);
            }
            if ((this.onGetAllAvailableHomeByStateCompletedDelegate == null)) {
                this.onGetAllAvailableHomeByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllAvailableHomeByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllAvailableHomeByStateDelegate, new object[] {
                        stateid,
                        searchText,
                        showdisplayhomes}, this.onEndGetAllAvailableHomeByStateDelegate, this.onGetAllAvailableHomeByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetHomeFullNameByState(int stateid, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHomeFullNameByState(stateid, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetHomeFullNameByState(System.IAsyncResult result) {
            return base.Channel.EndGetHomeFullNameByState(result);
        }
        
        private System.IAsyncResult OnBeginGetHomeFullNameByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stateid = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetHomeFullNameByState(stateid, userId, callback, asyncState);
        }
        
        private object[] OnEndGetHomeFullNameByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetHomeFullNameByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHomeFullNameByStateCompleted(object state) {
            if ((this.GetHomeFullNameByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHomeFullNameByStateCompleted(this, new GetHomeFullNameByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHomeFullNameByStateAsync(int stateid, int userId) {
            this.GetHomeFullNameByStateAsync(stateid, userId, null);
        }
        
        public void GetHomeFullNameByStateAsync(int stateid, int userId, object userState) {
            if ((this.onBeginGetHomeFullNameByStateDelegate == null)) {
                this.onBeginGetHomeFullNameByStateDelegate = new BeginOperationDelegate(this.OnBeginGetHomeFullNameByState);
            }
            if ((this.onEndGetHomeFullNameByStateDelegate == null)) {
                this.onEndGetHomeFullNameByStateDelegate = new EndOperationDelegate(this.OnEndGetHomeFullNameByState);
            }
            if ((this.onGetHomeFullNameByStateCompletedDelegate == null)) {
                this.onGetHomeFullNameByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHomeFullNameByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetHomeFullNameByStateDelegate, new object[] {
                        stateid,
                        userId}, this.onEndGetHomeFullNameByStateDelegate, this.onGetHomeFullNameByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAreaNameWithAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAreaNameWithAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAreaNameWithAll(System.IAsyncResult result) {
            return base.Channel.EndGetAreaNameWithAll(result);
        }
        
        private System.IAsyncResult OnBeginGetAreaNameWithAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAreaNameWithAll(callback, asyncState);
        }
        
        private object[] OnEndGetAreaNameWithAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAreaNameWithAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAreaNameWithAllCompleted(object state) {
            if ((this.GetAreaNameWithAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAreaNameWithAllCompleted(this, new GetAreaNameWithAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAreaNameWithAllAsync() {
            this.GetAreaNameWithAllAsync(null);
        }
        
        public void GetAreaNameWithAllAsync(object userState) {
            if ((this.onBeginGetAreaNameWithAllDelegate == null)) {
                this.onBeginGetAreaNameWithAllDelegate = new BeginOperationDelegate(this.OnBeginGetAreaNameWithAll);
            }
            if ((this.onEndGetAreaNameWithAllDelegate == null)) {
                this.onEndGetAreaNameWithAllDelegate = new EndOperationDelegate(this.OnEndGetAreaNameWithAll);
            }
            if ((this.onGetAreaNameWithAllCompletedDelegate == null)) {
                this.onGetAreaNameWithAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAreaNameWithAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetAreaNameWithAllDelegate, null, this.onEndGetAreaNameWithAllDelegate, this.onGetAreaNameWithAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetGroupNameWithAll(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetGroupNameWithAll(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetGroupNameWithAll(System.IAsyncResult result) {
            return base.Channel.EndGetGroupNameWithAll(result);
        }
        
        private System.IAsyncResult OnBeginGetGroupNameWithAll(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetGroupNameWithAll(callback, asyncState);
        }
        
        private object[] OnEndGetGroupNameWithAll(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetGroupNameWithAll(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetGroupNameWithAllCompleted(object state) {
            if ((this.GetGroupNameWithAllCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetGroupNameWithAllCompleted(this, new GetGroupNameWithAllCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetGroupNameWithAllAsync() {
            this.GetGroupNameWithAllAsync(null);
        }
        
        public void GetGroupNameWithAllAsync(object userState) {
            if ((this.onBeginGetGroupNameWithAllDelegate == null)) {
                this.onBeginGetGroupNameWithAllDelegate = new BeginOperationDelegate(this.OnBeginGetGroupNameWithAll);
            }
            if ((this.onEndGetGroupNameWithAllDelegate == null)) {
                this.onEndGetGroupNameWithAllDelegate = new EndOperationDelegate(this.OnEndGetGroupNameWithAll);
            }
            if ((this.onGetGroupNameWithAllCompletedDelegate == null)) {
                this.onGetGroupNameWithAllCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetGroupNameWithAllCompleted);
            }
            base.InvokeAsync(this.onBeginGetGroupNameWithAllDelegate, null, this.onEndGetGroupNameWithAllDelegate, this.onGetGroupNameWithAllCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckFacadeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckFacadeConfigurationDifference(revisionid, newfacadehomeid, effectivedate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckFacadeConfigurationDifference(System.IAsyncResult result) {
            return base.Channel.EndCheckFacadeConfigurationDifference(result);
        }
        
        private System.IAsyncResult OnBeginCheckFacadeConfigurationDifference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int newfacadehomeid = ((int)(inValues[1]));
            string effectivedate = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckFacadeConfigurationDifference(revisionid, newfacadehomeid, effectivedate, callback, asyncState);
        }
        
        private object[] OnEndCheckFacadeConfigurationDifference(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckFacadeConfigurationDifference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckFacadeConfigurationDifferenceCompleted(object state) {
            if ((this.CheckFacadeConfigurationDifferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckFacadeConfigurationDifferenceCompleted(this, new CheckFacadeConfigurationDifferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckFacadeConfigurationDifferenceAsync(int revisionid, int newfacadehomeid, string effectivedate) {
            this.CheckFacadeConfigurationDifferenceAsync(revisionid, newfacadehomeid, effectivedate, null);
        }
        
        public void CheckFacadeConfigurationDifferenceAsync(int revisionid, int newfacadehomeid, string effectivedate, object userState) {
            if ((this.onBeginCheckFacadeConfigurationDifferenceDelegate == null)) {
                this.onBeginCheckFacadeConfigurationDifferenceDelegate = new BeginOperationDelegate(this.OnBeginCheckFacadeConfigurationDifference);
            }
            if ((this.onEndCheckFacadeConfigurationDifferenceDelegate == null)) {
                this.onEndCheckFacadeConfigurationDifferenceDelegate = new EndOperationDelegate(this.OnEndCheckFacadeConfigurationDifference);
            }
            if ((this.onCheckFacadeConfigurationDifferenceCompletedDelegate == null)) {
                this.onCheckFacadeConfigurationDifferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckFacadeConfigurationDifferenceCompleted);
            }
            base.InvokeAsync(this.onBeginCheckFacadeConfigurationDifferenceDelegate, new object[] {
                        revisionid,
                        newfacadehomeid,
                        effectivedate}, this.onEndCheckFacadeConfigurationDifferenceDelegate, this.onCheckFacadeConfigurationDifferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckHomeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckHomeConfigurationDifference(revisionid, newfacadehomeid, effectivedate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckHomeConfigurationDifference(System.IAsyncResult result) {
            return base.Channel.EndCheckHomeConfigurationDifference(result);
        }
        
        private System.IAsyncResult OnBeginCheckHomeConfigurationDifference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int newfacadehomeid = ((int)(inValues[1]));
            string effectivedate = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckHomeConfigurationDifference(revisionid, newfacadehomeid, effectivedate, callback, asyncState);
        }
        
        private object[] OnEndCheckHomeConfigurationDifference(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckHomeConfigurationDifference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckHomeConfigurationDifferenceCompleted(object state) {
            if ((this.CheckHomeConfigurationDifferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckHomeConfigurationDifferenceCompleted(this, new CheckHomeConfigurationDifferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckHomeConfigurationDifferenceAsync(int revisionid, int newfacadehomeid, string effectivedate) {
            this.CheckHomeConfigurationDifferenceAsync(revisionid, newfacadehomeid, effectivedate, null);
        }
        
        public void CheckHomeConfigurationDifferenceAsync(int revisionid, int newfacadehomeid, string effectivedate, object userState) {
            if ((this.onBeginCheckHomeConfigurationDifferenceDelegate == null)) {
                this.onBeginCheckHomeConfigurationDifferenceDelegate = new BeginOperationDelegate(this.OnBeginCheckHomeConfigurationDifference);
            }
            if ((this.onEndCheckHomeConfigurationDifferenceDelegate == null)) {
                this.onEndCheckHomeConfigurationDifferenceDelegate = new EndOperationDelegate(this.OnEndCheckHomeConfigurationDifference);
            }
            if ((this.onCheckHomeConfigurationDifferenceCompletedDelegate == null)) {
                this.onCheckHomeConfigurationDifferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckHomeConfigurationDifferenceCompleted);
            }
            base.InvokeAsync(this.onBeginCheckHomeConfigurationDifferenceDelegate, new object[] {
                        revisionid,
                        newfacadehomeid,
                        effectivedate}, this.onEndCheckHomeConfigurationDifferenceDelegate, this.onCheckHomeConfigurationDifferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginChangeFacade(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeFacade(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndChangeFacade(System.IAsyncResult result) {
            return base.Channel.EndChangeFacade(result);
        }
        
        private System.IAsyncResult OnBeginChangeFacade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int newfacadehomeid = ((int)(inValues[1]));
            string detailIDsSelected = ((string)(inValues[2]));
            string detailOptionsSeleced = ((string)(inValues[3]));
            string detailPricesSeleced = ((string)(inValues[4]));
            string effectivedate = ((string)(inValues[5]));
            int userid = ((int)(inValues[6]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginChangeFacade(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, callback, asyncState);
        }
        
        private object[] OnEndChangeFacade(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndChangeFacade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeFacadeCompleted(object state) {
            if ((this.ChangeFacadeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeFacadeCompleted(this, new ChangeFacadeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeFacadeAsync(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid) {
            this.ChangeFacadeAsync(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, null);
        }
        
        public void ChangeFacadeAsync(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, object userState) {
            if ((this.onBeginChangeFacadeDelegate == null)) {
                this.onBeginChangeFacadeDelegate = new BeginOperationDelegate(this.OnBeginChangeFacade);
            }
            if ((this.onEndChangeFacadeDelegate == null)) {
                this.onEndChangeFacadeDelegate = new EndOperationDelegate(this.OnEndChangeFacade);
            }
            if ((this.onChangeFacadeCompletedDelegate == null)) {
                this.onChangeFacadeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeFacadeCompleted);
            }
            base.InvokeAsync(this.onBeginChangeFacadeDelegate, new object[] {
                        revisionid,
                        newfacadehomeid,
                        detailIDsSelected,
                        detailOptionsSeleced,
                        detailPricesSeleced,
                        effectivedate,
                        userid}, this.onEndChangeFacadeDelegate, this.onChangeFacadeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginChangeHome(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeHome(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndChangeHome(System.IAsyncResult result) {
            return base.Channel.EndChangeHome(result);
        }
        
        private System.IAsyncResult OnBeginChangeHome(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int newfacadehomeid = ((int)(inValues[1]));
            string detailIDsSelected = ((string)(inValues[2]));
            string detailOptionsSeleced = ((string)(inValues[3]));
            string detailPricesSeleced = ((string)(inValues[4]));
            string effectivedate = ((string)(inValues[5]));
            int userid = ((int)(inValues[6]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginChangeHome(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, callback, asyncState);
        }
        
        private object[] OnEndChangeHome(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndChangeHome(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeHomeCompleted(object state) {
            if ((this.ChangeHomeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeHomeCompleted(this, new ChangeHomeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeHomeAsync(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid) {
            this.ChangeHomeAsync(revisionid, newfacadehomeid, detailIDsSelected, detailOptionsSeleced, detailPricesSeleced, effectivedate, userid, null);
        }
        
        public void ChangeHomeAsync(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, object userState) {
            if ((this.onBeginChangeHomeDelegate == null)) {
                this.onBeginChangeHomeDelegate = new BeginOperationDelegate(this.OnBeginChangeHome);
            }
            if ((this.onEndChangeHomeDelegate == null)) {
                this.onEndChangeHomeDelegate = new EndOperationDelegate(this.OnEndChangeHome);
            }
            if ((this.onChangeHomeCompletedDelegate == null)) {
                this.onChangeHomeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeHomeCompleted);
            }
            base.InvokeAsync(this.onBeginChangeHomeDelegate, new object[] {
                        revisionid,
                        newfacadehomeid,
                        detailIDsSelected,
                        detailOptionsSeleced,
                        detailPricesSeleced,
                        effectivedate,
                        userid}, this.onEndChangeHomeDelegate, this.onChangeHomeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetContractType(string configCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContractType(configCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetContractType(System.IAsyncResult result) {
            return base.Channel.EndGetContractType(result);
        }
        
        private System.IAsyncResult OnBeginGetContractType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string configCode = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetContractType(configCode, callback, asyncState);
        }
        
        private object[] OnEndGetContractType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetContractType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContractTypeCompleted(object state) {
            if ((this.GetContractTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContractTypeCompleted(this, new GetContractTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContractTypeAsync(string configCode) {
            this.GetContractTypeAsync(configCode, null);
        }
        
        public void GetContractTypeAsync(string configCode, object userState) {
            if ((this.onBeginGetContractTypeDelegate == null)) {
                this.onBeginGetContractTypeDelegate = new BeginOperationDelegate(this.OnBeginGetContractType);
            }
            if ((this.onEndGetContractTypeDelegate == null)) {
                this.onEndGetContractTypeDelegate = new EndOperationDelegate(this.OnEndGetContractType);
            }
            if ((this.onGetContractTypeCompletedDelegate == null)) {
                this.onGetContractTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContractTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetContractTypeDelegate, new object[] {
                        configCode}, this.onEndGetContractTypeDelegate, this.onGetContractTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateContractType(int revisionid, string contracttype, string jobflowtype, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateContractType(revisionid, contracttype, jobflowtype, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateContractType(System.IAsyncResult result) {
            return base.Channel.EndUpdateContractType(result);
        }
        
        private System.IAsyncResult OnBeginUpdateContractType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            string contracttype = ((string)(inValues[1]));
            string jobflowtype = ((string)(inValues[2]));
            int userid = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateContractType(revisionid, contracttype, jobflowtype, userid, callback, asyncState);
        }
        
        private object[] OnEndUpdateContractType(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateContractType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateContractTypeCompleted(object state) {
            if ((this.UpdateContractTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateContractTypeCompleted(this, new UpdateContractTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateContractTypeAsync(int revisionid, string contracttype, string jobflowtype, int userid) {
            this.UpdateContractTypeAsync(revisionid, contracttype, jobflowtype, userid, null);
        }
        
        public void UpdateContractTypeAsync(int revisionid, string contracttype, string jobflowtype, int userid, object userState) {
            if ((this.onBeginUpdateContractTypeDelegate == null)) {
                this.onBeginUpdateContractTypeDelegate = new BeginOperationDelegate(this.OnBeginUpdateContractType);
            }
            if ((this.onEndUpdateContractTypeDelegate == null)) {
                this.onEndUpdateContractTypeDelegate = new EndOperationDelegate(this.OnEndUpdateContractType);
            }
            if ((this.onUpdateContractTypeCompletedDelegate == null)) {
                this.onUpdateContractTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateContractTypeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateContractTypeDelegate, new object[] {
                        revisionid,
                        contracttype,
                        jobflowtype,
                        userid}, this.onEndUpdateContractTypeDelegate, this.onUpdateContractTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetHomeName(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHomeName(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetHomeName(System.IAsyncResult result) {
            return base.Channel.EndGetHomeName(result);
        }
        
        private System.IAsyncResult OnBeginGetHomeName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetHomeName(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetHomeName(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetHomeName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHomeNameCompleted(object state) {
            if ((this.GetHomeNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHomeNameCompleted(this, new GetHomeNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHomeNameAsync(int revisionid) {
            this.GetHomeNameAsync(revisionid, null);
        }
        
        public void GetHomeNameAsync(int revisionid, object userState) {
            if ((this.onBeginGetHomeNameDelegate == null)) {
                this.onBeginGetHomeNameDelegate = new BeginOperationDelegate(this.OnBeginGetHomeName);
            }
            if ((this.onEndGetHomeNameDelegate == null)) {
                this.onEndGetHomeNameDelegate = new EndOperationDelegate(this.OnEndGetHomeName);
            }
            if ((this.onGetHomeNameCompletedDelegate == null)) {
                this.onGetHomeNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHomeNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetHomeNameDelegate, new object[] {
                        revisionid}, this.onEndGetHomeNameDelegate, this.onGetHomeNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateHomeName(int revisionid, string homename, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateHomeName(revisionid, homename, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateHomeName(System.IAsyncResult result) {
            return base.Channel.EndUpdateHomeName(result);
        }
        
        private System.IAsyncResult OnBeginUpdateHomeName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            string homename = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateHomeName(revisionid, homename, userid, callback, asyncState);
        }
        
        private object[] OnEndUpdateHomeName(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateHomeName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateHomeNameCompleted(object state) {
            if ((this.UpdateHomeNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateHomeNameCompleted(this, new UpdateHomeNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateHomeNameAsync(int revisionid, string homename, int userid) {
            this.UpdateHomeNameAsync(revisionid, homename, userid, null);
        }
        
        public void UpdateHomeNameAsync(int revisionid, string homename, int userid, object userState) {
            if ((this.onBeginUpdateHomeNameDelegate == null)) {
                this.onBeginUpdateHomeNameDelegate = new BeginOperationDelegate(this.OnBeginUpdateHomeName);
            }
            if ((this.onEndUpdateHomeNameDelegate == null)) {
                this.onEndUpdateHomeNameDelegate = new EndOperationDelegate(this.OnEndUpdateHomeName);
            }
            if ((this.onUpdateHomeNameCompletedDelegate == null)) {
                this.onUpdateHomeNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateHomeNameCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateHomeNameDelegate, new object[] {
                        revisionid,
                        homename,
                        userid}, this.onEndUpdateHomeNameDelegate, this.onUpdateHomeNameCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyEstimateCheckDifference(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyEstimateCheckDifference(sourceEstimatenumber, destinationEstimatenumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyEstimateCheckDifference(System.IAsyncResult result) {
            return base.Channel.EndCopyEstimateCheckDifference(result);
        }
        
        private System.IAsyncResult OnBeginCopyEstimateCheckDifference(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sourceEstimatenumber = ((string)(inValues[0]));
            string destinationEstimatenumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyEstimateCheckDifference(sourceEstimatenumber, destinationEstimatenumber, callback, asyncState);
        }
        
        private object[] OnEndCopyEstimateCheckDifference(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyEstimateCheckDifference(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyEstimateCheckDifferenceCompleted(object state) {
            if ((this.CopyEstimateCheckDifferenceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyEstimateCheckDifferenceCompleted(this, new CopyEstimateCheckDifferenceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyEstimateCheckDifferenceAsync(string sourceEstimatenumber, string destinationEstimatenumber) {
            this.CopyEstimateCheckDifferenceAsync(sourceEstimatenumber, destinationEstimatenumber, null);
        }
        
        public void CopyEstimateCheckDifferenceAsync(string sourceEstimatenumber, string destinationEstimatenumber, object userState) {
            if ((this.onBeginCopyEstimateCheckDifferenceDelegate == null)) {
                this.onBeginCopyEstimateCheckDifferenceDelegate = new BeginOperationDelegate(this.OnBeginCopyEstimateCheckDifference);
            }
            if ((this.onEndCopyEstimateCheckDifferenceDelegate == null)) {
                this.onEndCopyEstimateCheckDifferenceDelegate = new EndOperationDelegate(this.OnEndCopyEstimateCheckDifference);
            }
            if ((this.onCopyEstimateCheckDifferenceCompletedDelegate == null)) {
                this.onCopyEstimateCheckDifferenceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyEstimateCheckDifferenceCompleted);
            }
            base.InvokeAsync(this.onBeginCopyEstimateCheckDifferenceDelegate, new object[] {
                        sourceEstimatenumber,
                        destinationEstimatenumber}, this.onEndCopyEstimateCheckDifferenceDelegate, this.onCopyEstimateCheckDifferenceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyEstimate(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyEstimate(sourceEstimatenumber, destinationEstimatenumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyEstimate(System.IAsyncResult result) {
            return base.Channel.EndCopyEstimate(result);
        }
        
        private System.IAsyncResult OnBeginCopyEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sourceEstimatenumber = ((string)(inValues[0]));
            string destinationEstimatenumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyEstimate(sourceEstimatenumber, destinationEstimatenumber, callback, asyncState);
        }
        
        private object[] OnEndCopyEstimate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyEstimateCompleted(object state) {
            if ((this.CopyEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyEstimateCompleted(this, new CopyEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyEstimateAsync(string sourceEstimatenumber, string destinationEstimatenumber) {
            this.CopyEstimateAsync(sourceEstimatenumber, destinationEstimatenumber, null);
        }
        
        public void CopyEstimateAsync(string sourceEstimatenumber, string destinationEstimatenumber, object userState) {
            if ((this.onBeginCopyEstimateDelegate == null)) {
                this.onBeginCopyEstimateDelegate = new BeginOperationDelegate(this.OnBeginCopyEstimate);
            }
            if ((this.onEndCopyEstimateDelegate == null)) {
                this.onEndCopyEstimateDelegate = new EndOperationDelegate(this.OnEndCopyEstimate);
            }
            if ((this.onCopyEstimateCompletedDelegate == null)) {
                this.onCopyEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyEstimateDelegate, new object[] {
                        sourceEstimatenumber,
                        destinationEstimatenumber}, this.onEndCopyEstimateDelegate, this.onCopyEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAreaSurcharge(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAreaSurcharge(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<decimal> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAreaSurcharge(System.IAsyncResult result) {
            return base.Channel.EndGetAreaSurcharge(result);
        }
        
        private System.IAsyncResult OnBeginGetAreaSurcharge(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAreaSurcharge(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetAreaSurcharge(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<decimal> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAreaSurcharge(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAreaSurchargeCompleted(object state) {
            if ((this.GetAreaSurchargeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAreaSurchargeCompleted(this, new GetAreaSurchargeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAreaSurchargeAsync(int revisionid) {
            this.GetAreaSurchargeAsync(revisionid, null);
        }
        
        public void GetAreaSurchargeAsync(int revisionid, object userState) {
            if ((this.onBeginGetAreaSurchargeDelegate == null)) {
                this.onBeginGetAreaSurchargeDelegate = new BeginOperationDelegate(this.OnBeginGetAreaSurcharge);
            }
            if ((this.onEndGetAreaSurchargeDelegate == null)) {
                this.onEndGetAreaSurchargeDelegate = new EndOperationDelegate(this.OnEndGetAreaSurcharge);
            }
            if ((this.onGetAreaSurchargeCompletedDelegate == null)) {
                this.onGetAreaSurchargeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAreaSurchargeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAreaSurchargeDelegate, new object[] {
                        revisionid}, this.onEndGetAreaSurchargeDelegate, this.onGetAreaSurchargeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetPagByID(int estimaterevisionid, int optionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPagByID(estimaterevisionid, optionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetPagByID(System.IAsyncResult result) {
            return base.Channel.EndGetPagByID(result);
        }
        
        private System.IAsyncResult OnBeginGetPagByID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            int optionid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetPagByID(estimaterevisionid, optionid, callback, asyncState);
        }
        
        private object[] OnEndGetPagByID(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetPagByID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPagByIDCompleted(object state) {
            if ((this.GetPagByIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPagByIDCompleted(this, new GetPagByIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPagByIDAsync(int estimaterevisionid, int optionid) {
            this.GetPagByIDAsync(estimaterevisionid, optionid, null);
        }
        
        public void GetPagByIDAsync(int estimaterevisionid, int optionid, object userState) {
            if ((this.onBeginGetPagByIDDelegate == null)) {
                this.onBeginGetPagByIDDelegate = new BeginOperationDelegate(this.OnBeginGetPagByID);
            }
            if ((this.onEndGetPagByIDDelegate == null)) {
                this.onEndGetPagByIDDelegate = new EndOperationDelegate(this.OnEndGetPagByID);
            }
            if ((this.onGetPagByIDCompletedDelegate == null)) {
                this.onGetPagByIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPagByIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPagByIDDelegate, new object[] {
                        estimaterevisionid,
                        optionid}, this.onEndGetPagByIDDelegate, this.onGetPagByIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetUpgradeOptionListForStandardInclusion(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUpgradeOptionListForStandardInclusion(estimaterevisionid, originateoptionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetUpgradeOptionListForStandardInclusion(System.IAsyncResult result) {
            return base.Channel.EndGetUpgradeOptionListForStandardInclusion(result);
        }
        
        private System.IAsyncResult OnBeginGetUpgradeOptionListForStandardInclusion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            int originateoptionid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetUpgradeOptionListForStandardInclusion(estimaterevisionid, originateoptionid, callback, asyncState);
        }
        
        private object[] OnEndGetUpgradeOptionListForStandardInclusion(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetUpgradeOptionListForStandardInclusion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUpgradeOptionListForStandardInclusionCompleted(object state) {
            if ((this.GetUpgradeOptionListForStandardInclusionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUpgradeOptionListForStandardInclusionCompleted(this, new GetUpgradeOptionListForStandardInclusionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUpgradeOptionListForStandardInclusionAsync(int estimaterevisionid, int originateoptionid) {
            this.GetUpgradeOptionListForStandardInclusionAsync(estimaterevisionid, originateoptionid, null);
        }
        
        public void GetUpgradeOptionListForStandardInclusionAsync(int estimaterevisionid, int originateoptionid, object userState) {
            if ((this.onBeginGetUpgradeOptionListForStandardInclusionDelegate == null)) {
                this.onBeginGetUpgradeOptionListForStandardInclusionDelegate = new BeginOperationDelegate(this.OnBeginGetUpgradeOptionListForStandardInclusion);
            }
            if ((this.onEndGetUpgradeOptionListForStandardInclusionDelegate == null)) {
                this.onEndGetUpgradeOptionListForStandardInclusionDelegate = new EndOperationDelegate(this.OnEndGetUpgradeOptionListForStandardInclusion);
            }
            if ((this.onGetUpgradeOptionListForStandardInclusionCompletedDelegate == null)) {
                this.onGetUpgradeOptionListForStandardInclusionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUpgradeOptionListForStandardInclusionCompleted);
            }
            base.InvokeAsync(this.onBeginGetUpgradeOptionListForStandardInclusionDelegate, new object[] {
                        estimaterevisionid,
                        originateoptionid}, this.onEndGetUpgradeOptionListForStandardInclusionDelegate, this.onGetUpgradeOptionListForStandardInclusionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetStudioMQandA(int optionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudioMQandA(optionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetStudioMQandA(System.IAsyncResult result) {
            return base.Channel.EndGetStudioMQandA(result);
        }
        
        private System.IAsyncResult OnBeginGetStudioMQandA(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int optionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetStudioMQandA(optionId, callback, asyncState);
        }
        
        private object[] OnEndGetStudioMQandA(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetStudioMQandA(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudioMQandACompleted(object state) {
            if ((this.GetStudioMQandACompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudioMQandACompleted(this, new GetStudioMQandACompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudioMQandAAsync(int optionId) {
            this.GetStudioMQandAAsync(optionId, null);
        }
        
        public void GetStudioMQandAAsync(int optionId, object userState) {
            if ((this.onBeginGetStudioMQandADelegate == null)) {
                this.onBeginGetStudioMQandADelegate = new BeginOperationDelegate(this.OnBeginGetStudioMQandA);
            }
            if ((this.onEndGetStudioMQandADelegate == null)) {
                this.onEndGetStudioMQandADelegate = new EndOperationDelegate(this.OnEndGetStudioMQandA);
            }
            if ((this.onGetStudioMQandACompletedDelegate == null)) {
                this.onGetStudioMQandACompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudioMQandACompleted);
            }
            base.InvokeAsync(this.onBeginGetStudioMQandADelegate, new object[] {
                        optionId}, this.onEndGetStudioMQandADelegate, this.onGetStudioMQandACompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSharepoint_GetFileList(string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSharepoint_GetFileList(opportunityid, contractnumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSharepoint_GetFileList(System.IAsyncResult result) {
            return base.Channel.EndSharepoint_GetFileList(result);
        }
        
        private System.IAsyncResult OnBeginSharepoint_GetFileList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string opportunityid = ((string)(inValues[0]));
            string contractnumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSharepoint_GetFileList(opportunityid, contractnumber, callback, asyncState);
        }
        
        private object[] OnEndSharepoint_GetFileList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSharepoint_GetFileList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSharepoint_GetFileListCompleted(object state) {
            if ((this.Sharepoint_GetFileListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Sharepoint_GetFileListCompleted(this, new Sharepoint_GetFileListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Sharepoint_GetFileListAsync(string opportunityid, string contractnumber) {
            this.Sharepoint_GetFileListAsync(opportunityid, contractnumber, null);
        }
        
        public void Sharepoint_GetFileListAsync(string opportunityid, string contractnumber, object userState) {
            if ((this.onBeginSharepoint_GetFileListDelegate == null)) {
                this.onBeginSharepoint_GetFileListDelegate = new BeginOperationDelegate(this.OnBeginSharepoint_GetFileList);
            }
            if ((this.onEndSharepoint_GetFileListDelegate == null)) {
                this.onEndSharepoint_GetFileListDelegate = new EndOperationDelegate(this.OnEndSharepoint_GetFileList);
            }
            if ((this.onSharepoint_GetFileListCompletedDelegate == null)) {
                this.onSharepoint_GetFileListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSharepoint_GetFileListCompleted);
            }
            base.InvokeAsync(this.onBeginSharepoint_GetFileListDelegate, new object[] {
                        opportunityid,
                        contractnumber}, this.onEndSharepoint_GetFileListDelegate, this.onSharepoint_GetFileListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSharepoint_SharepointUploadFile(string filename, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSharepoint_SharepointUploadFile(filename, contents, oldname, opportunityid, doccategory, doctype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSharepoint_SharepointUploadFile(System.IAsyncResult result) {
            return base.Channel.EndSharepoint_SharepointUploadFile(result);
        }
        
        private System.IAsyncResult OnBeginSharepoint_SharepointUploadFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string filename = ((string)(inValues[0]));
            byte[] contents = ((byte[])(inValues[1]));
            string oldname = ((string)(inValues[2]));
            string opportunityid = ((string)(inValues[3]));
            string doccategory = ((string)(inValues[4]));
            string doctype = ((string)(inValues[5]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSharepoint_SharepointUploadFile(filename, contents, oldname, opportunityid, doccategory, doctype, callback, asyncState);
        }
        
        private object[] OnEndSharepoint_SharepointUploadFile(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSharepoint_SharepointUploadFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSharepoint_SharepointUploadFileCompleted(object state) {
            if ((this.Sharepoint_SharepointUploadFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Sharepoint_SharepointUploadFileCompleted(this, new Sharepoint_SharepointUploadFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Sharepoint_SharepointUploadFileAsync(string filename, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype) {
            this.Sharepoint_SharepointUploadFileAsync(filename, contents, oldname, opportunityid, doccategory, doctype, null);
        }
        
        public void Sharepoint_SharepointUploadFileAsync(string filename, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, object userState) {
            if ((this.onBeginSharepoint_SharepointUploadFileDelegate == null)) {
                this.onBeginSharepoint_SharepointUploadFileDelegate = new BeginOperationDelegate(this.OnBeginSharepoint_SharepointUploadFile);
            }
            if ((this.onEndSharepoint_SharepointUploadFileDelegate == null)) {
                this.onEndSharepoint_SharepointUploadFileDelegate = new EndOperationDelegate(this.OnEndSharepoint_SharepointUploadFile);
            }
            if ((this.onSharepoint_SharepointUploadFileCompletedDelegate == null)) {
                this.onSharepoint_SharepointUploadFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSharepoint_SharepointUploadFileCompleted);
            }
            base.InvokeAsync(this.onBeginSharepoint_SharepointUploadFileDelegate, new object[] {
                        filename,
                        contents,
                        oldname,
                        opportunityid,
                        doccategory,
                        doctype}, this.onEndSharepoint_SharepointUploadFileDelegate, this.onSharepoint_SharepointUploadFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSharepoint_DeleteFileFromSharepointLibrary(Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc, string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSharepoint_DeleteFileFromSharepointLibrary(doc, opportunityid, contractnumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSharepoint_DeleteFileFromSharepointLibrary(System.IAsyncResult result) {
            return base.Channel.EndSharepoint_DeleteFileFromSharepointLibrary(result);
        }
        
        private System.IAsyncResult OnBeginSharepoint_DeleteFileFromSharepointLibrary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc)(inValues[0]));
            string opportunityid = ((string)(inValues[1]));
            string contractnumber = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSharepoint_DeleteFileFromSharepointLibrary(doc, opportunityid, contractnumber, callback, asyncState);
        }
        
        private object[] OnEndSharepoint_DeleteFileFromSharepointLibrary(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSharepoint_DeleteFileFromSharepointLibrary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSharepoint_DeleteFileFromSharepointLibraryCompleted(object state) {
            if ((this.Sharepoint_DeleteFileFromSharepointLibraryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Sharepoint_DeleteFileFromSharepointLibraryCompleted(this, new Sharepoint_DeleteFileFromSharepointLibraryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Sharepoint_DeleteFileFromSharepointLibraryAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc, string opportunityid, string contractnumber) {
            this.Sharepoint_DeleteFileFromSharepointLibraryAsync(doc, opportunityid, contractnumber, null);
        }
        
        public void Sharepoint_DeleteFileFromSharepointLibraryAsync(Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc, string opportunityid, string contractnumber, object userState) {
            if ((this.onBeginSharepoint_DeleteFileFromSharepointLibraryDelegate == null)) {
                this.onBeginSharepoint_DeleteFileFromSharepointLibraryDelegate = new BeginOperationDelegate(this.OnBeginSharepoint_DeleteFileFromSharepointLibrary);
            }
            if ((this.onEndSharepoint_DeleteFileFromSharepointLibraryDelegate == null)) {
                this.onEndSharepoint_DeleteFileFromSharepointLibraryDelegate = new EndOperationDelegate(this.OnEndSharepoint_DeleteFileFromSharepointLibrary);
            }
            if ((this.onSharepoint_DeleteFileFromSharepointLibraryCompletedDelegate == null)) {
                this.onSharepoint_DeleteFileFromSharepointLibraryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSharepoint_DeleteFileFromSharepointLibraryCompleted);
            }
            base.InvokeAsync(this.onBeginSharepoint_DeleteFileFromSharepointLibraryDelegate, new object[] {
                        doc,
                        opportunityid,
                        contractnumber}, this.onEndSharepoint_DeleteFileFromSharepointLibraryDelegate, this.onSharepoint_DeleteFileFromSharepointLibraryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSharepoint_GetSalesDocumentType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSharepoint_GetSalesDocumentType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSharepoint_GetSalesDocumentType(System.IAsyncResult result) {
            return base.Channel.EndSharepoint_GetSalesDocumentType(result);
        }
        
        private System.IAsyncResult OnBeginSharepoint_GetSalesDocumentType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSharepoint_GetSalesDocumentType(callback, asyncState);
        }
        
        private object[] OnEndSharepoint_GetSalesDocumentType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSharepoint_GetSalesDocumentType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSharepoint_GetSalesDocumentTypeCompleted(object state) {
            if ((this.Sharepoint_GetSalesDocumentTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.Sharepoint_GetSalesDocumentTypeCompleted(this, new Sharepoint_GetSalesDocumentTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void Sharepoint_GetSalesDocumentTypeAsync() {
            this.Sharepoint_GetSalesDocumentTypeAsync(null);
        }
        
        public void Sharepoint_GetSalesDocumentTypeAsync(object userState) {
            if ((this.onBeginSharepoint_GetSalesDocumentTypeDelegate == null)) {
                this.onBeginSharepoint_GetSalesDocumentTypeDelegate = new BeginOperationDelegate(this.OnBeginSharepoint_GetSalesDocumentType);
            }
            if ((this.onEndSharepoint_GetSalesDocumentTypeDelegate == null)) {
                this.onEndSharepoint_GetSalesDocumentTypeDelegate = new EndOperationDelegate(this.OnEndSharepoint_GetSalesDocumentType);
            }
            if ((this.onSharepoint_GetSalesDocumentTypeCompletedDelegate == null)) {
                this.onSharepoint_GetSalesDocumentTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSharepoint_GetSalesDocumentTypeCompleted);
            }
            base.InvokeAsync(this.onBeginSharepoint_GetSalesDocumentTypeDelegate, null, this.onEndSharepoint_GetSalesDocumentTypeDelegate, this.onSharepoint_GetSalesDocumentTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSendNotificationEmail(string templateobjectid, string actionuserfullname, string recipientfullname, string contractnumber, string templateobjecttype, string emailtype, string estimatenumber, string revisionnumber, string comments, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendNotificationEmail(templateobjectid, actionuserfullname, recipientfullname, contractnumber, templateobjecttype, emailtype, estimatenumber, revisionnumber, comments, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSendNotificationEmail(System.IAsyncResult result) {
            return base.Channel.EndSendNotificationEmail(result);
        }
        
        private System.IAsyncResult OnBeginSendNotificationEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateobjectid = ((string)(inValues[0]));
            string actionuserfullname = ((string)(inValues[1]));
            string recipientfullname = ((string)(inValues[2]));
            string contractnumber = ((string)(inValues[3]));
            string templateobjecttype = ((string)(inValues[4]));
            string emailtype = ((string)(inValues[5]));
            string estimatenumber = ((string)(inValues[6]));
            string revisionnumber = ((string)(inValues[7]));
            string comments = ((string)(inValues[8]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSendNotificationEmail(templateobjectid, actionuserfullname, recipientfullname, contractnumber, templateobjecttype, emailtype, estimatenumber, revisionnumber, comments, callback, asyncState);
        }
        
        private object[] OnEndSendNotificationEmail(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSendNotificationEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendNotificationEmailCompleted(object state) {
            if ((this.SendNotificationEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendNotificationEmailCompleted(this, new SendNotificationEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendNotificationEmailAsync(string templateobjectid, string actionuserfullname, string recipientfullname, string contractnumber, string templateobjecttype, string emailtype, string estimatenumber, string revisionnumber, string comments) {
            this.SendNotificationEmailAsync(templateobjectid, actionuserfullname, recipientfullname, contractnumber, templateobjecttype, emailtype, estimatenumber, revisionnumber, comments, null);
        }
        
        public void SendNotificationEmailAsync(string templateobjectid, string actionuserfullname, string recipientfullname, string contractnumber, string templateobjecttype, string emailtype, string estimatenumber, string revisionnumber, string comments, object userState) {
            if ((this.onBeginSendNotificationEmailDelegate == null)) {
                this.onBeginSendNotificationEmailDelegate = new BeginOperationDelegate(this.OnBeginSendNotificationEmail);
            }
            if ((this.onEndSendNotificationEmailDelegate == null)) {
                this.onEndSendNotificationEmailDelegate = new EndOperationDelegate(this.OnEndSendNotificationEmail);
            }
            if ((this.onSendNotificationEmailCompletedDelegate == null)) {
                this.onSendNotificationEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendNotificationEmailCompleted);
            }
            base.InvokeAsync(this.onBeginSendNotificationEmailDelegate, new object[] {
                        templateobjectid,
                        actionuserfullname,
                        recipientfullname,
                        contractnumber,
                        templateobjecttype,
                        emailtype,
                        estimatenumber,
                        revisionnumber,
                        comments}, this.onEndSendNotificationEmailDelegate, this.onSendNotificationEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSendCrmEmail(System.Guid contractId, int recipientId, string subject, string body, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendCrmEmail(contractId, recipientId, subject, body, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSendCrmEmail(System.IAsyncResult result) {
            return base.Channel.EndSendCrmEmail(result);
        }
        
        private System.IAsyncResult OnBeginSendCrmEmail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid contractId = ((System.Guid)(inValues[0]));
            int recipientId = ((int)(inValues[1]));
            string subject = ((string)(inValues[2]));
            string body = ((string)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSendCrmEmail(contractId, recipientId, subject, body, callback, asyncState);
        }
        
        private object[] OnEndSendCrmEmail(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSendCrmEmail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendCrmEmailCompleted(object state) {
            if ((this.SendCrmEmailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendCrmEmailCompleted(this, new SendCrmEmailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendCrmEmailAsync(System.Guid contractId, int recipientId, string subject, string body) {
            this.SendCrmEmailAsync(contractId, recipientId, subject, body, null);
        }
        
        public void SendCrmEmailAsync(System.Guid contractId, int recipientId, string subject, string body, object userState) {
            if ((this.onBeginSendCrmEmailDelegate == null)) {
                this.onBeginSendCrmEmailDelegate = new BeginOperationDelegate(this.OnBeginSendCrmEmail);
            }
            if ((this.onEndSendCrmEmailDelegate == null)) {
                this.onEndSendCrmEmailDelegate = new EndOperationDelegate(this.OnEndSendCrmEmail);
            }
            if ((this.onSendCrmEmailCompletedDelegate == null)) {
                this.onSendCrmEmailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendCrmEmailCompleted);
            }
            base.InvokeAsync(this.onBeginSendCrmEmailDelegate, new object[] {
                        contractId,
                        recipientId,
                        subject,
                        body}, this.onEndSendCrmEmailDelegate, this.onSendCrmEmailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetStudioMQuestionForAProduct(string pproductid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudioMQuestionForAProduct(pproductid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetStudioMQuestionForAProduct(System.IAsyncResult result) {
            return base.Channel.EndGetStudioMQuestionForAProduct(result);
        }
        
        private System.IAsyncResult OnBeginGetStudioMQuestionForAProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string pproductid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetStudioMQuestionForAProduct(pproductid, callback, asyncState);
        }
        
        private object[] OnEndGetStudioMQuestionForAProduct(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetStudioMQuestionForAProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudioMQuestionForAProductCompleted(object state) {
            if ((this.GetStudioMQuestionForAProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudioMQuestionForAProductCompleted(this, new GetStudioMQuestionForAProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudioMQuestionForAProductAsync(string pproductid) {
            this.GetStudioMQuestionForAProductAsync(pproductid, null);
        }
        
        public void GetStudioMQuestionForAProductAsync(string pproductid, object userState) {
            if ((this.onBeginGetStudioMQuestionForAProductDelegate == null)) {
                this.onBeginGetStudioMQuestionForAProductDelegate = new BeginOperationDelegate(this.OnBeginGetStudioMQuestionForAProduct);
            }
            if ((this.onEndGetStudioMQuestionForAProductDelegate == null)) {
                this.onEndGetStudioMQuestionForAProductDelegate = new EndOperationDelegate(this.OnEndGetStudioMQuestionForAProduct);
            }
            if ((this.onGetStudioMQuestionForAProductCompletedDelegate == null)) {
                this.onGetStudioMQuestionForAProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudioMQuestionForAProductCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudioMQuestionForAProductDelegate, new object[] {
                        pproductid}, this.onEndGetStudioMQuestionForAProductDelegate, this.onGetStudioMQuestionForAProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetInLieuStandardPromotionItems(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInLieuStandardPromotionItems(estimaterevisionid, originateoptionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetInLieuStandardPromotionItems(System.IAsyncResult result) {
            return base.Channel.EndGetInLieuStandardPromotionItems(result);
        }
        
        private System.IAsyncResult OnBeginGetInLieuStandardPromotionItems(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            int originateoptionid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetInLieuStandardPromotionItems(estimaterevisionid, originateoptionid, callback, asyncState);
        }
        
        private object[] OnEndGetInLieuStandardPromotionItems(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetInLieuStandardPromotionItems(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInLieuStandardPromotionItemsCompleted(object state) {
            if ((this.GetInLieuStandardPromotionItemsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInLieuStandardPromotionItemsCompleted(this, new GetInLieuStandardPromotionItemsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInLieuStandardPromotionItemsAsync(int estimaterevisionid, int originateoptionid) {
            this.GetInLieuStandardPromotionItemsAsync(estimaterevisionid, originateoptionid, null);
        }
        
        public void GetInLieuStandardPromotionItemsAsync(int estimaterevisionid, int originateoptionid, object userState) {
            if ((this.onBeginGetInLieuStandardPromotionItemsDelegate == null)) {
                this.onBeginGetInLieuStandardPromotionItemsDelegate = new BeginOperationDelegate(this.OnBeginGetInLieuStandardPromotionItems);
            }
            if ((this.onEndGetInLieuStandardPromotionItemsDelegate == null)) {
                this.onEndGetInLieuStandardPromotionItemsDelegate = new EndOperationDelegate(this.OnEndGetInLieuStandardPromotionItems);
            }
            if ((this.onGetInLieuStandardPromotionItemsCompletedDelegate == null)) {
                this.onGetInLieuStandardPromotionItemsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInLieuStandardPromotionItemsCompleted);
            }
            base.InvokeAsync(this.onBeginGetInLieuStandardPromotionItemsDelegate, new object[] {
                        estimaterevisionid,
                        originateoptionid}, this.onEndGetInLieuStandardPromotionItemsDelegate, this.onGetInLieuStandardPromotionItemsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetRoleAccessModule(int roleid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRoleAccessModule(roleid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetRoleAccessModule(System.IAsyncResult result) {
            return base.Channel.EndGetRoleAccessModule(result);
        }
        
        private System.IAsyncResult OnBeginGetRoleAccessModule(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int roleid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetRoleAccessModule(roleid, callback, asyncState);
        }
        
        private object[] OnEndGetRoleAccessModule(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetRoleAccessModule(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoleAccessModuleCompleted(object state) {
            if ((this.GetRoleAccessModuleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoleAccessModuleCompleted(this, new GetRoleAccessModuleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoleAccessModuleAsync(int roleid) {
            this.GetRoleAccessModuleAsync(roleid, null);
        }
        
        public void GetRoleAccessModuleAsync(int roleid, object userState) {
            if ((this.onBeginGetRoleAccessModuleDelegate == null)) {
                this.onBeginGetRoleAccessModuleDelegate = new BeginOperationDelegate(this.OnBeginGetRoleAccessModule);
            }
            if ((this.onEndGetRoleAccessModuleDelegate == null)) {
                this.onEndGetRoleAccessModuleDelegate = new EndOperationDelegate(this.OnEndGetRoleAccessModule);
            }
            if ((this.onGetRoleAccessModuleCompletedDelegate == null)) {
                this.onGetRoleAccessModuleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoleAccessModuleCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoleAccessModuleDelegate, new object[] {
                        roleid}, this.onEndGetRoleAccessModuleDelegate, this.onGetRoleAccessModuleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetItemRemoveReason(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemRemoveReason(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetItemRemoveReason(System.IAsyncResult result) {
            return base.Channel.EndGetItemRemoveReason(result);
        }
        
        private System.IAsyncResult OnBeginGetItemRemoveReason(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetItemRemoveReason(callback, asyncState);
        }
        
        private object[] OnEndGetItemRemoveReason(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetItemRemoveReason(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemRemoveReasonCompleted(object state) {
            if ((this.GetItemRemoveReasonCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemRemoveReasonCompleted(this, new GetItemRemoveReasonCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemRemoveReasonAsync() {
            this.GetItemRemoveReasonAsync(null);
        }
        
        public void GetItemRemoveReasonAsync(object userState) {
            if ((this.onBeginGetItemRemoveReasonDelegate == null)) {
                this.onBeginGetItemRemoveReasonDelegate = new BeginOperationDelegate(this.OnBeginGetItemRemoveReason);
            }
            if ((this.onEndGetItemRemoveReasonDelegate == null)) {
                this.onEndGetItemRemoveReasonDelegate = new EndOperationDelegate(this.OnEndGetItemRemoveReason);
            }
            if ((this.onGetItemRemoveReasonCompletedDelegate == null)) {
                this.onGetItemRemoveReasonCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemRemoveReasonCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemRemoveReasonDelegate, null, this.onEndGetItemRemoveReasonDelegate, this.onGetItemRemoveReasonCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetItemsNeedSetDefaultAnswer(string revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetItemsNeedSetDefaultAnswer(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetItemsNeedSetDefaultAnswer(System.IAsyncResult result) {
            return base.Channel.EndGetItemsNeedSetDefaultAnswer(result);
        }
        
        private System.IAsyncResult OnBeginGetItemsNeedSetDefaultAnswer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetItemsNeedSetDefaultAnswer(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetItemsNeedSetDefaultAnswer(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetItemsNeedSetDefaultAnswer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetItemsNeedSetDefaultAnswerCompleted(object state) {
            if ((this.GetItemsNeedSetDefaultAnswerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetItemsNeedSetDefaultAnswerCompleted(this, new GetItemsNeedSetDefaultAnswerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetItemsNeedSetDefaultAnswerAsync(string revisionid) {
            this.GetItemsNeedSetDefaultAnswerAsync(revisionid, null);
        }
        
        public void GetItemsNeedSetDefaultAnswerAsync(string revisionid, object userState) {
            if ((this.onBeginGetItemsNeedSetDefaultAnswerDelegate == null)) {
                this.onBeginGetItemsNeedSetDefaultAnswerDelegate = new BeginOperationDelegate(this.OnBeginGetItemsNeedSetDefaultAnswer);
            }
            if ((this.onEndGetItemsNeedSetDefaultAnswerDelegate == null)) {
                this.onEndGetItemsNeedSetDefaultAnswerDelegate = new EndOperationDelegate(this.OnEndGetItemsNeedSetDefaultAnswer);
            }
            if ((this.onGetItemsNeedSetDefaultAnswerCompletedDelegate == null)) {
                this.onGetItemsNeedSetDefaultAnswerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetItemsNeedSetDefaultAnswerCompleted);
            }
            base.InvokeAsync(this.onBeginGetItemsNeedSetDefaultAnswerDelegate, new object[] {
                        revisionid}, this.onEndGetItemsNeedSetDefaultAnswerDelegate, this.onGetItemsNeedSetDefaultAnswerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSetDefaultAnswerForEstimateRevision(string idstring, string studiomstring, string usercode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDefaultAnswerForEstimateRevision(idstring, studiomstring, usercode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSetDefaultAnswerForEstimateRevision(System.IAsyncResult result) {
            return base.Channel.EndSetDefaultAnswerForEstimateRevision(result);
        }
        
        private System.IAsyncResult OnBeginSetDefaultAnswerForEstimateRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string idstring = ((string)(inValues[0]));
            string studiomstring = ((string)(inValues[1]));
            string usercode = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSetDefaultAnswerForEstimateRevision(idstring, studiomstring, usercode, callback, asyncState);
        }
        
        private object[] OnEndSetDefaultAnswerForEstimateRevision(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSetDefaultAnswerForEstimateRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDefaultAnswerForEstimateRevisionCompleted(object state) {
            if ((this.SetDefaultAnswerForEstimateRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDefaultAnswerForEstimateRevisionCompleted(this, new SetDefaultAnswerForEstimateRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDefaultAnswerForEstimateRevisionAsync(string idstring, string studiomstring, string usercode) {
            this.SetDefaultAnswerForEstimateRevisionAsync(idstring, studiomstring, usercode, null);
        }
        
        public void SetDefaultAnswerForEstimateRevisionAsync(string idstring, string studiomstring, string usercode, object userState) {
            if ((this.onBeginSetDefaultAnswerForEstimateRevisionDelegate == null)) {
                this.onBeginSetDefaultAnswerForEstimateRevisionDelegate = new BeginOperationDelegate(this.OnBeginSetDefaultAnswerForEstimateRevision);
            }
            if ((this.onEndSetDefaultAnswerForEstimateRevisionDelegate == null)) {
                this.onEndSetDefaultAnswerForEstimateRevisionDelegate = new EndOperationDelegate(this.OnEndSetDefaultAnswerForEstimateRevision);
            }
            if ((this.onSetDefaultAnswerForEstimateRevisionCompletedDelegate == null)) {
                this.onSetDefaultAnswerForEstimateRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDefaultAnswerForEstimateRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginSetDefaultAnswerForEstimateRevisionDelegate, new object[] {
                        idstring,
                        studiomstring,
                        usercode}, this.onEndSetDefaultAnswerForEstimateRevisionDelegate, this.onSetDefaultAnswerForEstimateRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginRegisterEvent(string action, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterEvent(action, revisionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndRegisterEvent(System.IAsyncResult result) {
            base.Channel.EndRegisterEvent(result);
        }
        
        private System.IAsyncResult OnBeginRegisterEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string action = ((string)(inValues[0]));
            int revisionid = ((int)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginRegisterEvent(action, revisionid, userid, callback, asyncState);
        }
        
        private object[] OnEndRegisterEvent(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndRegisterEvent(result);
            return null;
        }
        
        private void OnRegisterEventCompleted(object state) {
            if ((this.RegisterEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterEventAsync(string action, int revisionid, int userid) {
            this.RegisterEventAsync(action, revisionid, userid, null);
        }
        
        public void RegisterEventAsync(string action, int revisionid, int userid, object userState) {
            if ((this.onBeginRegisterEventDelegate == null)) {
                this.onBeginRegisterEventDelegate = new BeginOperationDelegate(this.OnBeginRegisterEvent);
            }
            if ((this.onEndRegisterEventDelegate == null)) {
                this.onEndRegisterEventDelegate = new EndOperationDelegate(this.OnEndRegisterEvent);
            }
            if ((this.onRegisterEventCompletedDelegate == null)) {
                this.onRegisterEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterEventCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterEventDelegate, new object[] {
                        action,
                        revisionid,
                        userid}, this.onEndRegisterEventDelegate, this.onRegisterEventCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetStudioMAppointmentTime(string contractNumber, string eventNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStudioMAppointmentTime(contractNumber, eventNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.DateTime Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetStudioMAppointmentTime(System.IAsyncResult result) {
            return base.Channel.EndGetStudioMAppointmentTime(result);
        }
        
        private System.IAsyncResult OnBeginGetStudioMAppointmentTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string contractNumber = ((string)(inValues[0]));
            string eventNumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetStudioMAppointmentTime(contractNumber, eventNumber, callback, asyncState);
        }
        
        private object[] OnEndGetStudioMAppointmentTime(System.IAsyncResult result) {
            System.DateTime retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetStudioMAppointmentTime(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStudioMAppointmentTimeCompleted(object state) {
            if ((this.GetStudioMAppointmentTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStudioMAppointmentTimeCompleted(this, new GetStudioMAppointmentTimeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStudioMAppointmentTimeAsync(string contractNumber, string eventNumber) {
            this.GetStudioMAppointmentTimeAsync(contractNumber, eventNumber, null);
        }
        
        public void GetStudioMAppointmentTimeAsync(string contractNumber, string eventNumber, object userState) {
            if ((this.onBeginGetStudioMAppointmentTimeDelegate == null)) {
                this.onBeginGetStudioMAppointmentTimeDelegate = new BeginOperationDelegate(this.OnBeginGetStudioMAppointmentTime);
            }
            if ((this.onEndGetStudioMAppointmentTimeDelegate == null)) {
                this.onEndGetStudioMAppointmentTimeDelegate = new EndOperationDelegate(this.OnEndGetStudioMAppointmentTime);
            }
            if ((this.onGetStudioMAppointmentTimeCompletedDelegate == null)) {
                this.onGetStudioMAppointmentTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStudioMAppointmentTimeCompleted);
            }
            base.InvokeAsync(this.onBeginGetStudioMAppointmentTimeDelegate, new object[] {
                        contractNumber,
                        eventNumber}, this.onEndGetStudioMAppointmentTimeDelegate, this.onGetStudioMAppointmentTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateDetailsDescription(System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateDetailsDescription(items, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateDetailsDescription(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateDetailsDescription(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateDetailsDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateDetailsDescription(items, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateDetailsDescription(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateDetailsDescription(result);
            return null;
        }
        
        private void OnUpdateEstimateDetailsDescriptionCompleted(object state) {
            if ((this.UpdateEstimateDetailsDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateDetailsDescriptionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateDetailsDescriptionAsync(System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items, int userId) {
            this.UpdateEstimateDetailsDescriptionAsync(items, userId, null);
        }
        
        public void UpdateEstimateDetailsDescriptionAsync(System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items, int userId, object userState) {
            if ((this.onBeginUpdateEstimateDetailsDescriptionDelegate == null)) {
                this.onBeginUpdateEstimateDetailsDescriptionDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateDetailsDescription);
            }
            if ((this.onEndUpdateEstimateDetailsDescriptionDelegate == null)) {
                this.onEndUpdateEstimateDetailsDescriptionDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateDetailsDescription);
            }
            if ((this.onUpdateEstimateDetailsDescriptionCompletedDelegate == null)) {
                this.onUpdateEstimateDetailsDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateDetailsDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateDetailsDescriptionDelegate, new object[] {
                        items,
                        userId}, this.onEndUpdateEstimateDetailsDescriptionDelegate, this.onUpdateEstimateDetailsDescriptionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginMoveEstimateDetailItem(int revisionDetailsIdSource, int revisionDetailsIdTarget, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveEstimateDetailItem(revisionDetailsIdSource, revisionDetailsIdTarget, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndMoveEstimateDetailItem(System.IAsyncResult result) {
            return base.Channel.EndMoveEstimateDetailItem(result);
        }
        
        private System.IAsyncResult OnBeginMoveEstimateDetailItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionDetailsIdSource = ((int)(inValues[0]));
            int revisionDetailsIdTarget = ((int)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginMoveEstimateDetailItem(revisionDetailsIdSource, revisionDetailsIdTarget, userId, callback, asyncState);
        }
        
        private object[] OnEndMoveEstimateDetailItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndMoveEstimateDetailItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveEstimateDetailItemCompleted(object state) {
            if ((this.MoveEstimateDetailItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveEstimateDetailItemCompleted(this, new MoveEstimateDetailItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveEstimateDetailItemAsync(int revisionDetailsIdSource, int revisionDetailsIdTarget, int userId) {
            this.MoveEstimateDetailItemAsync(revisionDetailsIdSource, revisionDetailsIdTarget, userId, null);
        }
        
        public void MoveEstimateDetailItemAsync(int revisionDetailsIdSource, int revisionDetailsIdTarget, int userId, object userState) {
            if ((this.onBeginMoveEstimateDetailItemDelegate == null)) {
                this.onBeginMoveEstimateDetailItemDelegate = new BeginOperationDelegate(this.OnBeginMoveEstimateDetailItem);
            }
            if ((this.onEndMoveEstimateDetailItemDelegate == null)) {
                this.onEndMoveEstimateDetailItemDelegate = new EndOperationDelegate(this.OnEndMoveEstimateDetailItem);
            }
            if ((this.onMoveEstimateDetailItemCompletedDelegate == null)) {
                this.onMoveEstimateDetailItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveEstimateDetailItemCompleted);
            }
            base.InvokeAsync(this.onBeginMoveEstimateDetailItemDelegate, new object[] {
                        revisionDetailsIdSource,
                        revisionDetailsIdTarget,
                        userId}, this.onEndMoveEstimateDetailItemDelegate, this.onMoveEstimateDetailItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_GetDocumentInfo(string revisionid, string estimateid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_GetDocumentInfo(revisionid, estimateid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_GetDocumentInfo(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_GetDocumentInfo(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_GetDocumentInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            string estimateid = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_GetDocumentInfo(revisionid, estimateid, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_GetDocumentInfo(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_GetDocumentInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_GetDocumentInfoCompleted(object state) {
            if ((this.DocuSign_GetDocumentInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_GetDocumentInfoCompleted(this, new DocuSign_GetDocumentInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_GetDocumentInfoAsync(string revisionid, string estimateid) {
            this.DocuSign_GetDocumentInfoAsync(revisionid, estimateid, null);
        }
        
        public void DocuSign_GetDocumentInfoAsync(string revisionid, string estimateid, object userState) {
            if ((this.onBeginDocuSign_GetDocumentInfoDelegate == null)) {
                this.onBeginDocuSign_GetDocumentInfoDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_GetDocumentInfo);
            }
            if ((this.onEndDocuSign_GetDocumentInfoDelegate == null)) {
                this.onEndDocuSign_GetDocumentInfoDelegate = new EndOperationDelegate(this.OnEndDocuSign_GetDocumentInfo);
            }
            if ((this.onDocuSign_GetDocumentInfoCompletedDelegate == null)) {
                this.onDocuSign_GetDocumentInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_GetDocumentInfoCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_GetDocumentInfoDelegate, new object[] {
                        revisionid,
                        estimateid}, this.onEndDocuSign_GetDocumentInfoDelegate, this.onDocuSign_GetDocumentInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_PushDocumentToTheProcessQueue(string revisionid, string printtype, string documenttype, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_PushDocumentToTheProcessQueue(revisionid, printtype, documenttype, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_PushDocumentToTheProcessQueue(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_PushDocumentToTheProcessQueue(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_PushDocumentToTheProcessQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            string printtype = ((string)(inValues[1]));
            string documenttype = ((string)(inValues[2]));
            int userid = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_PushDocumentToTheProcessQueue(revisionid, printtype, documenttype, userid, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_PushDocumentToTheProcessQueue(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_PushDocumentToTheProcessQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_PushDocumentToTheProcessQueueCompleted(object state) {
            if ((this.DocuSign_PushDocumentToTheProcessQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_PushDocumentToTheProcessQueueCompleted(this, new DocuSign_PushDocumentToTheProcessQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_PushDocumentToTheProcessQueueAsync(string revisionid, string printtype, string documenttype, int userid) {
            this.DocuSign_PushDocumentToTheProcessQueueAsync(revisionid, printtype, documenttype, userid, null);
        }
        
        public void DocuSign_PushDocumentToTheProcessQueueAsync(string revisionid, string printtype, string documenttype, int userid, object userState) {
            if ((this.onBeginDocuSign_PushDocumentToTheProcessQueueDelegate == null)) {
                this.onBeginDocuSign_PushDocumentToTheProcessQueueDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_PushDocumentToTheProcessQueue);
            }
            if ((this.onEndDocuSign_PushDocumentToTheProcessQueueDelegate == null)) {
                this.onEndDocuSign_PushDocumentToTheProcessQueueDelegate = new EndOperationDelegate(this.OnEndDocuSign_PushDocumentToTheProcessQueue);
            }
            if ((this.onDocuSign_PushDocumentToTheProcessQueueCompletedDelegate == null)) {
                this.onDocuSign_PushDocumentToTheProcessQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_PushDocumentToTheProcessQueueCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_PushDocumentToTheProcessQueueDelegate, new object[] {
                        revisionid,
                        printtype,
                        documenttype,
                        userid}, this.onEndDocuSign_PushDocumentToTheProcessQueueDelegate, this.onDocuSign_PushDocumentToTheProcessQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPromotionProductByMasterPromotionRevisionDetailsID(revisiondetailsid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
            return base.Channel.EndGetPromotionProductByMasterPromotionRevisionDetailsID(result);
        }
        
        private System.IAsyncResult OnBeginGetPromotionProductByMasterPromotionRevisionDetailsID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisiondetailsid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetPromotionProductByMasterPromotionRevisionDetailsID(revisiondetailsid, callback, asyncState);
        }
        
        private object[] OnEndGetPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetPromotionProductByMasterPromotionRevisionDetailsID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPromotionProductByMasterPromotionRevisionDetailsIDCompleted(object state) {
            if ((this.GetPromotionProductByMasterPromotionRevisionDetailsIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPromotionProductByMasterPromotionRevisionDetailsIDCompleted(this, new GetPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPromotionProductByMasterPromotionRevisionDetailsIDAsync(string revisiondetailsid) {
            this.GetPromotionProductByMasterPromotionRevisionDetailsIDAsync(revisiondetailsid, null);
        }
        
        public void GetPromotionProductByMasterPromotionRevisionDetailsIDAsync(string revisiondetailsid, object userState) {
            if ((this.onBeginGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate == null)) {
                this.onBeginGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate = new BeginOperationDelegate(this.OnBeginGetPromotionProductByMasterPromotionRevisionDetailsID);
            }
            if ((this.onEndGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate == null)) {
                this.onEndGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate = new EndOperationDelegate(this.OnEndGetPromotionProductByMasterPromotionRevisionDetailsID);
            }
            if ((this.onGetPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate == null)) {
                this.onGetPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPromotionProductByMasterPromotionRevisionDetailsIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate, new object[] {
                        revisiondetailsid}, this.onEndGetPromotionProductByMasterPromotionRevisionDetailsIDDelegate, this.onGetPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(revisiondetailsid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
            return base.Channel.EndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(result);
        }
        
        private System.IAsyncResult OnBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisiondetailsid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(revisiondetailsid, callback, asyncState);
        }
        
        private object[] OnEndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompleted(object state) {
            if ((this.GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompleted(this, new GetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetExistingPromotionProductByMasterPromotionRevisionDetailsIDAsync(string revisiondetailsid) {
            this.GetExistingPromotionProductByMasterPromotionRevisionDetailsIDAsync(revisiondetailsid, null);
        }
        
        public void GetExistingPromotionProductByMasterPromotionRevisionDetailsIDAsync(string revisiondetailsid, object userState) {
            if ((this.onBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate == null)) {
                this.onBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate = new BeginOperationDelegate(this.OnBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID);
            }
            if ((this.onEndGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate == null)) {
                this.onEndGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate = new EndOperationDelegate(this.OnEndGetExistingPromotionProductByMasterPromotionRevisionDetailsID);
            }
            if ((this.onGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate == null)) {
                this.onGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompleted);
            }
            base.InvokeAsync(this.onBeginGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate, new object[] {
                        revisiondetailsid}, this.onEndGetExistingPromotionProductByMasterPromotionRevisionDetailsIDDelegate, this.onGetExistingPromotionProductByMasterPromotionRevisionDetailsIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateDetailsByIDString(string selectedrevisiondetailsid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateDetailsByIDString(selectedrevisiondetailsid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateDetailsByIDString(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateDetailsByIDString(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateDetailsByIDString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string selectedrevisiondetailsid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateDetailsByIDString(selectedrevisiondetailsid, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateDetailsByIDString(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateDetailsByIDString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateDetailsByIDStringCompleted(object state) {
            if ((this.GetEstimateDetailsByIDStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateDetailsByIDStringCompleted(this, new GetEstimateDetailsByIDStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateDetailsByIDStringAsync(string selectedrevisiondetailsid) {
            this.GetEstimateDetailsByIDStringAsync(selectedrevisiondetailsid, null);
        }
        
        public void GetEstimateDetailsByIDStringAsync(string selectedrevisiondetailsid, object userState) {
            if ((this.onBeginGetEstimateDetailsByIDStringDelegate == null)) {
                this.onBeginGetEstimateDetailsByIDStringDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateDetailsByIDString);
            }
            if ((this.onEndGetEstimateDetailsByIDStringDelegate == null)) {
                this.onEndGetEstimateDetailsByIDStringDelegate = new EndOperationDelegate(this.OnEndGetEstimateDetailsByIDString);
            }
            if ((this.onGetEstimateDetailsByIDStringCompletedDelegate == null)) {
                this.onGetEstimateDetailsByIDStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateDetailsByIDStringCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateDetailsByIDStringDelegate, new object[] {
                        selectedrevisiondetailsid}, this.onEndGetEstimateDetailsByIDStringDelegate, this.onGetEstimateDetailsByIDStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDeleteMasterPromotionItem(string masterpromotionitemid, string selectedpromotionitemids, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteMasterPromotionItem(masterpromotionitemid, selectedpromotionitemids, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDeleteMasterPromotionItem(System.IAsyncResult result) {
            return base.Channel.EndDeleteMasterPromotionItem(result);
        }
        
        private System.IAsyncResult OnBeginDeleteMasterPromotionItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string masterpromotionitemid = ((string)(inValues[0]));
            string selectedpromotionitemids = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDeleteMasterPromotionItem(masterpromotionitemid, selectedpromotionitemids, userid, callback, asyncState);
        }
        
        private object[] OnEndDeleteMasterPromotionItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDeleteMasterPromotionItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteMasterPromotionItemCompleted(object state) {
            if ((this.DeleteMasterPromotionItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteMasterPromotionItemCompleted(this, new DeleteMasterPromotionItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteMasterPromotionItemAsync(string masterpromotionitemid, string selectedpromotionitemids, int userid) {
            this.DeleteMasterPromotionItemAsync(masterpromotionitemid, selectedpromotionitemids, userid, null);
        }
        
        public void DeleteMasterPromotionItemAsync(string masterpromotionitemid, string selectedpromotionitemids, int userid, object userState) {
            if ((this.onBeginDeleteMasterPromotionItemDelegate == null)) {
                this.onBeginDeleteMasterPromotionItemDelegate = new BeginOperationDelegate(this.OnBeginDeleteMasterPromotionItem);
            }
            if ((this.onEndDeleteMasterPromotionItemDelegate == null)) {
                this.onEndDeleteMasterPromotionItemDelegate = new EndOperationDelegate(this.OnEndDeleteMasterPromotionItem);
            }
            if ((this.onDeleteMasterPromotionItemCompletedDelegate == null)) {
                this.onDeleteMasterPromotionItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteMasterPromotionItemCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteMasterPromotionItemDelegate, new object[] {
                        masterpromotionitemid,
                        selectedpromotionitemids,
                        userid}, this.onEndDeleteMasterPromotionItemDelegate, this.onDeleteMasterPromotionItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_RemoveDocumentFromTheProcessQueue(string integrationid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_RemoveDocumentFromTheProcessQueue(integrationid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_RemoveDocumentFromTheProcessQueue(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_RemoveDocumentFromTheProcessQueue(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_RemoveDocumentFromTheProcessQueue(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string integrationid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_RemoveDocumentFromTheProcessQueue(integrationid, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_RemoveDocumentFromTheProcessQueue(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_RemoveDocumentFromTheProcessQueue(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_RemoveDocumentFromTheProcessQueueCompleted(object state) {
            if ((this.DocuSign_RemoveDocumentFromTheProcessQueueCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_RemoveDocumentFromTheProcessQueueCompleted(this, new DocuSign_RemoveDocumentFromTheProcessQueueCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_RemoveDocumentFromTheProcessQueueAsync(string integrationid) {
            this.DocuSign_RemoveDocumentFromTheProcessQueueAsync(integrationid, null);
        }
        
        public void DocuSign_RemoveDocumentFromTheProcessQueueAsync(string integrationid, object userState) {
            if ((this.onBeginDocuSign_RemoveDocumentFromTheProcessQueueDelegate == null)) {
                this.onBeginDocuSign_RemoveDocumentFromTheProcessQueueDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_RemoveDocumentFromTheProcessQueue);
            }
            if ((this.onEndDocuSign_RemoveDocumentFromTheProcessQueueDelegate == null)) {
                this.onEndDocuSign_RemoveDocumentFromTheProcessQueueDelegate = new EndOperationDelegate(this.OnEndDocuSign_RemoveDocumentFromTheProcessQueue);
            }
            if ((this.onDocuSign_RemoveDocumentFromTheProcessQueueCompletedDelegate == null)) {
                this.onDocuSign_RemoveDocumentFromTheProcessQueueCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_RemoveDocumentFromTheProcessQueueCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_RemoveDocumentFromTheProcessQueueDelegate, new object[] {
                        integrationid}, this.onEndDocuSign_RemoveDocumentFromTheProcessQueueDelegate, this.onDocuSign_RemoveDocumentFromTheProcessQueueCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCRMContactForAccountAsSigner(System.Guid accountid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCRMContactForAccountAsSigner(accountid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCRMContactForAccountAsSigner(System.IAsyncResult result) {
            return base.Channel.EndGetCRMContactForAccountAsSigner(result);
        }
        
        private System.IAsyncResult OnBeginGetCRMContactForAccountAsSigner(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Guid accountid = ((System.Guid)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCRMContactForAccountAsSigner(accountid, callback, asyncState);
        }
        
        private object[] OnEndGetCRMContactForAccountAsSigner(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCRMContactForAccountAsSigner(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCRMContactForAccountAsSignerCompleted(object state) {
            if ((this.GetCRMContactForAccountAsSignerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCRMContactForAccountAsSignerCompleted(this, new GetCRMContactForAccountAsSignerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCRMContactForAccountAsSignerAsync(System.Guid accountid) {
            this.GetCRMContactForAccountAsSignerAsync(accountid, null);
        }
        
        public void GetCRMContactForAccountAsSignerAsync(System.Guid accountid, object userState) {
            if ((this.onBeginGetCRMContactForAccountAsSignerDelegate == null)) {
                this.onBeginGetCRMContactForAccountAsSignerDelegate = new BeginOperationDelegate(this.OnBeginGetCRMContactForAccountAsSigner);
            }
            if ((this.onEndGetCRMContactForAccountAsSignerDelegate == null)) {
                this.onEndGetCRMContactForAccountAsSignerDelegate = new EndOperationDelegate(this.OnEndGetCRMContactForAccountAsSigner);
            }
            if ((this.onGetCRMContactForAccountAsSignerCompletedDelegate == null)) {
                this.onGetCRMContactForAccountAsSignerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCRMContactForAccountAsSignerCompleted);
            }
            base.InvokeAsync(this.onBeginGetCRMContactForAccountAsSignerDelegate, new object[] {
                        accountid}, this.onEndGetCRMContactForAccountAsSignerDelegate, this.onGetCRMContactForAccountAsSignerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_GetEnvelopeHistory(string envelopeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_GetEnvelopeHistory(envelopeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_GetEnvelopeHistory(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_GetEnvelopeHistory(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_GetEnvelopeHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string envelopeid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_GetEnvelopeHistory(envelopeid, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_GetEnvelopeHistory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_GetEnvelopeHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_GetEnvelopeHistoryCompleted(object state) {
            if ((this.DocuSign_GetEnvelopeHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_GetEnvelopeHistoryCompleted(this, new DocuSign_GetEnvelopeHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_GetEnvelopeHistoryAsync(string envelopeid) {
            this.DocuSign_GetEnvelopeHistoryAsync(envelopeid, null);
        }
        
        public void DocuSign_GetEnvelopeHistoryAsync(string envelopeid, object userState) {
            if ((this.onBeginDocuSign_GetEnvelopeHistoryDelegate == null)) {
                this.onBeginDocuSign_GetEnvelopeHistoryDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_GetEnvelopeHistory);
            }
            if ((this.onEndDocuSign_GetEnvelopeHistoryDelegate == null)) {
                this.onEndDocuSign_GetEnvelopeHistoryDelegate = new EndOperationDelegate(this.OnEndDocuSign_GetEnvelopeHistory);
            }
            if ((this.onDocuSign_GetEnvelopeHistoryCompletedDelegate == null)) {
                this.onDocuSign_GetEnvelopeHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_GetEnvelopeHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_GetEnvelopeHistoryDelegate, new object[] {
                        envelopeid}, this.onEndDocuSign_GetEnvelopeHistoryDelegate, this.onDocuSign_GetEnvelopeHistoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_GetEnvelopeHistoryByRevision(string revisionid, string versiontype, string printtype, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_GetEnvelopeHistoryByRevision(revisionid, versiontype, printtype, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_GetEnvelopeHistoryByRevision(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_GetEnvelopeHistoryByRevision(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_GetEnvelopeHistoryByRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            string versiontype = ((string)(inValues[1]));
            string printtype = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_GetEnvelopeHistoryByRevision(revisionid, versiontype, printtype, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_GetEnvelopeHistoryByRevision(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_GetEnvelopeHistoryByRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_GetEnvelopeHistoryByRevisionCompleted(object state) {
            if ((this.DocuSign_GetEnvelopeHistoryByRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_GetEnvelopeHistoryByRevisionCompleted(this, new DocuSign_GetEnvelopeHistoryByRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_GetEnvelopeHistoryByRevisionAsync(string revisionid, string versiontype, string printtype) {
            this.DocuSign_GetEnvelopeHistoryByRevisionAsync(revisionid, versiontype, printtype, null);
        }
        
        public void DocuSign_GetEnvelopeHistoryByRevisionAsync(string revisionid, string versiontype, string printtype, object userState) {
            if ((this.onBeginDocuSign_GetEnvelopeHistoryByRevisionDelegate == null)) {
                this.onBeginDocuSign_GetEnvelopeHistoryByRevisionDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_GetEnvelopeHistoryByRevision);
            }
            if ((this.onEndDocuSign_GetEnvelopeHistoryByRevisionDelegate == null)) {
                this.onEndDocuSign_GetEnvelopeHistoryByRevisionDelegate = new EndOperationDelegate(this.OnEndDocuSign_GetEnvelopeHistoryByRevision);
            }
            if ((this.onDocuSign_GetEnvelopeHistoryByRevisionCompletedDelegate == null)) {
                this.onDocuSign_GetEnvelopeHistoryByRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_GetEnvelopeHistoryByRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_GetEnvelopeHistoryByRevisionDelegate, new object[] {
                        revisionid,
                        versiontype,
                        printtype}, this.onEndDocuSign_GetEnvelopeHistoryByRevisionDelegate, this.onDocuSign_GetEnvelopeHistoryByRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDocuSign_ValidateSignerAndDocuemnt(string estimateid, string versionnumber, string recipientname, string recipienttype, string recipientaction, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDocuSign_ValidateSignerAndDocuemnt(estimateid, versionnumber, recipientname, recipienttype, recipientaction, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDocuSign_ValidateSignerAndDocuemnt(System.IAsyncResult result) {
            return base.Channel.EndDocuSign_ValidateSignerAndDocuemnt(result);
        }
        
        private System.IAsyncResult OnBeginDocuSign_ValidateSignerAndDocuemnt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string estimateid = ((string)(inValues[0]));
            string versionnumber = ((string)(inValues[1]));
            string recipientname = ((string)(inValues[2]));
            string recipienttype = ((string)(inValues[3]));
            string recipientaction = ((string)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDocuSign_ValidateSignerAndDocuemnt(estimateid, versionnumber, recipientname, recipienttype, recipientaction, callback, asyncState);
        }
        
        private object[] OnEndDocuSign_ValidateSignerAndDocuemnt(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDocuSign_ValidateSignerAndDocuemnt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDocuSign_ValidateSignerAndDocuemntCompleted(object state) {
            if ((this.DocuSign_ValidateSignerAndDocuemntCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DocuSign_ValidateSignerAndDocuemntCompleted(this, new DocuSign_ValidateSignerAndDocuemntCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DocuSign_ValidateSignerAndDocuemntAsync(string estimateid, string versionnumber, string recipientname, string recipienttype, string recipientaction) {
            this.DocuSign_ValidateSignerAndDocuemntAsync(estimateid, versionnumber, recipientname, recipienttype, recipientaction, null);
        }
        
        public void DocuSign_ValidateSignerAndDocuemntAsync(string estimateid, string versionnumber, string recipientname, string recipienttype, string recipientaction, object userState) {
            if ((this.onBeginDocuSign_ValidateSignerAndDocuemntDelegate == null)) {
                this.onBeginDocuSign_ValidateSignerAndDocuemntDelegate = new BeginOperationDelegate(this.OnBeginDocuSign_ValidateSignerAndDocuemnt);
            }
            if ((this.onEndDocuSign_ValidateSignerAndDocuemntDelegate == null)) {
                this.onEndDocuSign_ValidateSignerAndDocuemntDelegate = new EndOperationDelegate(this.OnEndDocuSign_ValidateSignerAndDocuemnt);
            }
            if ((this.onDocuSign_ValidateSignerAndDocuemntCompletedDelegate == null)) {
                this.onDocuSign_ValidateSignerAndDocuemntCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDocuSign_ValidateSignerAndDocuemntCompleted);
            }
            base.InvokeAsync(this.onBeginDocuSign_ValidateSignerAndDocuemntDelegate, new object[] {
                        estimateid,
                        versionnumber,
                        recipientname,
                        recipienttype,
                        recipientaction}, this.onEndDocuSign_ValidateSignerAndDocuemntDelegate, this.onDocuSign_ValidateSignerAndDocuemntCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSearchSpecificJob(string customernumber, string contractnumber, string SelectedSalesConsultantId, string LotNumber, string StreetName, string Suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchSpecificJob(customernumber, contractnumber, SelectedSalesConsultantId, LotNumber, StreetName, Suburb, businessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSearchSpecificJob(System.IAsyncResult result) {
            return base.Channel.EndSearchSpecificJob(result);
        }
        
        private System.IAsyncResult OnBeginSearchSpecificJob(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string customernumber = ((string)(inValues[0]));
            string contractnumber = ((string)(inValues[1]));
            string SelectedSalesConsultantId = ((string)(inValues[2]));
            string LotNumber = ((string)(inValues[3]));
            string StreetName = ((string)(inValues[4]));
            string Suburb = ((string)(inValues[5]));
            string businessUnit = ((string)(inValues[6]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSearchSpecificJob(customernumber, contractnumber, SelectedSalesConsultantId, LotNumber, StreetName, Suburb, businessUnit, callback, asyncState);
        }
        
        private object[] OnEndSearchSpecificJob(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSearchSpecificJob(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchSpecificJobCompleted(object state) {
            if ((this.SearchSpecificJobCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchSpecificJobCompleted(this, new SearchSpecificJobCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchSpecificJobAsync(string customernumber, string contractnumber, string SelectedSalesConsultantId, string LotNumber, string StreetName, string Suburb, string businessUnit) {
            this.SearchSpecificJobAsync(customernumber, contractnumber, SelectedSalesConsultantId, LotNumber, StreetName, Suburb, businessUnit, null);
        }
        
        public void SearchSpecificJobAsync(string customernumber, string contractnumber, string SelectedSalesConsultantId, string LotNumber, string StreetName, string Suburb, string businessUnit, object userState) {
            if ((this.onBeginSearchSpecificJobDelegate == null)) {
                this.onBeginSearchSpecificJobDelegate = new BeginOperationDelegate(this.OnBeginSearchSpecificJob);
            }
            if ((this.onEndSearchSpecificJobDelegate == null)) {
                this.onEndSearchSpecificJobDelegate = new EndOperationDelegate(this.OnEndSearchSpecificJob);
            }
            if ((this.onSearchSpecificJobCompletedDelegate == null)) {
                this.onSearchSpecificJobCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchSpecificJobCompleted);
            }
            base.InvokeAsync(this.onBeginSearchSpecificJobDelegate, new object[] {
                        customernumber,
                        contractnumber,
                        SelectedSalesConsultantId,
                        LotNumber,
                        StreetName,
                        Suburb,
                        businessUnit}, this.onEndSearchSpecificJobDelegate, this.onSearchSpecificJobCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginResetEditEstimateUserID(int estimateRevisionId, int editEstimateUserID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginResetEditEstimateUserID(estimateRevisionId, editEstimateUserID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndResetEditEstimateUserID(System.IAsyncResult result) {
            return base.Channel.EndResetEditEstimateUserID(result);
        }
        
        private System.IAsyncResult OnBeginResetEditEstimateUserID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int editEstimateUserID = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginResetEditEstimateUserID(estimateRevisionId, editEstimateUserID, callback, asyncState);
        }
        
        private object[] OnEndResetEditEstimateUserID(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndResetEditEstimateUserID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnResetEditEstimateUserIDCompleted(object state) {
            if ((this.ResetEditEstimateUserIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ResetEditEstimateUserIDCompleted(this, new ResetEditEstimateUserIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ResetEditEstimateUserIDAsync(int estimateRevisionId, int editEstimateUserID) {
            this.ResetEditEstimateUserIDAsync(estimateRevisionId, editEstimateUserID, null);
        }
        
        public void ResetEditEstimateUserIDAsync(int estimateRevisionId, int editEstimateUserID, object userState) {
            if ((this.onBeginResetEditEstimateUserIDDelegate == null)) {
                this.onBeginResetEditEstimateUserIDDelegate = new BeginOperationDelegate(this.OnBeginResetEditEstimateUserID);
            }
            if ((this.onEndResetEditEstimateUserIDDelegate == null)) {
                this.onEndResetEditEstimateUserIDDelegate = new EndOperationDelegate(this.OnEndResetEditEstimateUserID);
            }
            if ((this.onResetEditEstimateUserIDCompletedDelegate == null)) {
                this.onResetEditEstimateUserIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnResetEditEstimateUserIDCompleted);
            }
            base.InvokeAsync(this.onBeginResetEditEstimateUserIDDelegate, new object[] {
                        estimateRevisionId,
                        editEstimateUserID}, this.onEndResetEditEstimateUserIDDelegate, this.onResetEditEstimateUserIDCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginApplyRounding(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginApplyRounding(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndApplyRounding(System.IAsyncResult result) {
            return base.Channel.EndApplyRounding(result);
        }
        
        private System.IAsyncResult OnBeginApplyRounding(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginApplyRounding(revisionid, callback, asyncState);
        }
        
        private object[] OnEndApplyRounding(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndApplyRounding(result);
            return new object[] {
                    retVal};
        }
        
        private void OnApplyRoundingCompleted(object state) {
            if ((this.ApplyRoundingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ApplyRoundingCompleted(this, new ApplyRoundingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ApplyRoundingAsync(int revisionid) {
            this.ApplyRoundingAsync(revisionid, null);
        }
        
        public void ApplyRoundingAsync(int revisionid, object userState) {
            if ((this.onBeginApplyRoundingDelegate == null)) {
                this.onBeginApplyRoundingDelegate = new BeginOperationDelegate(this.OnBeginApplyRounding);
            }
            if ((this.onEndApplyRoundingDelegate == null)) {
                this.onEndApplyRoundingDelegate = new EndOperationDelegate(this.OnEndApplyRounding);
            }
            if ((this.onApplyRoundingCompletedDelegate == null)) {
                this.onApplyRoundingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnApplyRoundingCompleted);
            }
            base.InvokeAsync(this.onBeginApplyRoundingDelegate, new object[] {
                        revisionid}, this.onEndApplyRoundingDelegate, this.onApplyRoundingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateDisclaimerUpdateDetails(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateDisclaimerUpdateDetails(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateDisclaimerUpdateDetails(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateDisclaimerUpdateDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateDisclaimerUpdateDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateDisclaimerUpdateDetails(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateDisclaimerUpdateDetails(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateDisclaimerUpdateDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateDisclaimerUpdateDetailsCompleted(object state) {
            if ((this.GetEstimateDisclaimerUpdateDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateDisclaimerUpdateDetailsCompleted(this, new GetEstimateDisclaimerUpdateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateDisclaimerUpdateDetailsAsync(int revisionid) {
            this.GetEstimateDisclaimerUpdateDetailsAsync(revisionid, null);
        }
        
        public void GetEstimateDisclaimerUpdateDetailsAsync(int revisionid, object userState) {
            if ((this.onBeginGetEstimateDisclaimerUpdateDetailsDelegate == null)) {
                this.onBeginGetEstimateDisclaimerUpdateDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateDisclaimerUpdateDetails);
            }
            if ((this.onEndGetEstimateDisclaimerUpdateDetailsDelegate == null)) {
                this.onEndGetEstimateDisclaimerUpdateDetailsDelegate = new EndOperationDelegate(this.OnEndGetEstimateDisclaimerUpdateDetails);
            }
            if ((this.onGetEstimateDisclaimerUpdateDetailsCompletedDelegate == null)) {
                this.onGetEstimateDisclaimerUpdateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateDisclaimerUpdateDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateDisclaimerUpdateDetailsDelegate, new object[] {
                        revisionid}, this.onEndGetEstimateDisclaimerUpdateDetailsDelegate, this.onGetEstimateDisclaimerUpdateDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSaveDisclaimerUpdateDetails(int revisionId, int typeId, int disclaimerNewId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveDisclaimerUpdateDetails(revisionId, typeId, disclaimerNewId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSaveDisclaimerUpdateDetails(System.IAsyncResult result) {
            return base.Channel.EndSaveDisclaimerUpdateDetails(result);
        }
        
        private System.IAsyncResult OnBeginSaveDisclaimerUpdateDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            int typeId = ((int)(inValues[1]));
            int disclaimerNewId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSaveDisclaimerUpdateDetails(revisionId, typeId, disclaimerNewId, userId, callback, asyncState);
        }
        
        private object[] OnEndSaveDisclaimerUpdateDetails(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSaveDisclaimerUpdateDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveDisclaimerUpdateDetailsCompleted(object state) {
            if ((this.SaveDisclaimerUpdateDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDisclaimerUpdateDetailsCompleted(this, new SaveDisclaimerUpdateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDisclaimerUpdateDetailsAsync(int revisionId, int typeId, int disclaimerNewId, int userId) {
            this.SaveDisclaimerUpdateDetailsAsync(revisionId, typeId, disclaimerNewId, userId, null);
        }
        
        public void SaveDisclaimerUpdateDetailsAsync(int revisionId, int typeId, int disclaimerNewId, int userId, object userState) {
            if ((this.onBeginSaveDisclaimerUpdateDetailsDelegate == null)) {
                this.onBeginSaveDisclaimerUpdateDetailsDelegate = new BeginOperationDelegate(this.OnBeginSaveDisclaimerUpdateDetails);
            }
            if ((this.onEndSaveDisclaimerUpdateDetailsDelegate == null)) {
                this.onEndSaveDisclaimerUpdateDetailsDelegate = new EndOperationDelegate(this.OnEndSaveDisclaimerUpdateDetails);
            }
            if ((this.onSaveDisclaimerUpdateDetailsCompletedDelegate == null)) {
                this.onSaveDisclaimerUpdateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDisclaimerUpdateDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDisclaimerUpdateDetailsDelegate, new object[] {
                        revisionId,
                        typeId,
                        disclaimerNewId,
                        userId}, this.onEndSaveDisclaimerUpdateDetailsDelegate, this.onSaveDisclaimerUpdateDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetBusinessUnits(int regionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBusinessUnits(regionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetBusinessUnits(System.IAsyncResult result) {
            return base.Channel.EndGetBusinessUnits(result);
        }
        
        private System.IAsyncResult OnBeginGetBusinessUnits(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int regionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetBusinessUnits(regionid, callback, asyncState);
        }
        
        private object[] OnEndGetBusinessUnits(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetBusinessUnits(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBusinessUnitsCompleted(object state) {
            if ((this.GetBusinessUnitsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBusinessUnitsCompleted(this, new GetBusinessUnitsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBusinessUnitsAsync(int regionid) {
            this.GetBusinessUnitsAsync(regionid, null);
        }
        
        public void GetBusinessUnitsAsync(int regionid, object userState) {
            if ((this.onBeginGetBusinessUnitsDelegate == null)) {
                this.onBeginGetBusinessUnitsDelegate = new BeginOperationDelegate(this.OnBeginGetBusinessUnits);
            }
            if ((this.onEndGetBusinessUnitsDelegate == null)) {
                this.onEndGetBusinessUnitsDelegate = new EndOperationDelegate(this.OnEndGetBusinessUnits);
            }
            if ((this.onGetBusinessUnitsCompletedDelegate == null)) {
                this.onGetBusinessUnitsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBusinessUnitsCompleted);
            }
            base.InvokeAsync(this.onBeginGetBusinessUnitsDelegate, new object[] {
                        regionid}, this.onEndGetBusinessUnitsDelegate, this.onGetBusinessUnitsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetBCForecastDate(string bcContractNumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBCForecastDate(bcContractNumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetBCForecastDate(System.IAsyncResult result) {
            return base.Channel.EndGetBCForecastDate(result);
        }
        
        private System.IAsyncResult OnBeginGetBCForecastDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string bcContractNumber = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetBCForecastDate(bcContractNumber, callback, asyncState);
        }
        
        private object[] OnEndGetBCForecastDate(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetBCForecastDate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBCForecastDateCompleted(object state) {
            if ((this.GetBCForecastDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBCForecastDateCompleted(this, new GetBCForecastDateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBCForecastDateAsync(string bcContractNumber) {
            this.GetBCForecastDateAsync(bcContractNumber, null);
        }
        
        public void GetBCForecastDateAsync(string bcContractNumber, object userState) {
            if ((this.onBeginGetBCForecastDateDelegate == null)) {
                this.onBeginGetBCForecastDateDelegate = new BeginOperationDelegate(this.OnBeginGetBCForecastDate);
            }
            if ((this.onEndGetBCForecastDateDelegate == null)) {
                this.onEndGetBCForecastDateDelegate = new EndOperationDelegate(this.OnEndGetBCForecastDate);
            }
            if ((this.onGetBCForecastDateCompletedDelegate == null)) {
                this.onGetBCForecastDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBCForecastDateCompleted);
            }
            base.InvokeAsync(this.onBeginGetBCForecastDateDelegate, new object[] {
                        bcContractNumber}, this.onEndGetBCForecastDateDelegate, this.onGetBCForecastDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAcceptOriginalEstimate(int estimateId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcceptOriginalEstimate(estimateId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAcceptOriginalEstimate(System.IAsyncResult result) {
            base.Channel.EndAcceptOriginalEstimate(result);
        }
        
        private System.IAsyncResult OnBeginAcceptOriginalEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAcceptOriginalEstimate(estimateId, userId, callback, asyncState);
        }
        
        private object[] OnEndAcceptOriginalEstimate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAcceptOriginalEstimate(result);
            return null;
        }
        
        private void OnAcceptOriginalEstimateCompleted(object state) {
            if ((this.AcceptOriginalEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcceptOriginalEstimateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcceptOriginalEstimateAsync(int estimateId, int userId) {
            this.AcceptOriginalEstimateAsync(estimateId, userId, null);
        }
        
        public void AcceptOriginalEstimateAsync(int estimateId, int userId, object userState) {
            if ((this.onBeginAcceptOriginalEstimateDelegate == null)) {
                this.onBeginAcceptOriginalEstimateDelegate = new BeginOperationDelegate(this.OnBeginAcceptOriginalEstimate);
            }
            if ((this.onEndAcceptOriginalEstimateDelegate == null)) {
                this.onEndAcceptOriginalEstimateDelegate = new EndOperationDelegate(this.OnEndAcceptOriginalEstimate);
            }
            if ((this.onAcceptOriginalEstimateCompletedDelegate == null)) {
                this.onAcceptOriginalEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcceptOriginalEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginAcceptOriginalEstimateDelegate, new object[] {
                        estimateId,
                        userId}, this.onEndAcceptOriginalEstimateDelegate, this.onAcceptOriginalEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAssignQueuedEstimate(int queueId, int userId, int ownerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssignQueuedEstimate(queueId, userId, ownerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAssignQueuedEstimate(System.IAsyncResult result) {
            return base.Channel.EndAssignQueuedEstimate(result);
        }
        
        private System.IAsyncResult OnBeginAssignQueuedEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int queueId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            int ownerId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAssignQueuedEstimate(queueId, userId, ownerId, callback, asyncState);
        }
        
        private object[] OnEndAssignQueuedEstimate(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAssignQueuedEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAssignQueuedEstimateCompleted(object state) {
            if ((this.AssignQueuedEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignQueuedEstimateCompleted(this, new AssignQueuedEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssignQueuedEstimateAsync(int queueId, int userId, int ownerId) {
            this.AssignQueuedEstimateAsync(queueId, userId, ownerId, null);
        }
        
        public void AssignQueuedEstimateAsync(int queueId, int userId, int ownerId, object userState) {
            if ((this.onBeginAssignQueuedEstimateDelegate == null)) {
                this.onBeginAssignQueuedEstimateDelegate = new BeginOperationDelegate(this.OnBeginAssignQueuedEstimate);
            }
            if ((this.onEndAssignQueuedEstimateDelegate == null)) {
                this.onEndAssignQueuedEstimateDelegate = new EndOperationDelegate(this.OnEndAssignQueuedEstimate);
            }
            if ((this.onAssignQueuedEstimateCompletedDelegate == null)) {
                this.onAssignQueuedEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignQueuedEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginAssignQueuedEstimateDelegate, new object[] {
                        queueId,
                        userId,
                        ownerId}, this.onEndAssignQueuedEstimateDelegate, this.onAssignQueuedEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAssignWorkingEstimate(int estimateRevisionId, int userId, int ownerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAssignWorkingEstimate(estimateRevisionId, userId, ownerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAssignWorkingEstimate(System.IAsyncResult result) {
            base.Channel.EndAssignWorkingEstimate(result);
        }
        
        private System.IAsyncResult OnBeginAssignWorkingEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            int ownerId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAssignWorkingEstimate(estimateRevisionId, userId, ownerId, callback, asyncState);
        }
        
        private object[] OnEndAssignWorkingEstimate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAssignWorkingEstimate(result);
            return null;
        }
        
        private void OnAssignWorkingEstimateCompleted(object state) {
            if ((this.AssignWorkingEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AssignWorkingEstimateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AssignWorkingEstimateAsync(int estimateRevisionId, int userId, int ownerId) {
            this.AssignWorkingEstimateAsync(estimateRevisionId, userId, ownerId, null);
        }
        
        public void AssignWorkingEstimateAsync(int estimateRevisionId, int userId, int ownerId, object userState) {
            if ((this.onBeginAssignWorkingEstimateDelegate == null)) {
                this.onBeginAssignWorkingEstimateDelegate = new BeginOperationDelegate(this.OnBeginAssignWorkingEstimate);
            }
            if ((this.onEndAssignWorkingEstimateDelegate == null)) {
                this.onEndAssignWorkingEstimateDelegate = new EndOperationDelegate(this.OnEndAssignWorkingEstimate);
            }
            if ((this.onAssignWorkingEstimateCompletedDelegate == null)) {
                this.onAssignWorkingEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAssignWorkingEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginAssignWorkingEstimateDelegate, new object[] {
                        estimateRevisionId,
                        userId,
                        ownerId}, this.onEndAssignWorkingEstimateDelegate, this.onAssignWorkingEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCompleteEstimate(int revisionId, int userId, int statusId, int statusReasonId, int revisionTypeId, int ownerId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompleteEstimate(revisionId, userId, statusId, statusReasonId, revisionTypeId, ownerId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCompleteEstimate(System.IAsyncResult result) {
            base.Channel.EndCompleteEstimate(result);
        }
        
        private System.IAsyncResult OnBeginCompleteEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            int statusId = ((int)(inValues[2]));
            int statusReasonId = ((int)(inValues[3]));
            int revisionTypeId = ((int)(inValues[4]));
            int ownerId = ((int)(inValues[5]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCompleteEstimate(revisionId, userId, statusId, statusReasonId, revisionTypeId, ownerId, callback, asyncState);
        }
        
        private object[] OnEndCompleteEstimate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCompleteEstimate(result);
            return null;
        }
        
        private void OnCompleteEstimateCompleted(object state) {
            if ((this.CompleteEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompleteEstimateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompleteEstimateAsync(int revisionId, int userId, int statusId, int statusReasonId, int revisionTypeId, int ownerId) {
            this.CompleteEstimateAsync(revisionId, userId, statusId, statusReasonId, revisionTypeId, ownerId, null);
        }
        
        public void CompleteEstimateAsync(int revisionId, int userId, int statusId, int statusReasonId, int revisionTypeId, int ownerId, object userState) {
            if ((this.onBeginCompleteEstimateDelegate == null)) {
                this.onBeginCompleteEstimateDelegate = new BeginOperationDelegate(this.OnBeginCompleteEstimate);
            }
            if ((this.onEndCompleteEstimateDelegate == null)) {
                this.onEndCompleteEstimateDelegate = new EndOperationDelegate(this.OnEndCompleteEstimate);
            }
            if ((this.onCompleteEstimateCompletedDelegate == null)) {
                this.onCompleteEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompleteEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginCompleteEstimateDelegate, new object[] {
                        revisionId,
                        userId,
                        statusId,
                        statusReasonId,
                        revisionTypeId,
                        ownerId}, this.onEndCompleteEstimateDelegate, this.onCompleteEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetQueuedEstimates(int revisionTypeId, int regionId, int roleId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQueuedEstimates(revisionTypeId, regionId, roleId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetQueuedEstimates(System.IAsyncResult result) {
            return base.Channel.EndGetQueuedEstimates(result);
        }
        
        private System.IAsyncResult OnBeginGetQueuedEstimates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionTypeId = ((int)(inValues[0]));
            int regionId = ((int)(inValues[1]));
            int roleId = ((int)(inValues[2]));
            string customerNumber = ((string)(inValues[3]));
            string contractNumber = ((string)(inValues[4]));
            int salesConsultantId = ((int)(inValues[5]));
            string lotNumber = ((string)(inValues[6]));
            string streetName = ((string)(inValues[7]));
            string suburb = ((string)(inValues[8]));
            string businessUnit = ((string)(inValues[9]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetQueuedEstimates(revisionTypeId, regionId, roleId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetQueuedEstimates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetQueuedEstimates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQueuedEstimatesCompleted(object state) {
            if ((this.GetQueuedEstimatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQueuedEstimatesCompleted(this, new GetQueuedEstimatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQueuedEstimatesAsync(int revisionTypeId, int regionId, int roleId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit) {
            this.GetQueuedEstimatesAsync(revisionTypeId, regionId, roleId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, null);
        }
        
        public void GetQueuedEstimatesAsync(int revisionTypeId, int regionId, int roleId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, object userState) {
            if ((this.onBeginGetQueuedEstimatesDelegate == null)) {
                this.onBeginGetQueuedEstimatesDelegate = new BeginOperationDelegate(this.OnBeginGetQueuedEstimates);
            }
            if ((this.onEndGetQueuedEstimatesDelegate == null)) {
                this.onEndGetQueuedEstimatesDelegate = new EndOperationDelegate(this.OnEndGetQueuedEstimates);
            }
            if ((this.onGetQueuedEstimatesCompletedDelegate == null)) {
                this.onGetQueuedEstimatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQueuedEstimatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetQueuedEstimatesDelegate, new object[] {
                        revisionTypeId,
                        regionId,
                        roleId,
                        customerNumber,
                        contractNumber,
                        salesConsultantId,
                        lotNumber,
                        streetName,
                        suburb,
                        businessUnit}, this.onEndGetQueuedEstimatesDelegate, this.onGetQueuedEstimatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAssignedEstimates(int revisionTypeId, int roleId, int statusId, int userId, int regionId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAssignedEstimates(revisionTypeId, roleId, statusId, userId, regionId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAssignedEstimates(System.IAsyncResult result) {
            return base.Channel.EndGetAssignedEstimates(result);
        }
        
        private System.IAsyncResult OnBeginGetAssignedEstimates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionTypeId = ((int)(inValues[0]));
            int roleId = ((int)(inValues[1]));
            int statusId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            int regionId = ((int)(inValues[4]));
            string customerNumber = ((string)(inValues[5]));
            string contractNumber = ((string)(inValues[6]));
            int salesConsultantId = ((int)(inValues[7]));
            string lotNumber = ((string)(inValues[8]));
            string streetName = ((string)(inValues[9]));
            string suburb = ((string)(inValues[10]));
            string businessUnit = ((string)(inValues[11]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAssignedEstimates(revisionTypeId, roleId, statusId, userId, regionId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, callback, asyncState);
        }
        
        private object[] OnEndGetAssignedEstimates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAssignedEstimates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAssignedEstimatesCompleted(object state) {
            if ((this.GetAssignedEstimatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAssignedEstimatesCompleted(this, new GetAssignedEstimatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAssignedEstimatesAsync(int revisionTypeId, int roleId, int statusId, int userId, int regionId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit) {
            this.GetAssignedEstimatesAsync(revisionTypeId, roleId, statusId, userId, regionId, customerNumber, contractNumber, salesConsultantId, lotNumber, streetName, suburb, businessUnit, null);
        }
        
        public void GetAssignedEstimatesAsync(int revisionTypeId, int roleId, int statusId, int userId, int regionId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, object userState) {
            if ((this.onBeginGetAssignedEstimatesDelegate == null)) {
                this.onBeginGetAssignedEstimatesDelegate = new BeginOperationDelegate(this.OnBeginGetAssignedEstimates);
            }
            if ((this.onEndGetAssignedEstimatesDelegate == null)) {
                this.onEndGetAssignedEstimatesDelegate = new EndOperationDelegate(this.OnEndGetAssignedEstimates);
            }
            if ((this.onGetAssignedEstimatesCompletedDelegate == null)) {
                this.onGetAssignedEstimatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAssignedEstimatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAssignedEstimatesDelegate, new object[] {
                        revisionTypeId,
                        roleId,
                        statusId,
                        userId,
                        regionId,
                        customerNumber,
                        contractNumber,
                        salesConsultantId,
                        lotNumber,
                        streetName,
                        suburb,
                        businessUnit}, this.onEndGetAssignedEstimatesDelegate, this.onGetAssignedEstimatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateHeader(int revisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateHeader(revisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateHeader(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateHeader(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateHeader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateHeader(revisionId, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateHeader(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateHeader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateHeaderCompleted(object state) {
            if ((this.GetEstimateHeaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateHeaderCompleted(this, new GetEstimateHeaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateHeaderAsync(int revisionId) {
            this.GetEstimateHeaderAsync(revisionId, null);
        }
        
        public void GetEstimateHeaderAsync(int revisionId, object userState) {
            if ((this.onBeginGetEstimateHeaderDelegate == null)) {
                this.onBeginGetEstimateHeaderDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateHeader);
            }
            if ((this.onEndGetEstimateHeaderDelegate == null)) {
                this.onEndGetEstimateHeaderDelegate = new EndOperationDelegate(this.OnEndGetEstimateHeader);
            }
            if ((this.onGetEstimateHeaderCompletedDelegate == null)) {
                this.onGetEstimateHeaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateHeaderCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateHeaderDelegate, new object[] {
                        revisionId}, this.onEndGetEstimateHeaderDelegate, this.onGetEstimateHeaderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateDetails(int revisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateDetails(revisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateDetails(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateDetails(revisionId, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateDetails(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateDetailsCompleted(object state) {
            if ((this.GetEstimateDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateDetailsCompleted(this, new GetEstimateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateDetailsAsync(int revisionId) {
            this.GetEstimateDetailsAsync(revisionId, null);
        }
        
        public void GetEstimateDetailsAsync(int revisionId, object userState) {
            if ((this.onBeginGetEstimateDetailsDelegate == null)) {
                this.onBeginGetEstimateDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateDetails);
            }
            if ((this.onEndGetEstimateDetailsDelegate == null)) {
                this.onEndGetEstimateDetailsDelegate = new EndOperationDelegate(this.OnEndGetEstimateDetails);
            }
            if ((this.onGetEstimateDetailsCompletedDelegate == null)) {
                this.onGetEstimateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateDetailsDelegate, new object[] {
                        revisionId}, this.onEndGetEstimateDetailsDelegate, this.onGetEstimateDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimatesRevisions(int estimateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimatesRevisions(estimateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimatesRevisions(System.IAsyncResult result) {
            return base.Channel.EndGetEstimatesRevisions(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimatesRevisions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimatesRevisions(estimateId, callback, asyncState);
        }
        
        private object[] OnEndGetEstimatesRevisions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimatesRevisions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimatesRevisionsCompleted(object state) {
            if ((this.GetEstimatesRevisionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimatesRevisionsCompleted(this, new GetEstimatesRevisionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimatesRevisionsAsync(int estimateId) {
            this.GetEstimatesRevisionsAsync(estimateId, null);
        }
        
        public void GetEstimatesRevisionsAsync(int estimateId, object userState) {
            if ((this.onBeginGetEstimatesRevisionsDelegate == null)) {
                this.onBeginGetEstimatesRevisionsDelegate = new BeginOperationDelegate(this.OnBeginGetEstimatesRevisions);
            }
            if ((this.onEndGetEstimatesRevisionsDelegate == null)) {
                this.onEndGetEstimatesRevisionsDelegate = new EndOperationDelegate(this.OnEndGetEstimatesRevisions);
            }
            if ((this.onGetEstimatesRevisionsCompletedDelegate == null)) {
                this.onGetEstimatesRevisionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimatesRevisionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimatesRevisionsDelegate, new object[] {
                        estimateId}, this.onEndGetEstimatesRevisionsDelegate, this.onGetEstimatesRevisionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUndoThisRevision(int bcContractNumber, int estimateId, int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUndoThisRevision(bcContractNumber, estimateId, estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUndoThisRevision(System.IAsyncResult result) {
            return base.Channel.EndUndoThisRevision(result);
        }
        
        private System.IAsyncResult OnBeginUndoThisRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int bcContractNumber = ((int)(inValues[0]));
            int estimateId = ((int)(inValues[1]));
            int estimateRevisionId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            string reasonComment = ((string)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUndoThisRevision(bcContractNumber, estimateId, estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        private object[] OnEndUndoThisRevision(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUndoThisRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUndoThisRevisionCompleted(object state) {
            if ((this.UndoThisRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UndoThisRevisionCompleted(this, new UndoThisRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UndoThisRevisionAsync(int bcContractNumber, int estimateId, int estimateRevisionId, int userId, string reasonComment) {
            this.UndoThisRevisionAsync(bcContractNumber, estimateId, estimateRevisionId, userId, reasonComment, null);
        }
        
        public void UndoThisRevisionAsync(int bcContractNumber, int estimateId, int estimateRevisionId, int userId, string reasonComment, object userState) {
            if ((this.onBeginUndoThisRevisionDelegate == null)) {
                this.onBeginUndoThisRevisionDelegate = new BeginOperationDelegate(this.OnBeginUndoThisRevision);
            }
            if ((this.onEndUndoThisRevisionDelegate == null)) {
                this.onEndUndoThisRevisionDelegate = new EndOperationDelegate(this.OnEndUndoThisRevision);
            }
            if ((this.onUndoThisRevisionCompletedDelegate == null)) {
                this.onUndoThisRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndoThisRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginUndoThisRevisionDelegate, new object[] {
                        bcContractNumber,
                        estimateId,
                        estimateRevisionId,
                        userId,
                        reasonComment}, this.onEndUndoThisRevisionDelegate, this.onUndoThisRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUndoThisRevisionValidate(int estimateId, int bcContractNumber, int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUndoThisRevisionValidate(estimateId, bcContractNumber, estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUndoThisRevisionValidate(System.IAsyncResult result) {
            return base.Channel.EndUndoThisRevisionValidate(result);
        }
        
        private System.IAsyncResult OnBeginUndoThisRevisionValidate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateId = ((int)(inValues[0]));
            int bcContractNumber = ((int)(inValues[1]));
            int estimateRevisionId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUndoThisRevisionValidate(estimateId, bcContractNumber, estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndUndoThisRevisionValidate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUndoThisRevisionValidate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUndoThisRevisionValidateCompleted(object state) {
            if ((this.UndoThisRevisionValidateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UndoThisRevisionValidateCompleted(this, new UndoThisRevisionValidateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UndoThisRevisionValidateAsync(int estimateId, int bcContractNumber, int estimateRevisionId) {
            this.UndoThisRevisionValidateAsync(estimateId, bcContractNumber, estimateRevisionId, null);
        }
        
        public void UndoThisRevisionValidateAsync(int estimateId, int bcContractNumber, int estimateRevisionId, object userState) {
            if ((this.onBeginUndoThisRevisionValidateDelegate == null)) {
                this.onBeginUndoThisRevisionValidateDelegate = new BeginOperationDelegate(this.OnBeginUndoThisRevisionValidate);
            }
            if ((this.onEndUndoThisRevisionValidateDelegate == null)) {
                this.onEndUndoThisRevisionValidateDelegate = new EndOperationDelegate(this.OnEndUndoThisRevisionValidate);
            }
            if ((this.onUndoThisRevisionValidateCompletedDelegate == null)) {
                this.onUndoThisRevisionValidateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndoThisRevisionValidateCompleted);
            }
            base.InvokeAsync(this.onBeginUndoThisRevisionValidateDelegate, new object[] {
                        estimateId,
                        bcContractNumber,
                        estimateRevisionId}, this.onEndUndoThisRevisionValidateDelegate, this.onUndoThisRevisionValidateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUndoCurrentMilestone(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUndoCurrentMilestone(estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUndoCurrentMilestone(System.IAsyncResult result) {
            return base.Channel.EndUndoCurrentMilestone(result);
        }
        
        private System.IAsyncResult OnBeginUndoCurrentMilestone(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            string reasonComment = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUndoCurrentMilestone(estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        private object[] OnEndUndoCurrentMilestone(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUndoCurrentMilestone(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUndoCurrentMilestoneCompleted(object state) {
            if ((this.UndoCurrentMilestoneCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UndoCurrentMilestoneCompleted(this, new UndoCurrentMilestoneCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UndoCurrentMilestoneAsync(int estimateRevisionId, int userId, string reasonComment) {
            this.UndoCurrentMilestoneAsync(estimateRevisionId, userId, reasonComment, null);
        }
        
        public void UndoCurrentMilestoneAsync(int estimateRevisionId, int userId, string reasonComment, object userState) {
            if ((this.onBeginUndoCurrentMilestoneDelegate == null)) {
                this.onBeginUndoCurrentMilestoneDelegate = new BeginOperationDelegate(this.OnBeginUndoCurrentMilestone);
            }
            if ((this.onEndUndoCurrentMilestoneDelegate == null)) {
                this.onEndUndoCurrentMilestoneDelegate = new EndOperationDelegate(this.OnEndUndoCurrentMilestone);
            }
            if ((this.onUndoCurrentMilestoneCompletedDelegate == null)) {
                this.onUndoCurrentMilestoneCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndoCurrentMilestoneCompleted);
            }
            base.InvokeAsync(this.onBeginUndoCurrentMilestoneDelegate, new object[] {
                        estimateRevisionId,
                        userId,
                        reasonComment}, this.onEndUndoCurrentMilestoneDelegate, this.onUndoCurrentMilestoneCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUndoSetAsContract(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUndoSetAsContract(estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUndoSetAsContract(System.IAsyncResult result) {
            return base.Channel.EndUndoSetAsContract(result);
        }
        
        private System.IAsyncResult OnBeginUndoSetAsContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int userId = ((int)(inValues[1]));
            string reasonComment = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUndoSetAsContract(estimateRevisionId, userId, reasonComment, callback, asyncState);
        }
        
        private object[] OnEndUndoSetAsContract(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUndoSetAsContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUndoSetAsContractCompleted(object state) {
            if ((this.UndoSetAsContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UndoSetAsContractCompleted(this, new UndoSetAsContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UndoSetAsContractAsync(int estimateRevisionId, int userId, string reasonComment) {
            this.UndoSetAsContractAsync(estimateRevisionId, userId, reasonComment, null);
        }
        
        public void UndoSetAsContractAsync(int estimateRevisionId, int userId, string reasonComment, object userState) {
            if ((this.onBeginUndoSetAsContractDelegate == null)) {
                this.onBeginUndoSetAsContractDelegate = new BeginOperationDelegate(this.OnBeginUndoSetAsContract);
            }
            if ((this.onEndUndoSetAsContractDelegate == null)) {
                this.onEndUndoSetAsContractDelegate = new EndOperationDelegate(this.OnEndUndoSetAsContract);
            }
            if ((this.onUndoSetAsContractCompletedDelegate == null)) {
                this.onUndoSetAsContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUndoSetAsContractCompleted);
            }
            base.InvokeAsync(this.onBeginUndoSetAsContractDelegate, new object[] {
                        estimateRevisionId,
                        userId,
                        reasonComment}, this.onEndUndoSetAsContractDelegate, this.onUndoSetAsContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateDetails(
                    int revisionDetailsId, 
                    decimal price, 
                    decimal quantity, 
                    decimal totalprice, 
                    string productDescription, 
                    string extraDescription, 
                    string internalDescription, 
                    string additionalnotes, 
                    string studioManswer, 
                    int itemaccepted, 
                    int categoryid, 
                    int groupid, 
                    int pricedisplayid, 
                    int userId, 
                    int applyanswertoallgroup, 
                    string selectedimageid, 
                    bool issiteworkitem, 
                    string costbtp, 
                    string costdbc, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return base.Channel.BeginUpdateEstimateDetails(revisionDetailsId, price, quantity, totalprice, productDescription, extraDescription, internalDescription, additionalnotes, studioManswer, itemaccepted, categoryid, groupid, pricedisplayid, userId, applyanswertoallgroup, selectedimageid, issiteworkitem, costbtp, costdbc, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateDetails(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateDetails(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionDetailsId = ((int)(inValues[0]));
            decimal price = ((decimal)(inValues[1]));
            decimal quantity = ((decimal)(inValues[2]));
            decimal totalprice = ((decimal)(inValues[3]));
            string productDescription = ((string)(inValues[4]));
            string extraDescription = ((string)(inValues[5]));
            string internalDescription = ((string)(inValues[6]));
            string additionalnotes = ((string)(inValues[7]));
            string studioManswer = ((string)(inValues[8]));
            int itemaccepted = ((int)(inValues[9]));
            int categoryid = ((int)(inValues[10]));
            int groupid = ((int)(inValues[11]));
            int pricedisplayid = ((int)(inValues[12]));
            int userId = ((int)(inValues[13]));
            int applyanswertoallgroup = ((int)(inValues[14]));
            string selectedimageid = ((string)(inValues[15]));
            bool issiteworkitem = ((bool)(inValues[16]));
            string costbtp = ((string)(inValues[17]));
            string costdbc = ((string)(inValues[18]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateDetails(revisionDetailsId, price, quantity, totalprice, productDescription, extraDescription, internalDescription, additionalnotes, studioManswer, itemaccepted, categoryid, groupid, pricedisplayid, userId, applyanswertoallgroup, selectedimageid, issiteworkitem, costbtp, costdbc, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateDetails(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateDetails(result);
            return null;
        }
        
        private void OnUpdateEstimateDetailsCompleted(object state) {
            if ((this.UpdateEstimateDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateDetailsAsync(
                    int revisionDetailsId, 
                    decimal price, 
                    decimal quantity, 
                    decimal totalprice, 
                    string productDescription, 
                    string extraDescription, 
                    string internalDescription, 
                    string additionalnotes, 
                    string studioManswer, 
                    int itemaccepted, 
                    int categoryid, 
                    int groupid, 
                    int pricedisplayid, 
                    int userId, 
                    int applyanswertoallgroup, 
                    string selectedimageid, 
                    bool issiteworkitem, 
                    string costbtp, 
                    string costdbc) {
            this.UpdateEstimateDetailsAsync(revisionDetailsId, price, quantity, totalprice, productDescription, extraDescription, internalDescription, additionalnotes, studioManswer, itemaccepted, categoryid, groupid, pricedisplayid, userId, applyanswertoallgroup, selectedimageid, issiteworkitem, costbtp, costdbc, null);
        }
        
        public void UpdateEstimateDetailsAsync(
                    int revisionDetailsId, 
                    decimal price, 
                    decimal quantity, 
                    decimal totalprice, 
                    string productDescription, 
                    string extraDescription, 
                    string internalDescription, 
                    string additionalnotes, 
                    string studioManswer, 
                    int itemaccepted, 
                    int categoryid, 
                    int groupid, 
                    int pricedisplayid, 
                    int userId, 
                    int applyanswertoallgroup, 
                    string selectedimageid, 
                    bool issiteworkitem, 
                    string costbtp, 
                    string costdbc, 
                    object userState) {
            if ((this.onBeginUpdateEstimateDetailsDelegate == null)) {
                this.onBeginUpdateEstimateDetailsDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateDetails);
            }
            if ((this.onEndUpdateEstimateDetailsDelegate == null)) {
                this.onEndUpdateEstimateDetailsDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateDetails);
            }
            if ((this.onUpdateEstimateDetailsCompletedDelegate == null)) {
                this.onUpdateEstimateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateDetailsDelegate, new object[] {
                        revisionDetailsId,
                        price,
                        quantity,
                        totalprice,
                        productDescription,
                        extraDescription,
                        internalDescription,
                        additionalnotes,
                        studioManswer,
                        itemaccepted,
                        categoryid,
                        groupid,
                        pricedisplayid,
                        userId,
                        applyanswertoallgroup,
                        selectedimageid,
                        issiteworkitem,
                        costbtp,
                        costdbc}, this.onEndUpdateEstimateDetailsDelegate, this.onUpdateEstimateDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginDeleteProduct(int revisionDetailsId, string reason, int reasonid, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteProduct(revisionDetailsId, reason, reasonid, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndDeleteProduct(System.IAsyncResult result) {
            return base.Channel.EndDeleteProduct(result);
        }
        
        private System.IAsyncResult OnBeginDeleteProduct(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionDetailsId = ((int)(inValues[0]));
            string reason = ((string)(inValues[1]));
            int reasonid = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginDeleteProduct(revisionDetailsId, reason, reasonid, userId, callback, asyncState);
        }
        
        private object[] OnEndDeleteProduct(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndDeleteProduct(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteProductCompleted(object state) {
            if ((this.DeleteProductCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteProductCompleted(this, new DeleteProductCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteProductAsync(int revisionDetailsId, string reason, int reasonid, int userId) {
            this.DeleteProductAsync(revisionDetailsId, reason, reasonid, userId, null);
        }
        
        public void DeleteProductAsync(int revisionDetailsId, string reason, int reasonid, int userId, object userState) {
            if ((this.onBeginDeleteProductDelegate == null)) {
                this.onBeginDeleteProductDelegate = new BeginOperationDelegate(this.OnBeginDeleteProduct);
            }
            if ((this.onEndDeleteProductDelegate == null)) {
                this.onEndDeleteProductDelegate = new EndOperationDelegate(this.OnEndDeleteProduct);
            }
            if ((this.onDeleteProductCompletedDelegate == null)) {
                this.onDeleteProductCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteProductCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteProductDelegate, new object[] {
                        revisionDetailsId,
                        reason,
                        reasonid,
                        userId}, this.onEndDeleteProductDelegate, this.onDeleteProductCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginInsertComment(int revisionId, string comment, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertComment(revisionId, comment, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndInsertComment(System.IAsyncResult result) {
            base.Channel.EndInsertComment(result);
        }
        
        private System.IAsyncResult OnBeginInsertComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            string comment = ((string)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginInsertComment(revisionId, comment, userId, callback, asyncState);
        }
        
        private object[] OnEndInsertComment(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndInsertComment(result);
            return null;
        }
        
        private void OnInsertCommentCompleted(object state) {
            if ((this.InsertCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertCommentAsync(int revisionId, string comment, int userId) {
            this.InsertCommentAsync(revisionId, comment, userId, null);
        }
        
        public void InsertCommentAsync(int revisionId, string comment, int userId, object userState) {
            if ((this.onBeginInsertCommentDelegate == null)) {
                this.onBeginInsertCommentDelegate = new BeginOperationDelegate(this.OnBeginInsertComment);
            }
            if ((this.onEndInsertCommentDelegate == null)) {
                this.onEndInsertCommentDelegate = new EndOperationDelegate(this.OnEndInsertComment);
            }
            if ((this.onInsertCommentCompletedDelegate == null)) {
                this.onInsertCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertCommentCompleted);
            }
            base.InvokeAsync(this.onBeginInsertCommentDelegate, new object[] {
                        revisionId,
                        comment,
                        userId}, this.onEndInsertCommentDelegate, this.onInsertCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateComment(int estimateRevisionId, string comment, int userid, int variationnumber, string variationsummary, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateComment(estimateRevisionId, comment, userid, variationnumber, variationsummary, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateComment(System.IAsyncResult result) {
            base.Channel.EndUpdateComment(result);
        }
        
        private System.IAsyncResult OnBeginUpdateComment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            string comment = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            int variationnumber = ((int)(inValues[3]));
            string variationsummary = ((string)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateComment(estimateRevisionId, comment, userid, variationnumber, variationsummary, callback, asyncState);
        }
        
        private object[] OnEndUpdateComment(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateComment(result);
            return null;
        }
        
        private void OnUpdateCommentCompleted(object state) {
            if ((this.UpdateCommentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCommentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateCommentAsync(int estimateRevisionId, string comment, int userid, int variationnumber, string variationsummary) {
            this.UpdateCommentAsync(estimateRevisionId, comment, userid, variationnumber, variationsummary, null);
        }
        
        public void UpdateCommentAsync(int estimateRevisionId, string comment, int userid, int variationnumber, string variationsummary, object userState) {
            if ((this.onBeginUpdateCommentDelegate == null)) {
                this.onBeginUpdateCommentDelegate = new BeginOperationDelegate(this.OnBeginUpdateComment);
            }
            if ((this.onEndUpdateCommentDelegate == null)) {
                this.onEndUpdateCommentDelegate = new EndOperationDelegate(this.OnEndUpdateComment);
            }
            if ((this.onUpdateCommentCompletedDelegate == null)) {
                this.onUpdateCommentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCommentCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateCommentDelegate, new object[] {
                        estimateRevisionId,
                        comment,
                        userid,
                        variationnumber,
                        variationsummary}, this.onEndUpdateCommentDelegate, this.onUpdateCommentCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateStatus(int revisionId, int statusId, int statusReasonId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateStatus(revisionId, statusId, statusReasonId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateStatus(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateStatus(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            int statusId = ((int)(inValues[1]));
            int statusReasonId = ((int)(inValues[2]));
            int userId = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateStatus(revisionId, statusId, statusReasonId, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateStatus(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateStatus(result);
            return null;
        }
        
        private void OnUpdateEstimateStatusCompleted(object state) {
            if ((this.UpdateEstimateStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateStatusAsync(int revisionId, int statusId, int statusReasonId, int userId) {
            this.UpdateEstimateStatusAsync(revisionId, statusId, statusReasonId, userId, null);
        }
        
        public void UpdateEstimateStatusAsync(int revisionId, int statusId, int statusReasonId, int userId, object userState) {
            if ((this.onBeginUpdateEstimateStatusDelegate == null)) {
                this.onBeginUpdateEstimateStatusDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateStatus);
            }
            if ((this.onEndUpdateEstimateStatusDelegate == null)) {
                this.onEndUpdateEstimateStatusDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateStatus);
            }
            if ((this.onUpdateEstimateStatusCompletedDelegate == null)) {
                this.onUpdateEstimateStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateStatusCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateStatusDelegate, new object[] {
                        revisionId,
                        statusId,
                        statusReasonId,
                        userId}, this.onEndUpdateEstimateStatusDelegate, this.onUpdateEstimateStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateDifficultyRating(int estimateRevisionId, int difficultyRatingId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateDifficultyRating(estimateRevisionId, difficultyRatingId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateDifficultyRating(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateDifficultyRating(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateDifficultyRating(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int difficultyRatingId = ((int)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateDifficultyRating(estimateRevisionId, difficultyRatingId, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateDifficultyRating(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateDifficultyRating(result);
            return null;
        }
        
        private void OnUpdateEstimateDifficultyRatingCompleted(object state) {
            if ((this.UpdateEstimateDifficultyRatingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateDifficultyRatingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateDifficultyRatingAsync(int estimateRevisionId, int difficultyRatingId, int userId) {
            this.UpdateEstimateDifficultyRatingAsync(estimateRevisionId, difficultyRatingId, userId, null);
        }
        
        public void UpdateEstimateDifficultyRatingAsync(int estimateRevisionId, int difficultyRatingId, int userId, object userState) {
            if ((this.onBeginUpdateEstimateDifficultyRatingDelegate == null)) {
                this.onBeginUpdateEstimateDifficultyRatingDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateDifficultyRating);
            }
            if ((this.onEndUpdateEstimateDifficultyRatingDelegate == null)) {
                this.onEndUpdateEstimateDifficultyRatingDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateDifficultyRating);
            }
            if ((this.onUpdateEstimateDifficultyRatingCompletedDelegate == null)) {
                this.onUpdateEstimateDifficultyRatingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateDifficultyRatingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateDifficultyRatingDelegate, new object[] {
                        estimateRevisionId,
                        difficultyRatingId,
                        userId}, this.onEndUpdateEstimateDifficultyRatingDelegate, this.onUpdateEstimateDifficultyRatingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateQueueDifficultyRating(int queueId, int difficultyRatingId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateQueueDifficultyRating(queueId, difficultyRatingId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateQueueDifficultyRating(System.IAsyncResult result) {
            base.Channel.EndUpdateQueueDifficultyRating(result);
        }
        
        private System.IAsyncResult OnBeginUpdateQueueDifficultyRating(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int queueId = ((int)(inValues[0]));
            int difficultyRatingId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateQueueDifficultyRating(queueId, difficultyRatingId, callback, asyncState);
        }
        
        private object[] OnEndUpdateQueueDifficultyRating(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateQueueDifficultyRating(result);
            return null;
        }
        
        private void OnUpdateQueueDifficultyRatingCompleted(object state) {
            if ((this.UpdateQueueDifficultyRatingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateQueueDifficultyRatingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateQueueDifficultyRatingAsync(int queueId, int difficultyRatingId) {
            this.UpdateQueueDifficultyRatingAsync(queueId, difficultyRatingId, null);
        }
        
        public void UpdateQueueDifficultyRatingAsync(int queueId, int difficultyRatingId, object userState) {
            if ((this.onBeginUpdateQueueDifficultyRatingDelegate == null)) {
                this.onBeginUpdateQueueDifficultyRatingDelegate = new BeginOperationDelegate(this.OnBeginUpdateQueueDifficultyRating);
            }
            if ((this.onEndUpdateQueueDifficultyRatingDelegate == null)) {
                this.onEndUpdateQueueDifficultyRatingDelegate = new EndOperationDelegate(this.OnEndUpdateQueueDifficultyRating);
            }
            if ((this.onUpdateQueueDifficultyRatingCompletedDelegate == null)) {
                this.onUpdateQueueDifficultyRatingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateQueueDifficultyRatingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateQueueDifficultyRatingDelegate, new object[] {
                        queueId,
                        difficultyRatingId}, this.onEndUpdateQueueDifficultyRatingDelegate, this.onUpdateQueueDifficultyRatingCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginMarginReport_SaveDetails(int estimateRevisionId, int titledLand, int titledLandDays, int basePriceExtensionDays, System.DateTime effectiveDate, double bpeCharge, int requiredBPEChargeType, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarginReport_SaveDetails(estimateRevisionId, titledLand, titledLandDays, basePriceExtensionDays, effectiveDate, bpeCharge, requiredBPEChargeType, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndMarginReport_SaveDetails(System.IAsyncResult result) {
            base.Channel.EndMarginReport_SaveDetails(result);
        }
        
        private System.IAsyncResult OnBeginMarginReport_SaveDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int titledLand = ((int)(inValues[1]));
            int titledLandDays = ((int)(inValues[2]));
            int basePriceExtensionDays = ((int)(inValues[3]));
            System.DateTime effectiveDate = ((System.DateTime)(inValues[4]));
            double bpeCharge = ((double)(inValues[5]));
            int requiredBPEChargeType = ((int)(inValues[6]));
            int userId = ((int)(inValues[7]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginMarginReport_SaveDetails(estimateRevisionId, titledLand, titledLandDays, basePriceExtensionDays, effectiveDate, bpeCharge, requiredBPEChargeType, userId, callback, asyncState);
        }
        
        private object[] OnEndMarginReport_SaveDetails(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndMarginReport_SaveDetails(result);
            return null;
        }
        
        private void OnMarginReport_SaveDetailsCompleted(object state) {
            if ((this.MarginReport_SaveDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarginReport_SaveDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarginReport_SaveDetailsAsync(int estimateRevisionId, int titledLand, int titledLandDays, int basePriceExtensionDays, System.DateTime effectiveDate, double bpeCharge, int requiredBPEChargeType, int userId) {
            this.MarginReport_SaveDetailsAsync(estimateRevisionId, titledLand, titledLandDays, basePriceExtensionDays, effectiveDate, bpeCharge, requiredBPEChargeType, userId, null);
        }
        
        public void MarginReport_SaveDetailsAsync(int estimateRevisionId, int titledLand, int titledLandDays, int basePriceExtensionDays, System.DateTime effectiveDate, double bpeCharge, int requiredBPEChargeType, int userId, object userState) {
            if ((this.onBeginMarginReport_SaveDetailsDelegate == null)) {
                this.onBeginMarginReport_SaveDetailsDelegate = new BeginOperationDelegate(this.OnBeginMarginReport_SaveDetails);
            }
            if ((this.onEndMarginReport_SaveDetailsDelegate == null)) {
                this.onEndMarginReport_SaveDetailsDelegate = new EndOperationDelegate(this.OnEndMarginReport_SaveDetails);
            }
            if ((this.onMarginReport_SaveDetailsCompletedDelegate == null)) {
                this.onMarginReport_SaveDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarginReport_SaveDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginMarginReport_SaveDetailsDelegate, new object[] {
                        estimateRevisionId,
                        titledLand,
                        titledLandDays,
                        basePriceExtensionDays,
                        effectiveDate,
                        bpeCharge,
                        requiredBPEChargeType,
                        userId}, this.onEndMarginReport_SaveDetailsDelegate, this.onMarginReport_SaveDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginMarginReport_GetDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMarginReport_GetDetails(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndMarginReport_GetDetails(System.IAsyncResult result) {
            return base.Channel.EndMarginReport_GetDetails(result);
        }
        
        private System.IAsyncResult OnBeginMarginReport_GetDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginMarginReport_GetDetails(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndMarginReport_GetDetails(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndMarginReport_GetDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMarginReport_GetDetailsCompleted(object state) {
            if ((this.MarginReport_GetDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MarginReport_GetDetailsCompleted(this, new MarginReport_GetDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MarginReport_GetDetailsAsync(int estimateRevisionId) {
            this.MarginReport_GetDetailsAsync(estimateRevisionId, null);
        }
        
        public void MarginReport_GetDetailsAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginMarginReport_GetDetailsDelegate == null)) {
                this.onBeginMarginReport_GetDetailsDelegate = new BeginOperationDelegate(this.OnBeginMarginReport_GetDetails);
            }
            if ((this.onEndMarginReport_GetDetailsDelegate == null)) {
                this.onEndMarginReport_GetDetailsDelegate = new EndOperationDelegate(this.OnEndMarginReport_GetDetails);
            }
            if ((this.onMarginReport_GetDetailsCompletedDelegate == null)) {
                this.onMarginReport_GetDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMarginReport_GetDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginMarginReport_GetDetailsDelegate, new object[] {
                        estimateRevisionId}, this.onEndMarginReport_GetDetailsDelegate, this.onMarginReport_GetDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateDueDate(int estimateRevisionId, System.DateTime duedate, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateDueDate(estimateRevisionId, duedate, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateDueDate(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateDueDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateDueDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            System.DateTime duedate = ((System.DateTime)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateDueDate(estimateRevisionId, duedate, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateDueDate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateDueDate(result);
            return null;
        }
        
        private void OnUpdateEstimateDueDateCompleted(object state) {
            if ((this.UpdateEstimateDueDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateDueDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateDueDateAsync(int estimateRevisionId, System.DateTime duedate, int userId) {
            this.UpdateEstimateDueDateAsync(estimateRevisionId, duedate, userId, null);
        }
        
        public void UpdateEstimateDueDateAsync(int estimateRevisionId, System.DateTime duedate, int userId, object userState) {
            if ((this.onBeginUpdateEstimateDueDateDelegate == null)) {
                this.onBeginUpdateEstimateDueDateDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateDueDate);
            }
            if ((this.onEndUpdateEstimateDueDateDelegate == null)) {
                this.onEndUpdateEstimateDueDateDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateDueDate);
            }
            if ((this.onUpdateEstimateDueDateCompletedDelegate == null)) {
                this.onUpdateEstimateDueDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateDueDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateDueDateDelegate, new object[] {
                        estimateRevisionId,
                        duedate,
                        userId}, this.onEndUpdateEstimateDueDateDelegate, this.onUpdateEstimateDueDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateAppointmentTime(int estimateRevisionId, System.DateTime appointmentTime, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateAppointmentTime(estimateRevisionId, appointmentTime, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateAppointmentTime(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateAppointmentTime(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateAppointmentTime(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            System.DateTime appointmentTime = ((System.DateTime)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateAppointmentTime(estimateRevisionId, appointmentTime, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateAppointmentTime(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateAppointmentTime(result);
            return null;
        }
        
        private void OnUpdateEstimateAppointmentTimeCompleted(object state) {
            if ((this.UpdateEstimateAppointmentTimeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateAppointmentTimeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateAppointmentTimeAsync(int estimateRevisionId, System.DateTime appointmentTime, int userId) {
            this.UpdateEstimateAppointmentTimeAsync(estimateRevisionId, appointmentTime, userId, null);
        }
        
        public void UpdateEstimateAppointmentTimeAsync(int estimateRevisionId, System.DateTime appointmentTime, int userId, object userState) {
            if ((this.onBeginUpdateEstimateAppointmentTimeDelegate == null)) {
                this.onBeginUpdateEstimateAppointmentTimeDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateAppointmentTime);
            }
            if ((this.onEndUpdateEstimateAppointmentTimeDelegate == null)) {
                this.onEndUpdateEstimateAppointmentTimeDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateAppointmentTime);
            }
            if ((this.onUpdateEstimateAppointmentTimeCompletedDelegate == null)) {
                this.onUpdateEstimateAppointmentTimeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateAppointmentTimeCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateAppointmentTimeDelegate, new object[] {
                        estimateRevisionId,
                        appointmentTime,
                        userId}, this.onEndUpdateEstimateAppointmentTimeDelegate, this.onUpdateEstimateAppointmentTimeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateQueueDueDate(int queueId, System.DateTime duedate, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateQueueDueDate(queueId, duedate, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateQueueDueDate(System.IAsyncResult result) {
            base.Channel.EndUpdateQueueDueDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateQueueDueDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int queueId = ((int)(inValues[0]));
            System.DateTime duedate = ((System.DateTime)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateQueueDueDate(queueId, duedate, userid, callback, asyncState);
        }
        
        private object[] OnEndUpdateQueueDueDate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateQueueDueDate(result);
            return null;
        }
        
        private void OnUpdateQueueDueDateCompleted(object state) {
            if ((this.UpdateQueueDueDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateQueueDueDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateQueueDueDateAsync(int queueId, System.DateTime duedate, int userid) {
            this.UpdateQueueDueDateAsync(queueId, duedate, userid, null);
        }
        
        public void UpdateQueueDueDateAsync(int queueId, System.DateTime duedate, int userid, object userState) {
            if ((this.onBeginUpdateQueueDueDateDelegate == null)) {
                this.onBeginUpdateQueueDueDateDelegate = new BeginOperationDelegate(this.OnBeginUpdateQueueDueDate);
            }
            if ((this.onEndUpdateQueueDueDateDelegate == null)) {
                this.onEndUpdateQueueDueDateDelegate = new EndOperationDelegate(this.OnEndUpdateQueueDueDate);
            }
            if ((this.onUpdateQueueDueDateCompletedDelegate == null)) {
                this.onUpdateQueueDueDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateQueueDueDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateQueueDueDateDelegate, new object[] {
                        queueId,
                        duedate,
                        userid}, this.onEndUpdateQueueDueDateDelegate, this.onUpdateQueueDueDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateEstimateEffectiveDate(int estimateRevisionId, int priceId, int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEstimateEffectiveDate(estimateRevisionId, priceId, userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateEstimateEffectiveDate(System.IAsyncResult result) {
            base.Channel.EndUpdateEstimateEffectiveDate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEstimateEffectiveDate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            int priceId = ((int)(inValues[1]));
            int userId = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateEstimateEffectiveDate(estimateRevisionId, priceId, userId, callback, asyncState);
        }
        
        private object[] OnEndUpdateEstimateEffectiveDate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateEstimateEffectiveDate(result);
            return null;
        }
        
        private void OnUpdateEstimateEffectiveDateCompleted(object state) {
            if ((this.UpdateEstimateEffectiveDateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEstimateEffectiveDateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEstimateEffectiveDateAsync(int estimateRevisionId, int priceId, int userId) {
            this.UpdateEstimateEffectiveDateAsync(estimateRevisionId, priceId, userId, null);
        }
        
        public void UpdateEstimateEffectiveDateAsync(int estimateRevisionId, int priceId, int userId, object userState) {
            if ((this.onBeginUpdateEstimateEffectiveDateDelegate == null)) {
                this.onBeginUpdateEstimateEffectiveDateDelegate = new BeginOperationDelegate(this.OnBeginUpdateEstimateEffectiveDate);
            }
            if ((this.onEndUpdateEstimateEffectiveDateDelegate == null)) {
                this.onEndUpdateEstimateEffectiveDateDelegate = new EndOperationDelegate(this.OnEndUpdateEstimateEffectiveDate);
            }
            if ((this.onUpdateEstimateEffectiveDateCompletedDelegate == null)) {
                this.onUpdateEstimateEffectiveDateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEstimateEffectiveDateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEstimateEffectiveDateDelegate, new object[] {
                        estimateRevisionId,
                        priceId,
                        userId}, this.onEndUpdateEstimateEffectiveDateDelegate, this.onUpdateEstimateEffectiveDateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetUsersByRegionAndRole(int regionId, int roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersByRegionAndRole(regionId, roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetUsersByRegionAndRole(System.IAsyncResult result) {
            return base.Channel.EndGetUsersByRegionAndRole(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersByRegionAndRole(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int regionId = ((int)(inValues[0]));
            int roleId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetUsersByRegionAndRole(regionId, roleId, callback, asyncState);
        }
        
        private object[] OnEndGetUsersByRegionAndRole(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetUsersByRegionAndRole(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersByRegionAndRoleCompleted(object state) {
            if ((this.GetUsersByRegionAndRoleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersByRegionAndRoleCompleted(this, new GetUsersByRegionAndRoleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersByRegionAndRoleAsync(int regionId, int roleId) {
            this.GetUsersByRegionAndRoleAsync(regionId, roleId, null);
        }
        
        public void GetUsersByRegionAndRoleAsync(int regionId, int roleId, object userState) {
            if ((this.onBeginGetUsersByRegionAndRoleDelegate == null)) {
                this.onBeginGetUsersByRegionAndRoleDelegate = new BeginOperationDelegate(this.OnBeginGetUsersByRegionAndRole);
            }
            if ((this.onEndGetUsersByRegionAndRoleDelegate == null)) {
                this.onEndGetUsersByRegionAndRoleDelegate = new EndOperationDelegate(this.OnEndGetUsersByRegionAndRole);
            }
            if ((this.onGetUsersByRegionAndRoleCompletedDelegate == null)) {
                this.onGetUsersByRegionAndRoleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersByRegionAndRoleCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersByRegionAndRoleDelegate, new object[] {
                        regionId,
                        roleId}, this.onEndGetUsersByRegionAndRoleDelegate, this.onGetUsersByRegionAndRoleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetUsersByRegionAndRevisionType(int regionId, int revisionTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsersByRegionAndRevisionType(regionId, revisionTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetUsersByRegionAndRevisionType(System.IAsyncResult result) {
            return base.Channel.EndGetUsersByRegionAndRevisionType(result);
        }
        
        private System.IAsyncResult OnBeginGetUsersByRegionAndRevisionType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int regionId = ((int)(inValues[0]));
            int revisionTypeId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetUsersByRegionAndRevisionType(regionId, revisionTypeId, callback, asyncState);
        }
        
        private object[] OnEndGetUsersByRegionAndRevisionType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetUsersByRegionAndRevisionType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersByRegionAndRevisionTypeCompleted(object state) {
            if ((this.GetUsersByRegionAndRevisionTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersByRegionAndRevisionTypeCompleted(this, new GetUsersByRegionAndRevisionTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersByRegionAndRevisionTypeAsync(int regionId, int revisionTypeId) {
            this.GetUsersByRegionAndRevisionTypeAsync(regionId, revisionTypeId, null);
        }
        
        public void GetUsersByRegionAndRevisionTypeAsync(int regionId, int revisionTypeId, object userState) {
            if ((this.onBeginGetUsersByRegionAndRevisionTypeDelegate == null)) {
                this.onBeginGetUsersByRegionAndRevisionTypeDelegate = new BeginOperationDelegate(this.OnBeginGetUsersByRegionAndRevisionType);
            }
            if ((this.onEndGetUsersByRegionAndRevisionTypeDelegate == null)) {
                this.onEndGetUsersByRegionAndRevisionTypeDelegate = new EndOperationDelegate(this.OnEndGetUsersByRegionAndRevisionType);
            }
            if ((this.onGetUsersByRegionAndRevisionTypeCompletedDelegate == null)) {
                this.onGetUsersByRegionAndRevisionTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersByRegionAndRevisionTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersByRegionAndRevisionTypeDelegate, new object[] {
                        regionId,
                        revisionTypeId}, this.onEndGetUsersByRegionAndRevisionTypeDelegate, this.onGetUsersByRegionAndRevisionTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCurrentUser(string loginName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrentUser(loginName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.User Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCurrentUser(System.IAsyncResult result) {
            return base.Channel.EndGetCurrentUser(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrentUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string loginName = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCurrentUser(loginName, callback, asyncState);
        }
        
        private object[] OnEndGetCurrentUser(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.User retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCurrentUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrentUserCompleted(object state) {
            if ((this.GetCurrentUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrentUserCompleted(this, new GetCurrentUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrentUserAsync(string loginName) {
            this.GetCurrentUserAsync(loginName, null);
        }
        
        public void GetCurrentUserAsync(string loginName, object userState) {
            if ((this.onBeginGetCurrentUserDelegate == null)) {
                this.onBeginGetCurrentUserDelegate = new BeginOperationDelegate(this.OnBeginGetCurrentUser);
            }
            if ((this.onEndGetCurrentUserDelegate == null)) {
                this.onEndGetCurrentUserDelegate = new EndOperationDelegate(this.OnEndGetCurrentUser);
            }
            if ((this.onGetCurrentUserCompletedDelegate == null)) {
                this.onGetCurrentUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrentUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrentUserDelegate, new object[] {
                        loginName}, this.onEndGetCurrentUserDelegate, this.onGetCurrentUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetUserRoles(int userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserRoles(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetUserRoles(System.IAsyncResult result) {
            return base.Channel.EndGetUserRoles(result);
        }
        
        private System.IAsyncResult OnBeginGetUserRoles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetUserRoles(userId, callback, asyncState);
        }
        
        private object[] OnEndGetUserRoles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetUserRoles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserRolesCompleted(object state) {
            if ((this.GetUserRolesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserRolesCompleted(this, new GetUserRolesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserRolesAsync(int userId) {
            this.GetUserRolesAsync(userId, null);
        }
        
        public void GetUserRolesAsync(int userId, object userState) {
            if ((this.onBeginGetUserRolesDelegate == null)) {
                this.onBeginGetUserRolesDelegate = new BeginOperationDelegate(this.OnBeginGetUserRoles);
            }
            if ((this.onEndGetUserRolesDelegate == null)) {
                this.onEndGetUserRolesDelegate = new EndOperationDelegate(this.OnEndGetUserRoles);
            }
            if ((this.onGetUserRolesCompletedDelegate == null)) {
                this.onGetUserRolesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserRolesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserRolesDelegate, new object[] {
                        userId}, this.onEndGetUserRolesDelegate, this.onGetUserRolesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateStatuses(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateStatuses(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateStatuses(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateStatuses(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateStatuses(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateStatuses(callback, asyncState);
        }
        
        private object[] OnEndGetEstimateStatuses(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateStatuses(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateStatusesCompleted(object state) {
            if ((this.GetEstimateStatusesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateStatusesCompleted(this, new GetEstimateStatusesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateStatusesAsync() {
            this.GetEstimateStatusesAsync(null);
        }
        
        public void GetEstimateStatusesAsync(object userState) {
            if ((this.onBeginGetEstimateStatusesDelegate == null)) {
                this.onBeginGetEstimateStatusesDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateStatuses);
            }
            if ((this.onEndGetEstimateStatusesDelegate == null)) {
                this.onEndGetEstimateStatusesDelegate = new EndOperationDelegate(this.OnEndGetEstimateStatuses);
            }
            if ((this.onGetEstimateStatusesCompletedDelegate == null)) {
                this.onGetEstimateStatusesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateStatusesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateStatusesDelegate, null, this.onEndGetEstimateStatusesDelegate, this.onGetEstimateStatusesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetStatusReasons(int statusId, int revisionTypeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatusReasons(statusId, revisionTypeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetStatusReasons(System.IAsyncResult result) {
            return base.Channel.EndGetStatusReasons(result);
        }
        
        private System.IAsyncResult OnBeginGetStatusReasons(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int statusId = ((int)(inValues[0]));
            int revisionTypeId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetStatusReasons(statusId, revisionTypeId, callback, asyncState);
        }
        
        private object[] OnEndGetStatusReasons(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetStatusReasons(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusReasonsCompleted(object state) {
            if ((this.GetStatusReasonsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusReasonsCompleted(this, new GetStatusReasonsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusReasonsAsync(int statusId, int revisionTypeId) {
            this.GetStatusReasonsAsync(statusId, revisionTypeId, null);
        }
        
        public void GetStatusReasonsAsync(int statusId, int revisionTypeId, object userState) {
            if ((this.onBeginGetStatusReasonsDelegate == null)) {
                this.onBeginGetStatusReasonsDelegate = new BeginOperationDelegate(this.OnBeginGetStatusReasons);
            }
            if ((this.onEndGetStatusReasonsDelegate == null)) {
                this.onEndGetStatusReasonsDelegate = new EndOperationDelegate(this.OnEndGetStatusReasons);
            }
            if ((this.onGetStatusReasonsCompletedDelegate == null)) {
                this.onGetStatusReasonsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusReasonsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusReasonsDelegate, new object[] {
                        statusId,
                        revisionTypeId}, this.onEndGetStatusReasonsDelegate, this.onGetStatusReasonsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetDifficultyRatings(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDifficultyRatings(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetDifficultyRatings(System.IAsyncResult result) {
            return base.Channel.EndGetDifficultyRatings(result);
        }
        
        private System.IAsyncResult OnBeginGetDifficultyRatings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetDifficultyRatings(callback, asyncState);
        }
        
        private object[] OnEndGetDifficultyRatings(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetDifficultyRatings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDifficultyRatingsCompleted(object state) {
            if ((this.GetDifficultyRatingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDifficultyRatingsCompleted(this, new GetDifficultyRatingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDifficultyRatingsAsync() {
            this.GetDifficultyRatingsAsync(null);
        }
        
        public void GetDifficultyRatingsAsync(object userState) {
            if ((this.onBeginGetDifficultyRatingsDelegate == null)) {
                this.onBeginGetDifficultyRatingsDelegate = new BeginOperationDelegate(this.OnBeginGetDifficultyRatings);
            }
            if ((this.onEndGetDifficultyRatingsDelegate == null)) {
                this.onEndGetDifficultyRatingsDelegate = new EndOperationDelegate(this.OnEndGetDifficultyRatings);
            }
            if ((this.onGetDifficultyRatingsCompletedDelegate == null)) {
                this.onGetDifficultyRatingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDifficultyRatingsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDifficultyRatingsDelegate, null, this.onEndGetDifficultyRatingsDelegate, this.onGetDifficultyRatingsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetRevisionTypeAccess(int roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRevisionTypeAccess(roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetRevisionTypeAccess(System.IAsyncResult result) {
            return base.Channel.EndGetRevisionTypeAccess(result);
        }
        
        private System.IAsyncResult OnBeginGetRevisionTypeAccess(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int roleId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetRevisionTypeAccess(roleId, callback, asyncState);
        }
        
        private object[] OnEndGetRevisionTypeAccess(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetRevisionTypeAccess(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRevisionTypeAccessCompleted(object state) {
            if ((this.GetRevisionTypeAccessCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRevisionTypeAccessCompleted(this, new GetRevisionTypeAccessCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRevisionTypeAccessAsync(int roleId) {
            this.GetRevisionTypeAccessAsync(roleId, null);
        }
        
        public void GetRevisionTypeAccessAsync(int roleId, object userState) {
            if ((this.onBeginGetRevisionTypeAccessDelegate == null)) {
                this.onBeginGetRevisionTypeAccessDelegate = new BeginOperationDelegate(this.OnBeginGetRevisionTypeAccess);
            }
            if ((this.onEndGetRevisionTypeAccessDelegate == null)) {
                this.onEndGetRevisionTypeAccessDelegate = new EndOperationDelegate(this.OnEndGetRevisionTypeAccess);
            }
            if ((this.onGetRevisionTypeAccessCompletedDelegate == null)) {
                this.onGetRevisionTypeAccessCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRevisionTypeAccessCompleted);
            }
            base.InvokeAsync(this.onBeginGetRevisionTypeAccessDelegate, new object[] {
                        roleId}, this.onEndGetRevisionTypeAccessDelegate, this.onGetRevisionTypeAccessCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetHomePrices(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHomePrices(estimateRevisionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetHomePrices(System.IAsyncResult result) {
            return base.Channel.EndGetHomePrices(result);
        }
        
        private System.IAsyncResult OnBeginGetHomePrices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetHomePrices(estimateRevisionId, callback, asyncState);
        }
        
        private object[] OnEndGetHomePrices(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetHomePrices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHomePricesCompleted(object state) {
            if ((this.GetHomePricesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHomePricesCompleted(this, new GetHomePricesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHomePricesAsync(int estimateRevisionId) {
            this.GetHomePricesAsync(estimateRevisionId, null);
        }
        
        public void GetHomePricesAsync(int estimateRevisionId, object userState) {
            if ((this.onBeginGetHomePricesDelegate == null)) {
                this.onBeginGetHomePricesDelegate = new BeginOperationDelegate(this.OnBeginGetHomePrices);
            }
            if ((this.onEndGetHomePricesDelegate == null)) {
                this.onEndGetHomePricesDelegate = new EndOperationDelegate(this.OnEndGetHomePrices);
            }
            if ((this.onGetHomePricesCompletedDelegate == null)) {
                this.onGetHomePricesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHomePricesCompleted);
            }
            base.InvokeAsync(this.onBeginGetHomePricesDelegate, new object[] {
                        estimateRevisionId}, this.onEndGetHomePricesDelegate, this.onGetHomePricesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAuditTrail(int estimateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAuditTrail(estimateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAuditTrail(System.IAsyncResult result) {
            return base.Channel.EndGetAuditTrail(result);
        }
        
        private System.IAsyncResult OnBeginGetAuditTrail(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAuditTrail(estimateId, callback, asyncState);
        }
        
        private object[] OnEndGetAuditTrail(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAuditTrail(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAuditTrailCompleted(object state) {
            if ((this.GetAuditTrailCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAuditTrailCompleted(this, new GetAuditTrailCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAuditTrailAsync(int estimateId) {
            this.GetAuditTrailAsync(estimateId, null);
        }
        
        public void GetAuditTrailAsync(int estimateId, object userState) {
            if ((this.onBeginGetAuditTrailDelegate == null)) {
                this.onBeginGetAuditTrailDelegate = new BeginOperationDelegate(this.OnBeginGetAuditTrail);
            }
            if ((this.onEndGetAuditTrailDelegate == null)) {
                this.onEndGetAuditTrailDelegate = new EndOperationDelegate(this.OnEndGetAuditTrail);
            }
            if ((this.onGetAuditTrailCompletedDelegate == null)) {
                this.onGetAuditTrailCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAuditTrailCompleted);
            }
            base.InvokeAsync(this.onBeginGetAuditTrailDelegate, new object[] {
                        estimateId}, this.onEndGetAuditTrailDelegate, this.onGetAuditTrailCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCompareEstimateDetails(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompareEstimateDetails(estimateRevisionIdA, estimateRevisionIdB, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCompareEstimateDetails(System.IAsyncResult result) {
            return base.Channel.EndCompareEstimateDetails(result);
        }
        
        private System.IAsyncResult OnBeginCompareEstimateDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionIdA = ((int)(inValues[0]));
            int estimateRevisionIdB = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCompareEstimateDetails(estimateRevisionIdA, estimateRevisionIdB, callback, asyncState);
        }
        
        private object[] OnEndCompareEstimateDetails(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCompareEstimateDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCompareEstimateDetailsCompleted(object state) {
            if ((this.CompareEstimateDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompareEstimateDetailsCompleted(this, new CompareEstimateDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompareEstimateDetailsAsync(int estimateRevisionIdA, int estimateRevisionIdB) {
            this.CompareEstimateDetailsAsync(estimateRevisionIdA, estimateRevisionIdB, null);
        }
        
        public void CompareEstimateDetailsAsync(int estimateRevisionIdA, int estimateRevisionIdB, object userState) {
            if ((this.onBeginCompareEstimateDetailsDelegate == null)) {
                this.onBeginCompareEstimateDetailsDelegate = new BeginOperationDelegate(this.OnBeginCompareEstimateDetails);
            }
            if ((this.onEndCompareEstimateDetailsDelegate == null)) {
                this.onEndCompareEstimateDetailsDelegate = new EndOperationDelegate(this.OnEndCompareEstimateDetails);
            }
            if ((this.onCompareEstimateDetailsCompletedDelegate == null)) {
                this.onCompareEstimateDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompareEstimateDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginCompareEstimateDetailsDelegate, new object[] {
                        estimateRevisionIdA,
                        estimateRevisionIdB}, this.onEndCompareEstimateDetailsDelegate, this.onCompareEstimateDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCompareEstimateHeader(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCompareEstimateHeader(estimateRevisionIdA, estimateRevisionIdB, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCompareEstimateHeader(System.IAsyncResult result) {
            return base.Channel.EndCompareEstimateHeader(result);
        }
        
        private System.IAsyncResult OnBeginCompareEstimateHeader(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateRevisionIdA = ((int)(inValues[0]));
            int estimateRevisionIdB = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCompareEstimateHeader(estimateRevisionIdA, estimateRevisionIdB, callback, asyncState);
        }
        
        private object[] OnEndCompareEstimateHeader(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCompareEstimateHeader(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCompareEstimateHeaderCompleted(object state) {
            if ((this.CompareEstimateHeaderCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CompareEstimateHeaderCompleted(this, new CompareEstimateHeaderCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CompareEstimateHeaderAsync(int estimateRevisionIdA, int estimateRevisionIdB) {
            this.CompareEstimateHeaderAsync(estimateRevisionIdA, estimateRevisionIdB, null);
        }
        
        public void CompareEstimateHeaderAsync(int estimateRevisionIdA, int estimateRevisionIdB, object userState) {
            if ((this.onBeginCompareEstimateHeaderDelegate == null)) {
                this.onBeginCompareEstimateHeaderDelegate = new BeginOperationDelegate(this.OnBeginCompareEstimateHeader);
            }
            if ((this.onEndCompareEstimateHeaderDelegate == null)) {
                this.onEndCompareEstimateHeaderDelegate = new EndOperationDelegate(this.OnEndCompareEstimateHeader);
            }
            if ((this.onCompareEstimateHeaderCompletedDelegate == null)) {
                this.onCompareEstimateHeaderCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCompareEstimateHeaderCompleted);
            }
            base.InvokeAsync(this.onBeginCompareEstimateHeaderDelegate, new object[] {
                        estimateRevisionIdA,
                        estimateRevisionIdB}, this.onEndCompareEstimateHeaderDelegate, this.onCompareEstimateHeaderCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetLatestEstimateRevisionId(int estimateId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLatestEstimateRevisionId(estimateId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetLatestEstimateRevisionId(System.IAsyncResult result) {
            return base.Channel.EndGetLatestEstimateRevisionId(result);
        }
        
        private System.IAsyncResult OnBeginGetLatestEstimateRevisionId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimateId = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetLatestEstimateRevisionId(estimateId, callback, asyncState);
        }
        
        private object[] OnEndGetLatestEstimateRevisionId(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetLatestEstimateRevisionId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLatestEstimateRevisionIdCompleted(object state) {
            if ((this.GetLatestEstimateRevisionIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLatestEstimateRevisionIdCompleted(this, new GetLatestEstimateRevisionIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLatestEstimateRevisionIdAsync(int estimateId) {
            this.GetLatestEstimateRevisionIdAsync(estimateId, null);
        }
        
        public void GetLatestEstimateRevisionIdAsync(int estimateId, object userState) {
            if ((this.onBeginGetLatestEstimateRevisionIdDelegate == null)) {
                this.onBeginGetLatestEstimateRevisionIdDelegate = new BeginOperationDelegate(this.OnBeginGetLatestEstimateRevisionId);
            }
            if ((this.onEndGetLatestEstimateRevisionIdDelegate == null)) {
                this.onEndGetLatestEstimateRevisionIdDelegate = new EndOperationDelegate(this.OnEndGetLatestEstimateRevisionId);
            }
            if ((this.onGetLatestEstimateRevisionIdCompletedDelegate == null)) {
                this.onGetLatestEstimateRevisionIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLatestEstimateRevisionIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetLatestEstimateRevisionIdDelegate, new object[] {
                        estimateId}, this.onEndGetLatestEstimateRevisionIdDelegate, this.onGetLatestEstimateRevisionIdCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetResubmittedEstimateCount(int userId, int regionId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetResubmittedEstimateCount(userId, regionId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetResubmittedEstimateCount(System.IAsyncResult result) {
            return base.Channel.EndGetResubmittedEstimateCount(result);
        }
        
        private System.IAsyncResult OnBeginGetResubmittedEstimateCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            int regionId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetResubmittedEstimateCount(userId, regionId, callback, asyncState);
        }
        
        private object[] OnEndGetResubmittedEstimateCount(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetResubmittedEstimateCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetResubmittedEstimateCountCompleted(object state) {
            if ((this.GetResubmittedEstimateCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResubmittedEstimateCountCompleted(this, new GetResubmittedEstimateCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResubmittedEstimateCountAsync(int userId, int regionId) {
            this.GetResubmittedEstimateCountAsync(userId, regionId, null);
        }
        
        public void GetResubmittedEstimateCountAsync(int userId, int regionId, object userState) {
            if ((this.onBeginGetResubmittedEstimateCountDelegate == null)) {
                this.onBeginGetResubmittedEstimateCountDelegate = new BeginOperationDelegate(this.OnBeginGetResubmittedEstimateCount);
            }
            if ((this.onEndGetResubmittedEstimateCountDelegate == null)) {
                this.onEndGetResubmittedEstimateCountDelegate = new EndOperationDelegate(this.OnEndGetResubmittedEstimateCount);
            }
            if ((this.onGetResubmittedEstimateCountCompletedDelegate == null)) {
                this.onGetResubmittedEstimateCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResubmittedEstimateCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetResubmittedEstimateCountDelegate, new object[] {
                        userId,
                        regionId}, this.onEndGetResubmittedEstimateCountDelegate, this.onGetResubmittedEstimateCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetOptionTreeFromMasterHome(string regionid, string homeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptionTreeFromMasterHome(regionid, homeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetOptionTreeFromMasterHome(System.IAsyncResult result) {
            return base.Channel.EndGetOptionTreeFromMasterHome(result);
        }
        
        private System.IAsyncResult OnBeginGetOptionTreeFromMasterHome(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string regionid = ((string)(inValues[0]));
            string homeid = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetOptionTreeFromMasterHome(regionid, homeid, callback, asyncState);
        }
        
        private object[] OnEndGetOptionTreeFromMasterHome(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetOptionTreeFromMasterHome(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionTreeFromMasterHomeCompleted(object state) {
            if ((this.GetOptionTreeFromMasterHomeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionTreeFromMasterHomeCompleted(this, new GetOptionTreeFromMasterHomeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionTreeFromMasterHomeAsync(string regionid, string homeid) {
            this.GetOptionTreeFromMasterHomeAsync(regionid, homeid, null);
        }
        
        public void GetOptionTreeFromMasterHomeAsync(string regionid, string homeid, object userState) {
            if ((this.onBeginGetOptionTreeFromMasterHomeDelegate == null)) {
                this.onBeginGetOptionTreeFromMasterHomeDelegate = new BeginOperationDelegate(this.OnBeginGetOptionTreeFromMasterHome);
            }
            if ((this.onEndGetOptionTreeFromMasterHomeDelegate == null)) {
                this.onEndGetOptionTreeFromMasterHomeDelegate = new EndOperationDelegate(this.OnEndGetOptionTreeFromMasterHome);
            }
            if ((this.onGetOptionTreeFromMasterHomeCompletedDelegate == null)) {
                this.onGetOptionTreeFromMasterHomeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionTreeFromMasterHomeCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionTreeFromMasterHomeDelegate, new object[] {
                        regionid,
                        homeid}, this.onEndGetOptionTreeFromMasterHomeDelegate, this.onGetOptionTreeFromMasterHomeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckValidProductByRevision(int revisionId, string productId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckValidProductByRevision(revisionId, productId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckValidProductByRevision(System.IAsyncResult result) {
            return base.Channel.EndCheckValidProductByRevision(result);
        }
        
        private System.IAsyncResult OnBeginCheckValidProductByRevision(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionId = ((int)(inValues[0]));
            string productId = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckValidProductByRevision(revisionId, productId, callback, asyncState);
        }
        
        private object[] OnEndCheckValidProductByRevision(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckValidProductByRevision(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckValidProductByRevisionCompleted(object state) {
            if ((this.CheckValidProductByRevisionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckValidProductByRevisionCompleted(this, new CheckValidProductByRevisionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckValidProductByRevisionAsync(int revisionId, string productId) {
            this.CheckValidProductByRevisionAsync(revisionId, productId, null);
        }
        
        public void CheckValidProductByRevisionAsync(int revisionId, string productId, object userState) {
            if ((this.onBeginCheckValidProductByRevisionDelegate == null)) {
                this.onBeginCheckValidProductByRevisionDelegate = new BeginOperationDelegate(this.OnBeginCheckValidProductByRevision);
            }
            if ((this.onEndCheckValidProductByRevisionDelegate == null)) {
                this.onEndCheckValidProductByRevisionDelegate = new EndOperationDelegate(this.OnEndCheckValidProductByRevision);
            }
            if ((this.onCheckValidProductByRevisionCompletedDelegate == null)) {
                this.onCheckValidProductByRevisionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckValidProductByRevisionCompleted);
            }
            base.InvokeAsync(this.onBeginCheckValidProductByRevisionDelegate, new object[] {
                        revisionId,
                        productId}, this.onEndCheckValidProductByRevisionDelegate, this.onCheckValidProductByRevisionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(string revisionId, string areaName, string groupName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(revisionId, areaName, groupName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(System.IAsyncResult result) {
            return base.Channel.EndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(result);
        }
        
        private System.IAsyncResult OnBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionId = ((string)(inValues[0]));
            string areaName = ((string)(inValues[1]));
            string groupName = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(revisionId, areaName, groupName, callback, asyncState);
        }
        
        private object[] OnEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompleted(object state) {
            if ((this.GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompleted(this, new GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceAsync(string revisionId, string areaName, string groupName) {
            this.GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceAsync(revisionId, areaName, groupName, null);
        }
        
        public void GetOptionTreeAsOptionTreeProductsForEstimateItemReplaceAsync(string revisionId, string areaName, string groupName, object userState) {
            if ((this.onBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate == null)) {
                this.onBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate = new BeginOperationDelegate(this.OnBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace);
            }
            if ((this.onEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate == null)) {
                this.onEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate = new EndOperationDelegate(this.OnEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace);
            }
            if ((this.onGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedDelegate == null)) {
                this.onGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate, new object[] {
                        revisionId,
                        areaName,
                        groupName}, this.onEndGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceDelegate, this.onGetOptionTreeAsOptionTreeProductsForEstimateItemReplaceCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetOptionTreeAsOptionTreeProducts(string revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptionTreeAsOptionTreeProducts(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetOptionTreeAsOptionTreeProducts(System.IAsyncResult result) {
            return base.Channel.EndGetOptionTreeAsOptionTreeProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetOptionTreeAsOptionTreeProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetOptionTreeAsOptionTreeProducts(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetOptionTreeAsOptionTreeProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetOptionTreeAsOptionTreeProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionTreeAsOptionTreeProductsCompleted(object state) {
            if ((this.GetOptionTreeAsOptionTreeProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionTreeAsOptionTreeProductsCompleted(this, new GetOptionTreeAsOptionTreeProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionTreeAsOptionTreeProductsAsync(string revisionid) {
            this.GetOptionTreeAsOptionTreeProductsAsync(revisionid, null);
        }
        
        public void GetOptionTreeAsOptionTreeProductsAsync(string revisionid, object userState) {
            if ((this.onBeginGetOptionTreeAsOptionTreeProductsDelegate == null)) {
                this.onBeginGetOptionTreeAsOptionTreeProductsDelegate = new BeginOperationDelegate(this.OnBeginGetOptionTreeAsOptionTreeProducts);
            }
            if ((this.onEndGetOptionTreeAsOptionTreeProductsDelegate == null)) {
                this.onEndGetOptionTreeAsOptionTreeProductsDelegate = new EndOperationDelegate(this.OnEndGetOptionTreeAsOptionTreeProducts);
            }
            if ((this.onGetOptionTreeAsOptionTreeProductsCompletedDelegate == null)) {
                this.onGetOptionTreeAsOptionTreeProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionTreeAsOptionTreeProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionTreeAsOptionTreeProductsDelegate, new object[] {
                        revisionid}, this.onEndGetOptionTreeAsOptionTreeProductsDelegate, this.onGetOptionTreeAsOptionTreeProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetOptionTreeFromAllProducts(string regionid, string searchText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptionTreeFromAllProducts(regionid, searchText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetOptionTreeFromAllProducts(System.IAsyncResult result) {
            return base.Channel.EndGetOptionTreeFromAllProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetOptionTreeFromAllProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string regionid = ((string)(inValues[0]));
            string searchText = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetOptionTreeFromAllProducts(regionid, searchText, callback, asyncState);
        }
        
        private object[] OnEndGetOptionTreeFromAllProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetOptionTreeFromAllProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionTreeFromAllProductsCompleted(object state) {
            if ((this.GetOptionTreeFromAllProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionTreeFromAllProductsCompleted(this, new GetOptionTreeFromAllProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionTreeFromAllProductsAsync(string regionid, string searchText) {
            this.GetOptionTreeFromAllProductsAsync(regionid, searchText, null);
        }
        
        public void GetOptionTreeFromAllProductsAsync(string regionid, string searchText, object userState) {
            if ((this.onBeginGetOptionTreeFromAllProductsDelegate == null)) {
                this.onBeginGetOptionTreeFromAllProductsDelegate = new BeginOperationDelegate(this.OnBeginGetOptionTreeFromAllProducts);
            }
            if ((this.onEndGetOptionTreeFromAllProductsDelegate == null)) {
                this.onEndGetOptionTreeFromAllProductsDelegate = new EndOperationDelegate(this.OnEndGetOptionTreeFromAllProducts);
            }
            if ((this.onGetOptionTreeFromAllProductsCompletedDelegate == null)) {
                this.onGetOptionTreeFromAllProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionTreeFromAllProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionTreeFromAllProductsDelegate, new object[] {
                        regionid,
                        searchText}, this.onEndGetOptionTreeFromAllProductsDelegate, this.onGetOptionTreeFromAllProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetOptionTreeFromAllProductsExtended(int stateid, string regionid, int homeid, string productname, string productdesc, int areaid, int groupid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOptionTreeFromAllProductsExtended(stateid, regionid, homeid, productname, productdesc, areaid, groupid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetOptionTreeFromAllProductsExtended(System.IAsyncResult result) {
            return base.Channel.EndGetOptionTreeFromAllProductsExtended(result);
        }
        
        private System.IAsyncResult OnBeginGetOptionTreeFromAllProductsExtended(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stateid = ((int)(inValues[0]));
            string regionid = ((string)(inValues[1]));
            int homeid = ((int)(inValues[2]));
            string productname = ((string)(inValues[3]));
            string productdesc = ((string)(inValues[4]));
            int areaid = ((int)(inValues[5]));
            int groupid = ((int)(inValues[6]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetOptionTreeFromAllProductsExtended(stateid, regionid, homeid, productname, productdesc, areaid, groupid, callback, asyncState);
        }
        
        private object[] OnEndGetOptionTreeFromAllProductsExtended(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetOptionTreeFromAllProductsExtended(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOptionTreeFromAllProductsExtendedCompleted(object state) {
            if ((this.GetOptionTreeFromAllProductsExtendedCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOptionTreeFromAllProductsExtendedCompleted(this, new GetOptionTreeFromAllProductsExtendedCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOptionTreeFromAllProductsExtendedAsync(int stateid, string regionid, int homeid, string productname, string productdesc, int areaid, int groupid) {
            this.GetOptionTreeFromAllProductsExtendedAsync(stateid, regionid, homeid, productname, productdesc, areaid, groupid, null);
        }
        
        public void GetOptionTreeFromAllProductsExtendedAsync(int stateid, string regionid, int homeid, string productname, string productdesc, int areaid, int groupid, object userState) {
            if ((this.onBeginGetOptionTreeFromAllProductsExtendedDelegate == null)) {
                this.onBeginGetOptionTreeFromAllProductsExtendedDelegate = new BeginOperationDelegate(this.OnBeginGetOptionTreeFromAllProductsExtended);
            }
            if ((this.onEndGetOptionTreeFromAllProductsExtendedDelegate == null)) {
                this.onEndGetOptionTreeFromAllProductsExtendedDelegate = new EndOperationDelegate(this.OnEndGetOptionTreeFromAllProductsExtended);
            }
            if ((this.onGetOptionTreeFromAllProductsExtendedCompletedDelegate == null)) {
                this.onGetOptionTreeFromAllProductsExtendedCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOptionTreeFromAllProductsExtendedCompleted);
            }
            base.InvokeAsync(this.onBeginGetOptionTreeFromAllProductsExtendedDelegate, new object[] {
                        stateid,
                        regionid,
                        homeid,
                        productname,
                        productdesc,
                        areaid,
                        groupid}, this.onEndGetOptionTreeFromAllProductsExtendedDelegate, this.onGetOptionTreeFromAllProductsExtendedCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetSelectedPAG(string estimateid, string revisionnumber, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSelectedPAG(estimateid, revisionnumber, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetSelectedPAG(System.IAsyncResult result) {
            return base.Channel.EndGetSelectedPAG(result);
        }
        
        private System.IAsyncResult OnBeginGetSelectedPAG(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string estimateid = ((string)(inValues[0]));
            string revisionnumber = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetSelectedPAG(estimateid, revisionnumber, callback, asyncState);
        }
        
        private object[] OnEndGetSelectedPAG(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetSelectedPAG(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSelectedPAGCompleted(object state) {
            if ((this.GetSelectedPAGCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSelectedPAGCompleted(this, new GetSelectedPAGCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSelectedPAGAsync(string estimateid, string revisionnumber) {
            this.GetSelectedPAGAsync(estimateid, revisionnumber, null);
        }
        
        public void GetSelectedPAGAsync(string estimateid, string revisionnumber, object userState) {
            if ((this.onBeginGetSelectedPAGDelegate == null)) {
                this.onBeginGetSelectedPAGDelegate = new BeginOperationDelegate(this.OnBeginGetSelectedPAG);
            }
            if ((this.onEndGetSelectedPAGDelegate == null)) {
                this.onEndGetSelectedPAGDelegate = new EndOperationDelegate(this.OnEndGetSelectedPAG);
            }
            if ((this.onGetSelectedPAGCompletedDelegate == null)) {
                this.onGetSelectedPAGCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSelectedPAGCompleted);
            }
            base.InvokeAsync(this.onBeginGetSelectedPAGDelegate, new object[] {
                        estimateid,
                        revisionnumber}, this.onEndGetSelectedPAGDelegate, this.onGetSelectedPAGCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetCommentsForAnEstimate(string revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCommentsForAnEstimate(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetCommentsForAnEstimate(System.IAsyncResult result) {
            return base.Channel.EndGetCommentsForAnEstimate(result);
        }
        
        private System.IAsyncResult OnBeginGetCommentsForAnEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetCommentsForAnEstimate(revisionid, callback, asyncState);
        }
        
        private object[] OnEndGetCommentsForAnEstimate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetCommentsForAnEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCommentsForAnEstimateCompleted(object state) {
            if ((this.GetCommentsForAnEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCommentsForAnEstimateCompleted(this, new GetCommentsForAnEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCommentsForAnEstimateAsync(string revisionid) {
            this.GetCommentsForAnEstimateAsync(revisionid, null);
        }
        
        public void GetCommentsForAnEstimateAsync(string revisionid, object userState) {
            if ((this.onBeginGetCommentsForAnEstimateDelegate == null)) {
                this.onBeginGetCommentsForAnEstimateDelegate = new BeginOperationDelegate(this.OnBeginGetCommentsForAnEstimate);
            }
            if ((this.onEndGetCommentsForAnEstimateDelegate == null)) {
                this.onEndGetCommentsForAnEstimateDelegate = new EndOperationDelegate(this.OnEndGetCommentsForAnEstimate);
            }
            if ((this.onGetCommentsForAnEstimateCompletedDelegate == null)) {
                this.onGetCommentsForAnEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCommentsForAnEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginGetCommentsForAnEstimateDelegate, new object[] {
                        revisionid}, this.onEndGetCommentsForAnEstimateDelegate, this.onGetCommentsForAnEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAccessPermission(string revisionid, string userid, string roleid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccessPermission(revisionid, userid, roleid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAccessPermission(System.IAsyncResult result) {
            return base.Channel.EndGetAccessPermission(result);
        }
        
        private System.IAsyncResult OnBeginGetAccessPermission(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionid = ((string)(inValues[0]));
            string userid = ((string)(inValues[1]));
            string roleid = ((string)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAccessPermission(revisionid, userid, roleid, callback, asyncState);
        }
        
        private object[] OnEndGetAccessPermission(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAccessPermission(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccessPermissionCompleted(object state) {
            if ((this.GetAccessPermissionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccessPermissionCompleted(this, new GetAccessPermissionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccessPermissionAsync(string revisionid, string userid, string roleid) {
            this.GetAccessPermissionAsync(revisionid, userid, roleid, null);
        }
        
        public void GetAccessPermissionAsync(string revisionid, string userid, string roleid, object userState) {
            if ((this.onBeginGetAccessPermissionDelegate == null)) {
                this.onBeginGetAccessPermissionDelegate = new BeginOperationDelegate(this.OnBeginGetAccessPermission);
            }
            if ((this.onEndGetAccessPermissionDelegate == null)) {
                this.onEndGetAccessPermissionDelegate = new EndOperationDelegate(this.OnEndGetAccessPermission);
            }
            if ((this.onGetAccessPermissionCompletedDelegate == null)) {
                this.onGetAccessPermissionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccessPermissionCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccessPermissionDelegate, new object[] {
                        revisionid,
                        userid,
                        roleid}, this.onEndGetAccessPermissionDelegate, this.onGetAccessPermissionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetEstimateCount(int userId, int roleId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEstimateCount(userId, roleId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<int> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetEstimateCount(System.IAsyncResult result) {
            return base.Channel.EndGetEstimateCount(result);
        }
        
        private System.IAsyncResult OnBeginGetEstimateCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userId = ((int)(inValues[0]));
            int roleId = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetEstimateCount(userId, roleId, callback, asyncState);
        }
        
        private object[] OnEndGetEstimateCount(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<int> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetEstimateCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEstimateCountCompleted(object state) {
            if ((this.GetEstimateCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEstimateCountCompleted(this, new GetEstimateCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEstimateCountAsync(int userId, int roleId) {
            this.GetEstimateCountAsync(userId, roleId, null);
        }
        
        public void GetEstimateCountAsync(int userId, int roleId, object userState) {
            if ((this.onBeginGetEstimateCountDelegate == null)) {
                this.onBeginGetEstimateCountDelegate = new BeginOperationDelegate(this.OnBeginGetEstimateCount);
            }
            if ((this.onEndGetEstimateCountDelegate == null)) {
                this.onEndGetEstimateCountDelegate = new EndOperationDelegate(this.OnEndGetEstimateCount);
            }
            if ((this.onGetEstimateCountCompletedDelegate == null)) {
                this.onGetEstimateCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEstimateCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetEstimateCountDelegate, new object[] {
                        userId,
                        roleId}, this.onEndGetEstimateCountDelegate, this.onGetEstimateCountCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSaveSelectedItem(int selectedid, int revisionid, int pagid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveSelectedItem(selectedid, revisionid, pagid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        int Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSaveSelectedItem(System.IAsyncResult result) {
            return base.Channel.EndSaveSelectedItem(result);
        }
        
        private System.IAsyncResult OnBeginSaveSelectedItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int selectedid = ((int)(inValues[0]));
            int revisionid = ((int)(inValues[1]));
            int pagid = ((int)(inValues[2]));
            int userid = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSaveSelectedItem(selectedid, revisionid, pagid, userid, callback, asyncState);
        }
        
        private object[] OnEndSaveSelectedItem(System.IAsyncResult result) {
            int retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSaveSelectedItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveSelectedItemCompleted(object state) {
            if ((this.SaveSelectedItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveSelectedItemCompleted(this, new SaveSelectedItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveSelectedItemAsync(int selectedid, int revisionid, int pagid, int userid) {
            this.SaveSelectedItemAsync(selectedid, revisionid, pagid, userid, null);
        }
        
        public void SaveSelectedItemAsync(int selectedid, int revisionid, int pagid, int userid, object userState) {
            if ((this.onBeginSaveSelectedItemDelegate == null)) {
                this.onBeginSaveSelectedItemDelegate = new BeginOperationDelegate(this.OnBeginSaveSelectedItem);
            }
            if ((this.onEndSaveSelectedItemDelegate == null)) {
                this.onEndSaveSelectedItemDelegate = new EndOperationDelegate(this.OnEndSaveSelectedItem);
            }
            if ((this.onSaveSelectedItemCompletedDelegate == null)) {
                this.onSaveSelectedItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveSelectedItemCompleted);
            }
            base.InvokeAsync(this.onBeginSaveSelectedItemDelegate, new object[] {
                        selectedid,
                        revisionid,
                        pagid,
                        userid}, this.onEndSaveSelectedItemDelegate, this.onSaveSelectedItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSaveEditItemDetails(int selectedid, int revisionid, decimal qty, decimal sellprice, string productdescription, string extradescription, string internaldescription, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveEditItemDetails(selectedid, revisionid, qty, sellprice, productdescription, extradescription, internaldescription, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSaveEditItemDetails(System.IAsyncResult result) {
            return base.Channel.EndSaveEditItemDetails(result);
        }
        
        private System.IAsyncResult OnBeginSaveEditItemDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int selectedid = ((int)(inValues[0]));
            int revisionid = ((int)(inValues[1]));
            decimal qty = ((decimal)(inValues[2]));
            decimal sellprice = ((decimal)(inValues[3]));
            string productdescription = ((string)(inValues[4]));
            string extradescription = ((string)(inValues[5]));
            string internaldescription = ((string)(inValues[6]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSaveEditItemDetails(selectedid, revisionid, qty, sellprice, productdescription, extradescription, internaldescription, callback, asyncState);
        }
        
        private object[] OnEndSaveEditItemDetails(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSaveEditItemDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveEditItemDetailsCompleted(object state) {
            if ((this.SaveEditItemDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveEditItemDetailsCompleted(this, new SaveEditItemDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveEditItemDetailsAsync(int selectedid, int revisionid, decimal qty, decimal sellprice, string productdescription, string extradescription, string internaldescription) {
            this.SaveEditItemDetailsAsync(selectedid, revisionid, qty, sellprice, productdescription, extradescription, internaldescription, null);
        }
        
        public void SaveEditItemDetailsAsync(int selectedid, int revisionid, decimal qty, decimal sellprice, string productdescription, string extradescription, string internaldescription, object userState) {
            if ((this.onBeginSaveEditItemDetailsDelegate == null)) {
                this.onBeginSaveEditItemDetailsDelegate = new BeginOperationDelegate(this.OnBeginSaveEditItemDetails);
            }
            if ((this.onEndSaveEditItemDetailsDelegate == null)) {
                this.onEndSaveEditItemDetailsDelegate = new EndOperationDelegate(this.OnEndSaveEditItemDetails);
            }
            if ((this.onSaveEditItemDetailsCompletedDelegate == null)) {
                this.onSaveEditItemDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveEditItemDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveEditItemDetailsDelegate, new object[] {
                        selectedid,
                        revisionid,
                        qty,
                        sellprice,
                        productdescription,
                        extradescription,
                        internaldescription}, this.onEndSaveEditItemDetailsDelegate, this.onSaveEditItemDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginRemoveItem(int selectedid, int estimateid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveItem(selectedid, estimateid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndRemoveItem(System.IAsyncResult result) {
            return base.Channel.EndRemoveItem(result);
        }
        
        private System.IAsyncResult OnBeginRemoveItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int selectedid = ((int)(inValues[0]));
            int estimateid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginRemoveItem(selectedid, estimateid, callback, asyncState);
        }
        
        private object[] OnEndRemoveItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndRemoveItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveItemCompleted(object state) {
            if ((this.RemoveItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveItemCompleted(this, new RemoveItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveItemAsync(int selectedid, int estimateid) {
            this.RemoveItemAsync(selectedid, estimateid, null);
        }
        
        public void RemoveItemAsync(int selectedid, int estimateid, object userState) {
            if ((this.onBeginRemoveItemDelegate == null)) {
                this.onBeginRemoveItemDelegate = new BeginOperationDelegate(this.OnBeginRemoveItem);
            }
            if ((this.onEndRemoveItemDelegate == null)) {
                this.onEndRemoveItemDelegate = new EndOperationDelegate(this.OnEndRemoveItem);
            }
            if ((this.onRemoveItemCompletedDelegate == null)) {
                this.onRemoveItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveItemCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveItemDelegate, new object[] {
                        selectedid,
                        estimateid}, this.onEndRemoveItemDelegate, this.onRemoveItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyItemFromOptionTreeToEstimate(int estimatedetailsid, int revisiondetailsid, int revisionid, int productareagroupid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyItemFromOptionTreeToEstimate(estimatedetailsid, revisiondetailsid, revisionid, productareagroupid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyItemFromOptionTreeToEstimate(System.IAsyncResult result) {
            return base.Channel.EndCopyItemFromOptionTreeToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginCopyItemFromOptionTreeToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimatedetailsid = ((int)(inValues[0]));
            int revisiondetailsid = ((int)(inValues[1]));
            int revisionid = ((int)(inValues[2]));
            int productareagroupid = ((int)(inValues[3]));
            int userid = ((int)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyItemFromOptionTreeToEstimate(estimatedetailsid, revisiondetailsid, revisionid, productareagroupid, userid, callback, asyncState);
        }
        
        private object[] OnEndCopyItemFromOptionTreeToEstimate(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyItemFromOptionTreeToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyItemFromOptionTreeToEstimateCompleted(object state) {
            if ((this.CopyItemFromOptionTreeToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyItemFromOptionTreeToEstimateCompleted(this, new CopyItemFromOptionTreeToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyItemFromOptionTreeToEstimateAsync(int estimatedetailsid, int revisiondetailsid, int revisionid, int productareagroupid, int userid) {
            this.CopyItemFromOptionTreeToEstimateAsync(estimatedetailsid, revisiondetailsid, revisionid, productareagroupid, userid, null);
        }
        
        public void CopyItemFromOptionTreeToEstimateAsync(int estimatedetailsid, int revisiondetailsid, int revisionid, int productareagroupid, int userid, object userState) {
            if ((this.onBeginCopyItemFromOptionTreeToEstimateDelegate == null)) {
                this.onBeginCopyItemFromOptionTreeToEstimateDelegate = new BeginOperationDelegate(this.OnBeginCopyItemFromOptionTreeToEstimate);
            }
            if ((this.onEndCopyItemFromOptionTreeToEstimateDelegate == null)) {
                this.onEndCopyItemFromOptionTreeToEstimateDelegate = new EndOperationDelegate(this.OnEndCopyItemFromOptionTreeToEstimate);
            }
            if ((this.onCopyItemFromOptionTreeToEstimateCompletedDelegate == null)) {
                this.onCopyItemFromOptionTreeToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyItemFromOptionTreeToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyItemFromOptionTreeToEstimateDelegate, new object[] {
                        estimatedetailsid,
                        revisiondetailsid,
                        revisionid,
                        productareagroupid,
                        userid}, this.onEndCopyItemFromOptionTreeToEstimateDelegate, this.onCopyItemFromOptionTreeToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyItemFromMasterHomeToEstimate(int regionid, int optionid, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyItemFromMasterHomeToEstimate(regionid, optionid, revisionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyItemFromMasterHomeToEstimate(System.IAsyncResult result) {
            return base.Channel.EndCopyItemFromMasterHomeToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginCopyItemFromMasterHomeToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int regionid = ((int)(inValues[0]));
            int optionid = ((int)(inValues[1]));
            int revisionid = ((int)(inValues[2]));
            int userid = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyItemFromMasterHomeToEstimate(regionid, optionid, revisionid, userid, callback, asyncState);
        }
        
        private object[] OnEndCopyItemFromMasterHomeToEstimate(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyItemFromMasterHomeToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyItemFromMasterHomeToEstimateCompleted(object state) {
            if ((this.CopyItemFromMasterHomeToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyItemFromMasterHomeToEstimateCompleted(this, new CopyItemFromMasterHomeToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyItemFromMasterHomeToEstimateAsync(int regionid, int optionid, int revisionid, int userid) {
            this.CopyItemFromMasterHomeToEstimateAsync(regionid, optionid, revisionid, userid, null);
        }
        
        public void CopyItemFromMasterHomeToEstimateAsync(int regionid, int optionid, int revisionid, int userid, object userState) {
            if ((this.onBeginCopyItemFromMasterHomeToEstimateDelegate == null)) {
                this.onBeginCopyItemFromMasterHomeToEstimateDelegate = new BeginOperationDelegate(this.OnBeginCopyItemFromMasterHomeToEstimate);
            }
            if ((this.onEndCopyItemFromMasterHomeToEstimateDelegate == null)) {
                this.onEndCopyItemFromMasterHomeToEstimateDelegate = new EndOperationDelegate(this.OnEndCopyItemFromMasterHomeToEstimate);
            }
            if ((this.onCopyItemFromMasterHomeToEstimateCompletedDelegate == null)) {
                this.onCopyItemFromMasterHomeToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyItemFromMasterHomeToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyItemFromMasterHomeToEstimateDelegate, new object[] {
                        regionid,
                        optionid,
                        revisionid,
                        userid}, this.onEndCopyItemFromMasterHomeToEstimateDelegate, this.onCopyItemFromMasterHomeToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyItemFromAllProductsToEstimate(int regionid, string productid, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyItemFromAllProductsToEstimate(regionid, productid, revisionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyItemFromAllProductsToEstimate(System.IAsyncResult result) {
            return base.Channel.EndCopyItemFromAllProductsToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginCopyItemFromAllProductsToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int regionid = ((int)(inValues[0]));
            string productid = ((string)(inValues[1]));
            int revisionid = ((int)(inValues[2]));
            int userid = ((int)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyItemFromAllProductsToEstimate(regionid, productid, revisionid, userid, callback, asyncState);
        }
        
        private object[] OnEndCopyItemFromAllProductsToEstimate(System.IAsyncResult result) {
            Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyItemFromAllProductsToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyItemFromAllProductsToEstimateCompleted(object state) {
            if ((this.CopyItemFromAllProductsToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyItemFromAllProductsToEstimateCompleted(this, new CopyItemFromAllProductsToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyItemFromAllProductsToEstimateAsync(int regionid, string productid, int revisionid, int userid) {
            this.CopyItemFromAllProductsToEstimateAsync(regionid, productid, revisionid, userid, null);
        }
        
        public void CopyItemFromAllProductsToEstimateAsync(int regionid, string productid, int revisionid, int userid, object userState) {
            if ((this.onBeginCopyItemFromAllProductsToEstimateDelegate == null)) {
                this.onBeginCopyItemFromAllProductsToEstimateDelegate = new BeginOperationDelegate(this.OnBeginCopyItemFromAllProductsToEstimate);
            }
            if ((this.onEndCopyItemFromAllProductsToEstimateDelegate == null)) {
                this.onEndCopyItemFromAllProductsToEstimateDelegate = new EndOperationDelegate(this.OnEndCopyItemFromAllProductsToEstimate);
            }
            if ((this.onCopyItemFromAllProductsToEstimateCompletedDelegate == null)) {
                this.onCopyItemFromAllProductsToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyItemFromAllProductsToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyItemFromAllProductsToEstimateDelegate, new object[] {
                        regionid,
                        productid,
                        revisionid,
                        userid}, this.onEndCopyItemFromAllProductsToEstimateDelegate, this.onCopyItemFromAllProductsToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSynchronizeNewOptionToEstimate(int revisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSynchronizeNewOptionToEstimate(revisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSynchronizeNewOptionToEstimate(System.IAsyncResult result) {
            return base.Channel.EndSynchronizeNewOptionToEstimate(result);
        }
        
        private System.IAsyncResult OnBeginSynchronizeNewOptionToEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSynchronizeNewOptionToEstimate(revisionid, callback, asyncState);
        }
        
        private object[] OnEndSynchronizeNewOptionToEstimate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSynchronizeNewOptionToEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSynchronizeNewOptionToEstimateCompleted(object state) {
            if ((this.SynchronizeNewOptionToEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SynchronizeNewOptionToEstimateCompleted(this, new SynchronizeNewOptionToEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SynchronizeNewOptionToEstimateAsync(int revisionid) {
            this.SynchronizeNewOptionToEstimateAsync(revisionid, null);
        }
        
        public void SynchronizeNewOptionToEstimateAsync(int revisionid, object userState) {
            if ((this.onBeginSynchronizeNewOptionToEstimateDelegate == null)) {
                this.onBeginSynchronizeNewOptionToEstimateDelegate = new BeginOperationDelegate(this.OnBeginSynchronizeNewOptionToEstimate);
            }
            if ((this.onEndSynchronizeNewOptionToEstimateDelegate == null)) {
                this.onEndSynchronizeNewOptionToEstimateDelegate = new EndOperationDelegate(this.OnEndSynchronizeNewOptionToEstimate);
            }
            if ((this.onSynchronizeNewOptionToEstimateCompletedDelegate == null)) {
                this.onSynchronizeNewOptionToEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSynchronizeNewOptionToEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginSynchronizeNewOptionToEstimateDelegate, new object[] {
                        revisionid}, this.onEndSynchronizeNewOptionToEstimateDelegate, this.onSynchronizeNewOptionToEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAdditionalNotesTemplateAndProducts(int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAdditionalNotesTemplateAndProducts(revisionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAdditionalNotesTemplateAndProducts(System.IAsyncResult result) {
            return base.Channel.EndGetAdditionalNotesTemplateAndProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetAdditionalNotesTemplateAndProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int revisionid = ((int)(inValues[0]));
            int userid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAdditionalNotesTemplateAndProducts(revisionid, userid, callback, asyncState);
        }
        
        private object[] OnEndGetAdditionalNotesTemplateAndProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAdditionalNotesTemplateAndProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAdditionalNotesTemplateAndProductsCompleted(object state) {
            if ((this.GetAdditionalNotesTemplateAndProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAdditionalNotesTemplateAndProductsCompleted(this, new GetAdditionalNotesTemplateAndProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAdditionalNotesTemplateAndProductsAsync(int revisionid, int userid) {
            this.GetAdditionalNotesTemplateAndProductsAsync(revisionid, userid, null);
        }
        
        public void GetAdditionalNotesTemplateAndProductsAsync(int revisionid, int userid, object userState) {
            if ((this.onBeginGetAdditionalNotesTemplateAndProductsDelegate == null)) {
                this.onBeginGetAdditionalNotesTemplateAndProductsDelegate = new BeginOperationDelegate(this.OnBeginGetAdditionalNotesTemplateAndProducts);
            }
            if ((this.onEndGetAdditionalNotesTemplateAndProductsDelegate == null)) {
                this.onEndGetAdditionalNotesTemplateAndProductsDelegate = new EndOperationDelegate(this.OnEndGetAdditionalNotesTemplateAndProducts);
            }
            if ((this.onGetAdditionalNotesTemplateAndProductsCompletedDelegate == null)) {
                this.onGetAdditionalNotesTemplateAndProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAdditionalNotesTemplateAndProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAdditionalNotesTemplateAndProductsDelegate, new object[] {
                        revisionid,
                        userid}, this.onEndGetAdditionalNotesTemplateAndProductsDelegate, this.onGetAdditionalNotesTemplateAndProductsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAdditionalNotesTemplateAndProductsByRegion(string templatename, string subregionid, int userid, int active, int selectedroleid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAdditionalNotesTemplateAndProductsByRegion(templatename, subregionid, userid, active, selectedroleid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAdditionalNotesTemplateAndProductsByRegion(System.IAsyncResult result) {
            return base.Channel.EndGetAdditionalNotesTemplateAndProductsByRegion(result);
        }
        
        private System.IAsyncResult OnBeginGetAdditionalNotesTemplateAndProductsByRegion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templatename = ((string)(inValues[0]));
            string subregionid = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            int active = ((int)(inValues[3]));
            int selectedroleid = ((int)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAdditionalNotesTemplateAndProductsByRegion(templatename, subregionid, userid, active, selectedroleid, callback, asyncState);
        }
        
        private object[] OnEndGetAdditionalNotesTemplateAndProductsByRegion(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAdditionalNotesTemplateAndProductsByRegion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAdditionalNotesTemplateAndProductsByRegionCompleted(object state) {
            if ((this.GetAdditionalNotesTemplateAndProductsByRegionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAdditionalNotesTemplateAndProductsByRegionCompleted(this, new GetAdditionalNotesTemplateAndProductsByRegionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAdditionalNotesTemplateAndProductsByRegionAsync(string templatename, string subregionid, int userid, int active, int selectedroleid) {
            this.GetAdditionalNotesTemplateAndProductsByRegionAsync(templatename, subregionid, userid, active, selectedroleid, null);
        }
        
        public void GetAdditionalNotesTemplateAndProductsByRegionAsync(string templatename, string subregionid, int userid, int active, int selectedroleid, object userState) {
            if ((this.onBeginGetAdditionalNotesTemplateAndProductsByRegionDelegate == null)) {
                this.onBeginGetAdditionalNotesTemplateAndProductsByRegionDelegate = new BeginOperationDelegate(this.OnBeginGetAdditionalNotesTemplateAndProductsByRegion);
            }
            if ((this.onEndGetAdditionalNotesTemplateAndProductsByRegionDelegate == null)) {
                this.onEndGetAdditionalNotesTemplateAndProductsByRegionDelegate = new EndOperationDelegate(this.OnEndGetAdditionalNotesTemplateAndProductsByRegion);
            }
            if ((this.onGetAdditionalNotesTemplateAndProductsByRegionCompletedDelegate == null)) {
                this.onGetAdditionalNotesTemplateAndProductsByRegionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAdditionalNotesTemplateAndProductsByRegionCompleted);
            }
            base.InvokeAsync(this.onBeginGetAdditionalNotesTemplateAndProductsByRegionDelegate, new object[] {
                        templatename,
                        subregionid,
                        userid,
                        active,
                        selectedroleid}, this.onEndGetAdditionalNotesTemplateAndProductsByRegionDelegate, this.onGetAdditionalNotesTemplateAndProductsByRegionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateNoteTemplate(int templateid, string templatename, int status, int userid, string action, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNoteTemplate(templateid, templatename, status, userid, action, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateNoteTemplate(System.IAsyncResult result) {
            return base.Channel.EndUpdateNoteTemplate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNoteTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int templateid = ((int)(inValues[0]));
            string templatename = ((string)(inValues[1]));
            int status = ((int)(inValues[2]));
            int userid = ((int)(inValues[3]));
            string action = ((string)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateNoteTemplate(templateid, templatename, status, userid, action, callback, asyncState);
        }
        
        private object[] OnEndUpdateNoteTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateNoteTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNoteTemplateCompleted(object state) {
            if ((this.UpdateNoteTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNoteTemplateCompleted(this, new UpdateNoteTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNoteTemplateAsync(int templateid, string templatename, int status, int userid, string action) {
            this.UpdateNoteTemplateAsync(templateid, templatename, status, userid, action, null);
        }
        
        public void UpdateNoteTemplateAsync(int templateid, string templatename, int status, int userid, string action, object userState) {
            if ((this.onBeginUpdateNoteTemplateDelegate == null)) {
                this.onBeginUpdateNoteTemplateDelegate = new BeginOperationDelegate(this.OnBeginUpdateNoteTemplate);
            }
            if ((this.onEndUpdateNoteTemplateDelegate == null)) {
                this.onEndUpdateNoteTemplateDelegate = new EndOperationDelegate(this.OnEndUpdateNoteTemplate);
            }
            if ((this.onUpdateNoteTemplateCompletedDelegate == null)) {
                this.onUpdateNoteTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNoteTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNoteTemplateDelegate, new object[] {
                        templateid,
                        templatename,
                        status,
                        userid,
                        action}, this.onEndUpdateNoteTemplateDelegate, this.onUpdateNoteTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckNewNoteTemplateNameExists(int templateid, string templatename, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckNewNoteTemplateNameExists(templateid, templatename, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckNewNoteTemplateNameExists(System.IAsyncResult result) {
            return base.Channel.EndCheckNewNoteTemplateNameExists(result);
        }
        
        private System.IAsyncResult OnBeginCheckNewNoteTemplateNameExists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int templateid = ((int)(inValues[0]));
            string templatename = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckNewNoteTemplateNameExists(templateid, templatename, callback, asyncState);
        }
        
        private object[] OnEndCheckNewNoteTemplateNameExists(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckNewNoteTemplateNameExists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckNewNoteTemplateNameExistsCompleted(object state) {
            if ((this.CheckNewNoteTemplateNameExistsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckNewNoteTemplateNameExistsCompleted(this, new CheckNewNoteTemplateNameExistsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckNewNoteTemplateNameExistsAsync(int templateid, string templatename) {
            this.CheckNewNoteTemplateNameExistsAsync(templateid, templatename, null);
        }
        
        public void CheckNewNoteTemplateNameExistsAsync(int templateid, string templatename, object userState) {
            if ((this.onBeginCheckNewNoteTemplateNameExistsDelegate == null)) {
                this.onBeginCheckNewNoteTemplateNameExistsDelegate = new BeginOperationDelegate(this.OnBeginCheckNewNoteTemplateNameExists);
            }
            if ((this.onEndCheckNewNoteTemplateNameExistsDelegate == null)) {
                this.onEndCheckNewNoteTemplateNameExistsDelegate = new EndOperationDelegate(this.OnEndCheckNewNoteTemplateNameExists);
            }
            if ((this.onCheckNewNoteTemplateNameExistsCompletedDelegate == null)) {
                this.onCheckNewNoteTemplateNameExistsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckNewNoteTemplateNameExistsCompleted);
            }
            base.InvokeAsync(this.onBeginCheckNewNoteTemplateNameExistsDelegate, new object[] {
                        templateid,
                        templatename}, this.onEndCheckNewNoteTemplateNameExistsDelegate, this.onCheckNewNoteTemplateNameExistsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAddAdditonalNotesTemplate(string templatename, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddAdditonalNotesTemplate(templatename, revisionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAddAdditonalNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndAddAdditonalNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddAdditonalNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templatename = ((string)(inValues[0]));
            int revisionid = ((int)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAddAdditonalNotesTemplate(templatename, revisionid, userid, callback, asyncState);
        }
        
        private object[] OnEndAddAdditonalNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAddAdditonalNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddAdditonalNotesTemplateCompleted(object state) {
            if ((this.AddAdditonalNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddAdditonalNotesTemplateCompleted(this, new AddAdditonalNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddAdditonalNotesTemplateAsync(string templatename, int revisionid, int userid) {
            this.AddAdditonalNotesTemplateAsync(templatename, revisionid, userid, null);
        }
        
        public void AddAdditonalNotesTemplateAsync(string templatename, int revisionid, int userid, object userState) {
            if ((this.onBeginAddAdditonalNotesTemplateDelegate == null)) {
                this.onBeginAddAdditonalNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddAdditonalNotesTemplate);
            }
            if ((this.onEndAddAdditonalNotesTemplateDelegate == null)) {
                this.onEndAddAdditonalNotesTemplateDelegate = new EndOperationDelegate(this.OnEndAddAdditonalNotesTemplate);
            }
            if ((this.onAddAdditonalNotesTemplateCompletedDelegate == null)) {
                this.onAddAdditonalNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddAdditonalNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddAdditonalNotesTemplateDelegate, new object[] {
                        templatename,
                        revisionid,
                        userid}, this.onEndAddAdditonalNotesTemplateDelegate, this.onAddAdditonalNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetSQSConfiguration(string configCode, string codeValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSQSConfiguration(configCode, codeValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetSQSConfiguration(System.IAsyncResult result) {
            return base.Channel.EndGetSQSConfiguration(result);
        }
        
        private System.IAsyncResult OnBeginGetSQSConfiguration(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string configCode = ((string)(inValues[0]));
            string codeValue = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetSQSConfiguration(configCode, codeValue, callback, asyncState);
        }
        
        private object[] OnEndGetSQSConfiguration(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetSQSConfiguration(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSQSConfigurationCompleted(object state) {
            if ((this.GetSQSConfigurationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSQSConfigurationCompleted(this, new GetSQSConfigurationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSQSConfigurationAsync(string configCode, string codeValue) {
            this.GetSQSConfigurationAsync(configCode, codeValue, null);
        }
        
        public void GetSQSConfigurationAsync(string configCode, string codeValue, object userState) {
            if ((this.onBeginGetSQSConfigurationDelegate == null)) {
                this.onBeginGetSQSConfigurationDelegate = new BeginOperationDelegate(this.OnBeginGetSQSConfiguration);
            }
            if ((this.onEndGetSQSConfigurationDelegate == null)) {
                this.onEndGetSQSConfigurationDelegate = new EndOperationDelegate(this.OnEndGetSQSConfiguration);
            }
            if ((this.onGetSQSConfigurationCompletedDelegate == null)) {
                this.onGetSQSConfigurationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSQSConfigurationCompleted);
            }
            base.InvokeAsync(this.onBeginGetSQSConfigurationDelegate, new object[] {
                        configCode,
                        codeValue}, this.onEndGetSQSConfigurationDelegate, this.onGetSQSConfigurationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetSalesRegionByState(string stateid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSalesRegionByState(stateid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetSalesRegionByState(System.IAsyncResult result) {
            return base.Channel.EndGetSalesRegionByState(result);
        }
        
        private System.IAsyncResult OnBeginGetSalesRegionByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stateid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetSalesRegionByState(stateid, callback, asyncState);
        }
        
        private object[] OnEndGetSalesRegionByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetSalesRegionByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSalesRegionByStateCompleted(object state) {
            if ((this.GetSalesRegionByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSalesRegionByStateCompleted(this, new GetSalesRegionByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSalesRegionByStateAsync(string stateid) {
            this.GetSalesRegionByStateAsync(stateid, null);
        }
        
        public void GetSalesRegionByStateAsync(string stateid, object userState) {
            if ((this.onBeginGetSalesRegionByStateDelegate == null)) {
                this.onBeginGetSalesRegionByStateDelegate = new BeginOperationDelegate(this.OnBeginGetSalesRegionByState);
            }
            if ((this.onEndGetSalesRegionByStateDelegate == null)) {
                this.onEndGetSalesRegionByStateDelegate = new EndOperationDelegate(this.OnEndGetSalesRegionByState);
            }
            if ((this.onGetSalesRegionByStateCompletedDelegate == null)) {
                this.onGetSalesRegionByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSalesRegionByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetSalesRegionByStateDelegate, new object[] {
                        stateid}, this.onEndGetSalesRegionByStateDelegate, this.onGetSalesRegionByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetPriceRegionByState(string stateid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPriceRegionByState(stateid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetPriceRegionByState(System.IAsyncResult result) {
            return base.Channel.EndGetPriceRegionByState(result);
        }
        
        private System.IAsyncResult OnBeginGetPriceRegionByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string stateid = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetPriceRegionByState(stateid, callback, asyncState);
        }
        
        private object[] OnEndGetPriceRegionByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetPriceRegionByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPriceRegionByStateCompleted(object state) {
            if ((this.GetPriceRegionByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPriceRegionByStateCompleted(this, new GetPriceRegionByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPriceRegionByStateAsync(string stateid) {
            this.GetPriceRegionByStateAsync(stateid, null);
        }
        
        public void GetPriceRegionByStateAsync(string stateid, object userState) {
            if ((this.onBeginGetPriceRegionByStateDelegate == null)) {
                this.onBeginGetPriceRegionByStateDelegate = new BeginOperationDelegate(this.OnBeginGetPriceRegionByState);
            }
            if ((this.onEndGetPriceRegionByStateDelegate == null)) {
                this.onEndGetPriceRegionByStateDelegate = new EndOperationDelegate(this.OnEndGetPriceRegionByState);
            }
            if ((this.onGetPriceRegionByStateCompletedDelegate == null)) {
                this.onGetPriceRegionByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPriceRegionByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetPriceRegionByStateDelegate, new object[] {
                        stateid}, this.onEndGetPriceRegionByStateDelegate, this.onGetPriceRegionByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateSalesEstimateLog(string username, Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action, int estimateRevisionId, string extraDescription, int reasonCode, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateSalesEstimateLog(username, action, estimateRevisionId, extraDescription, reasonCode, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateSalesEstimateLog(System.IAsyncResult result) {
            return base.Channel.EndCreateSalesEstimateLog(result);
        }
        
        private System.IAsyncResult OnBeginCreateSalesEstimateLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction)(inValues[1]));
            int estimateRevisionId = ((int)(inValues[2]));
            string extraDescription = ((string)(inValues[3]));
            int reasonCode = ((int)(inValues[4]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateSalesEstimateLog(username, action, estimateRevisionId, extraDescription, reasonCode, callback, asyncState);
        }
        
        private object[] OnEndCreateSalesEstimateLog(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateSalesEstimateLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateSalesEstimateLogCompleted(object state) {
            if ((this.CreateSalesEstimateLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateSalesEstimateLogCompleted(this, new CreateSalesEstimateLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateSalesEstimateLogAsync(string username, Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action, int estimateRevisionId, string extraDescription, int reasonCode) {
            this.CreateSalesEstimateLogAsync(username, action, estimateRevisionId, extraDescription, reasonCode, null);
        }
        
        public void CreateSalesEstimateLogAsync(string username, Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action, int estimateRevisionId, string extraDescription, int reasonCode, object userState) {
            if ((this.onBeginCreateSalesEstimateLogDelegate == null)) {
                this.onBeginCreateSalesEstimateLogDelegate = new BeginOperationDelegate(this.OnBeginCreateSalesEstimateLog);
            }
            if ((this.onEndCreateSalesEstimateLogDelegate == null)) {
                this.onEndCreateSalesEstimateLogDelegate = new EndOperationDelegate(this.OnEndCreateSalesEstimateLog);
            }
            if ((this.onCreateSalesEstimateLogCompletedDelegate == null)) {
                this.onCreateSalesEstimateLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateSalesEstimateLogCompleted);
            }
            base.InvokeAsync(this.onBeginCreateSalesEstimateLogDelegate, new object[] {
                        username,
                        action,
                        estimateRevisionId,
                        extraDescription,
                        reasonCode}, this.onEndCreateSalesEstimateLogDelegate, this.onCreateSalesEstimateLogCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSetContractStatus(string username, int estimateRevisionId, Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetContractStatus(username, estimateRevisionId, status, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSetContractStatus(System.IAsyncResult result) {
            return base.Channel.EndSetContractStatus(result);
        }
        
        private System.IAsyncResult OnBeginSetContractStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            int estimateRevisionId = ((int)(inValues[1]));
            Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSetContractStatus(username, estimateRevisionId, status, callback, asyncState);
        }
        
        private object[] OnEndSetContractStatus(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSetContractStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetContractStatusCompleted(object state) {
            if ((this.SetContractStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetContractStatusCompleted(this, new SetContractStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetContractStatusAsync(string username, int estimateRevisionId, Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status) {
            this.SetContractStatusAsync(username, estimateRevisionId, status, null);
        }
        
        public void SetContractStatusAsync(string username, int estimateRevisionId, Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status, object userState) {
            if ((this.onBeginSetContractStatusDelegate == null)) {
                this.onBeginSetContractStatusDelegate = new BeginOperationDelegate(this.OnBeginSetContractStatus);
            }
            if ((this.onEndSetContractStatusDelegate == null)) {
                this.onEndSetContractStatusDelegate = new EndOperationDelegate(this.OnEndSetContractStatus);
            }
            if ((this.onSetContractStatusCompletedDelegate == null)) {
                this.onSetContractStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetContractStatusCompleted);
            }
            base.InvokeAsync(this.onBeginSetContractStatusDelegate, new object[] {
                        username,
                        estimateRevisionId,
                        status}, this.onEndSetContractStatusDelegate, this.onSetContractStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginRemoveItemFromNotesTemplate(string templateid, string productareagroupid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveItemFromNotesTemplate(templateid, productareagroupid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndRemoveItemFromNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndRemoveItemFromNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginRemoveItemFromNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateid = ((string)(inValues[0]));
            string productareagroupid = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginRemoveItemFromNotesTemplate(templateid, productareagroupid, userid, callback, asyncState);
        }
        
        private object[] OnEndRemoveItemFromNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndRemoveItemFromNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveItemFromNotesTemplateCompleted(object state) {
            if ((this.RemoveItemFromNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveItemFromNotesTemplateCompleted(this, new RemoveItemFromNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveItemFromNotesTemplateAsync(string templateid, string productareagroupid, int userid) {
            this.RemoveItemFromNotesTemplateAsync(templateid, productareagroupid, userid, null);
        }
        
        public void RemoveItemFromNotesTemplateAsync(string templateid, string productareagroupid, int userid, object userState) {
            if ((this.onBeginRemoveItemFromNotesTemplateDelegate == null)) {
                this.onBeginRemoveItemFromNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginRemoveItemFromNotesTemplate);
            }
            if ((this.onEndRemoveItemFromNotesTemplateDelegate == null)) {
                this.onEndRemoveItemFromNotesTemplateDelegate = new EndOperationDelegate(this.OnEndRemoveItemFromNotesTemplate);
            }
            if ((this.onRemoveItemFromNotesTemplateCompletedDelegate == null)) {
                this.onRemoveItemFromNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveItemFromNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveItemFromNotesTemplateDelegate, new object[] {
                        templateid,
                        productareagroupid,
                        userid}, this.onEndRemoveItemFromNotesTemplateDelegate, this.onRemoveItemFromNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetAvailableItemsForNotesTemplate(string templateid, string searchtext, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableItemsForNotesTemplate(templateid, searchtext, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetAvailableItemsForNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableItemsForNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableItemsForNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateid = ((string)(inValues[0]));
            string searchtext = ((string)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetAvailableItemsForNotesTemplate(templateid, searchtext, callback, asyncState);
        }
        
        private object[] OnEndGetAvailableItemsForNotesTemplate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetAvailableItemsForNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableItemsForNotesTemplateCompleted(object state) {
            if ((this.GetAvailableItemsForNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableItemsForNotesTemplateCompleted(this, new GetAvailableItemsForNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableItemsForNotesTemplateAsync(string templateid, string searchtext) {
            this.GetAvailableItemsForNotesTemplateAsync(templateid, searchtext, null);
        }
        
        public void GetAvailableItemsForNotesTemplateAsync(string templateid, string searchtext, object userState) {
            if ((this.onBeginGetAvailableItemsForNotesTemplateDelegate == null)) {
                this.onBeginGetAvailableItemsForNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableItemsForNotesTemplate);
            }
            if ((this.onEndGetAvailableItemsForNotesTemplateDelegate == null)) {
                this.onEndGetAvailableItemsForNotesTemplateDelegate = new EndOperationDelegate(this.OnEndGetAvailableItemsForNotesTemplate);
            }
            if ((this.onGetAvailableItemsForNotesTemplateCompletedDelegate == null)) {
                this.onGetAvailableItemsForNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableItemsForNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableItemsForNotesTemplateDelegate, new object[] {
                        templateid,
                        searchtext}, this.onEndGetAvailableItemsForNotesTemplateDelegate, this.onGetAvailableItemsForNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAddItemToNotesTemplate(string templateid, string selecteditemids, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddItemToNotesTemplate(templateid, selecteditemids, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAddItemToNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndAddItemToNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddItemToNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateid = ((string)(inValues[0]));
            string selecteditemids = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAddItemToNotesTemplate(templateid, selecteditemids, userid, callback, asyncState);
        }
        
        private object[] OnEndAddItemToNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAddItemToNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddItemToNotesTemplateCompleted(object state) {
            if ((this.AddItemToNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddItemToNotesTemplateCompleted(this, new AddItemToNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddItemToNotesTemplateAsync(string templateid, string selecteditemids, int userid) {
            this.AddItemToNotesTemplateAsync(templateid, selecteditemids, userid, null);
        }
        
        public void AddItemToNotesTemplateAsync(string templateid, string selecteditemids, int userid, object userState) {
            if ((this.onBeginAddItemToNotesTemplateDelegate == null)) {
                this.onBeginAddItemToNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddItemToNotesTemplate);
            }
            if ((this.onEndAddItemToNotesTemplateDelegate == null)) {
                this.onEndAddItemToNotesTemplateDelegate = new EndOperationDelegate(this.OnEndAddItemToNotesTemplate);
            }
            if ((this.onAddItemToNotesTemplateCompletedDelegate == null)) {
                this.onAddItemToNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddItemToNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddItemToNotesTemplateDelegate, new object[] {
                        templateid,
                        selecteditemids,
                        userid}, this.onEndAddItemToNotesTemplateDelegate, this.onAddItemToNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginAddNewNotesTemplate(string templatename, string regionid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddNewNotesTemplate(templatename, regionid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndAddNewNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndAddNewNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginAddNewNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templatename = ((string)(inValues[0]));
            string regionid = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginAddNewNotesTemplate(templatename, regionid, userid, callback, asyncState);
        }
        
        private object[] OnEndAddNewNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndAddNewNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddNewNotesTemplateCompleted(object state) {
            if ((this.AddNewNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddNewNotesTemplateCompleted(this, new AddNewNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddNewNotesTemplateAsync(string templatename, string regionid, int userid) {
            this.AddNewNotesTemplateAsync(templatename, regionid, userid, null);
        }
        
        public void AddNewNotesTemplateAsync(string templatename, string regionid, int userid, object userState) {
            if ((this.onBeginAddNewNotesTemplateDelegate == null)) {
                this.onBeginAddNewNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginAddNewNotesTemplate);
            }
            if ((this.onEndAddNewNotesTemplateDelegate == null)) {
                this.onEndAddNewNotesTemplateDelegate = new EndOperationDelegate(this.OnEndAddNewNotesTemplate);
            }
            if ((this.onAddNewNotesTemplateCompletedDelegate == null)) {
                this.onAddNewNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddNewNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginAddNewNotesTemplateDelegate, new object[] {
                        templatename,
                        regionid,
                        userid}, this.onEndAddNewNotesTemplateDelegate, this.onAddNewNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginRemoveNotesTemplate(string templateid, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRemoveNotesTemplate(templateid, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndRemoveNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndRemoveNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginRemoveNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateid = ((string)(inValues[0]));
            int userid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginRemoveNotesTemplate(templateid, userid, callback, asyncState);
        }
        
        private object[] OnEndRemoveNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndRemoveNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRemoveNotesTemplateCompleted(object state) {
            if ((this.RemoveNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RemoveNotesTemplateCompleted(this, new RemoveNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RemoveNotesTemplateAsync(string templateid, int userid) {
            this.RemoveNotesTemplateAsync(templateid, userid, null);
        }
        
        public void RemoveNotesTemplateAsync(string templateid, int userid, object userState) {
            if ((this.onBeginRemoveNotesTemplateDelegate == null)) {
                this.onBeginRemoveNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginRemoveNotesTemplate);
            }
            if ((this.onEndRemoveNotesTemplateDelegate == null)) {
                this.onEndRemoveNotesTemplateDelegate = new EndOperationDelegate(this.OnEndRemoveNotesTemplate);
            }
            if ((this.onRemoveNotesTemplateCompletedDelegate == null)) {
                this.onRemoveNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRemoveNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginRemoveNotesTemplateDelegate, new object[] {
                        templateid,
                        userid}, this.onEndRemoveNotesTemplateDelegate, this.onRemoveNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCopyNotesTemplate(string templatename, string regionid, int userid, string templateid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyNotesTemplate(templatename, regionid, userid, templateid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCopyNotesTemplate(System.IAsyncResult result) {
            return base.Channel.EndCopyNotesTemplate(result);
        }
        
        private System.IAsyncResult OnBeginCopyNotesTemplate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templatename = ((string)(inValues[0]));
            string regionid = ((string)(inValues[1]));
            int userid = ((int)(inValues[2]));
            string templateid = ((string)(inValues[3]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCopyNotesTemplate(templatename, regionid, userid, templateid, callback, asyncState);
        }
        
        private object[] OnEndCopyNotesTemplate(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCopyNotesTemplate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCopyNotesTemplateCompleted(object state) {
            if ((this.CopyNotesTemplateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyNotesTemplateCompleted(this, new CopyNotesTemplateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyNotesTemplateAsync(string templatename, string regionid, int userid, string templateid) {
            this.CopyNotesTemplateAsync(templatename, regionid, userid, templateid, null);
        }
        
        public void CopyNotesTemplateAsync(string templatename, string regionid, int userid, string templateid, object userState) {
            if ((this.onBeginCopyNotesTemplateDelegate == null)) {
                this.onBeginCopyNotesTemplateDelegate = new BeginOperationDelegate(this.OnBeginCopyNotesTemplate);
            }
            if ((this.onEndCopyNotesTemplateDelegate == null)) {
                this.onEndCopyNotesTemplateDelegate = new EndOperationDelegate(this.OnEndCopyNotesTemplate);
            }
            if ((this.onCopyNotesTemplateCompletedDelegate == null)) {
                this.onCopyNotesTemplateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyNotesTemplateCompleted);
            }
            base.InvokeAsync(this.onBeginCopyNotesTemplateDelegate, new object[] {
                        templatename,
                        regionid,
                        userid,
                        templateid}, this.onEndCopyNotesTemplateDelegate, this.onCopyNotesTemplateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCreateTaskForContract(string contractid, int revisionid, string subject, System.DateTime duedate, string category, string notes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateTaskForContract(contractid, revisionid, subject, duedate, category, notes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCreateTaskForContract(System.IAsyncResult result) {
            return base.Channel.EndCreateTaskForContract(result);
        }
        
        private System.IAsyncResult OnBeginCreateTaskForContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string contractid = ((string)(inValues[0]));
            int revisionid = ((int)(inValues[1]));
            string subject = ((string)(inValues[2]));
            System.DateTime duedate = ((System.DateTime)(inValues[3]));
            string category = ((string)(inValues[4]));
            string notes = ((string)(inValues[5]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCreateTaskForContract(contractid, revisionid, subject, duedate, category, notes, callback, asyncState);
        }
        
        private object[] OnEndCreateTaskForContract(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCreateTaskForContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateTaskForContractCompleted(object state) {
            if ((this.CreateTaskForContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateTaskForContractCompleted(this, new CreateTaskForContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateTaskForContractAsync(string contractid, int revisionid, string subject, System.DateTime duedate, string category, string notes) {
            this.CreateTaskForContractAsync(contractid, revisionid, subject, duedate, category, notes, null);
        }
        
        public void CreateTaskForContractAsync(string contractid, int revisionid, string subject, System.DateTime duedate, string category, string notes, object userState) {
            if ((this.onBeginCreateTaskForContractDelegate == null)) {
                this.onBeginCreateTaskForContractDelegate = new BeginOperationDelegate(this.OnBeginCreateTaskForContract);
            }
            if ((this.onEndCreateTaskForContractDelegate == null)) {
                this.onEndCreateTaskForContractDelegate = new EndOperationDelegate(this.OnEndCreateTaskForContract);
            }
            if ((this.onCreateTaskForContractCompletedDelegate == null)) {
                this.onCreateTaskForContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateTaskForContractCompleted);
            }
            base.InvokeAsync(this.onBeginCreateTaskForContractDelegate, new object[] {
                        contractid,
                        revisionid,
                        subject,
                        duedate,
                        category,
                        notes}, this.onEndCreateTaskForContractDelegate, this.onCreateTaskForContractCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateNotesTemplateItem(string templateid, string productareagroupid, decimal quanitity, decimal price, string extradescription, string internaldescription, string additionalinfo, int userid, bool usedefaultquantity, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateNotesTemplateItem(templateid, productareagroupid, quanitity, price, extradescription, internaldescription, additionalinfo, userid, usedefaultquantity, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateNotesTemplateItem(System.IAsyncResult result) {
            return base.Channel.EndUpdateNotesTemplateItem(result);
        }
        
        private System.IAsyncResult OnBeginUpdateNotesTemplateItem(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string templateid = ((string)(inValues[0]));
            string productareagroupid = ((string)(inValues[1]));
            decimal quanitity = ((decimal)(inValues[2]));
            decimal price = ((decimal)(inValues[3]));
            string extradescription = ((string)(inValues[4]));
            string internaldescription = ((string)(inValues[5]));
            string additionalinfo = ((string)(inValues[6]));
            int userid = ((int)(inValues[7]));
            bool usedefaultquantity = ((bool)(inValues[8]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateNotesTemplateItem(templateid, productareagroupid, quanitity, price, extradescription, internaldescription, additionalinfo, userid, usedefaultquantity, callback, asyncState);
        }
        
        private object[] OnEndUpdateNotesTemplateItem(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateNotesTemplateItem(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateNotesTemplateItemCompleted(object state) {
            if ((this.UpdateNotesTemplateItemCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateNotesTemplateItemCompleted(this, new UpdateNotesTemplateItemCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateNotesTemplateItemAsync(string templateid, string productareagroupid, decimal quanitity, decimal price, string extradescription, string internaldescription, string additionalinfo, int userid, bool usedefaultquantity) {
            this.UpdateNotesTemplateItemAsync(templateid, productareagroupid, quanitity, price, extradescription, internaldescription, additionalinfo, userid, usedefaultquantity, null);
        }
        
        public void UpdateNotesTemplateItemAsync(string templateid, string productareagroupid, decimal quanitity, decimal price, string extradescription, string internaldescription, string additionalinfo, int userid, bool usedefaultquantity, object userState) {
            if ((this.onBeginUpdateNotesTemplateItemDelegate == null)) {
                this.onBeginUpdateNotesTemplateItemDelegate = new BeginOperationDelegate(this.OnBeginUpdateNotesTemplateItem);
            }
            if ((this.onEndUpdateNotesTemplateItemDelegate == null)) {
                this.onEndUpdateNotesTemplateItemDelegate = new EndOperationDelegate(this.OnEndUpdateNotesTemplateItem);
            }
            if ((this.onUpdateNotesTemplateItemCompletedDelegate == null)) {
                this.onUpdateNotesTemplateItemCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateNotesTemplateItemCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateNotesTemplateItemDelegate, new object[] {
                        templateid,
                        productareagroupid,
                        quanitity,
                        price,
                        extradescription,
                        internaldescription,
                        additionalinfo,
                        userid,
                        usedefaultquantity}, this.onEndUpdateNotesTemplateItemDelegate, this.onUpdateNotesTemplateItemCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginSynchroniseCustomerDetails(string contractNo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSynchroniseCustomerDetails(contractNo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndSynchroniseCustomerDetails(System.IAsyncResult result) {
            return base.Channel.EndSynchroniseCustomerDetails(result);
        }
        
        private System.IAsyncResult OnBeginSynchroniseCustomerDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string contractNo = ((string)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginSynchroniseCustomerDetails(contractNo, callback, asyncState);
        }
        
        private object[] OnEndSynchroniseCustomerDetails(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndSynchroniseCustomerDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSynchroniseCustomerDetailsCompleted(object state) {
            if ((this.SynchroniseCustomerDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SynchroniseCustomerDetailsCompleted(this, new SynchroniseCustomerDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SynchroniseCustomerDetailsAsync(string contractNo) {
            this.SynchroniseCustomerDetailsAsync(contractNo, null);
        }
        
        public void SynchroniseCustomerDetailsAsync(string contractNo, object userState) {
            if ((this.onBeginSynchroniseCustomerDetailsDelegate == null)) {
                this.onBeginSynchroniseCustomerDetailsDelegate = new BeginOperationDelegate(this.OnBeginSynchroniseCustomerDetails);
            }
            if ((this.onEndSynchroniseCustomerDetailsDelegate == null)) {
                this.onEndSynchroniseCustomerDetailsDelegate = new EndOperationDelegate(this.OnEndSynchroniseCustomerDetails);
            }
            if ((this.onSynchroniseCustomerDetailsCompletedDelegate == null)) {
                this.onSynchroniseCustomerDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSynchroniseCustomerDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginSynchroniseCustomerDetailsDelegate, new object[] {
                        contractNo}, this.onEndSynchroniseCustomerDetailsDelegate, this.onSynchroniseCustomerDetailsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetNonstandardCategory(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNonstandardCategory(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetNonstandardCategory(System.IAsyncResult result) {
            return base.Channel.EndGetNonstandardCategory(result);
        }
        
        private System.IAsyncResult OnBeginGetNonstandardCategory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetNonstandardCategory(callback, asyncState);
        }
        
        private object[] OnEndGetNonstandardCategory(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetNonstandardCategory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNonstandardCategoryCompleted(object state) {
            if ((this.GetNonstandardCategoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNonstandardCategoryCompleted(this, new GetNonstandardCategoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNonstandardCategoryAsync() {
            this.GetNonstandardCategoryAsync(null);
        }
        
        public void GetNonstandardCategoryAsync(object userState) {
            if ((this.onBeginGetNonstandardCategoryDelegate == null)) {
                this.onBeginGetNonstandardCategoryDelegate = new BeginOperationDelegate(this.OnBeginGetNonstandardCategory);
            }
            if ((this.onEndGetNonstandardCategoryDelegate == null)) {
                this.onEndGetNonstandardCategoryDelegate = new EndOperationDelegate(this.OnEndGetNonstandardCategory);
            }
            if ((this.onGetNonstandardCategoryCompletedDelegate == null)) {
                this.onGetNonstandardCategoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNonstandardCategoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetNonstandardCategoryDelegate, null, this.onEndGetNonstandardCategoryDelegate, this.onGetNonstandardCategoryCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetNonstandardCategoryByState(int stateid, int selectedareaid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNonstandardCategoryByState(stateid, selectedareaid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetNonstandardCategoryByState(System.IAsyncResult result) {
            return base.Channel.EndGetNonstandardCategoryByState(result);
        }
        
        private System.IAsyncResult OnBeginGetNonstandardCategoryByState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int stateid = ((int)(inValues[0]));
            int selectedareaid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetNonstandardCategoryByState(stateid, selectedareaid, callback, asyncState);
        }
        
        private object[] OnEndGetNonstandardCategoryByState(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetNonstandardCategoryByState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNonstandardCategoryByStateCompleted(object state) {
            if ((this.GetNonstandardCategoryByStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNonstandardCategoryByStateCompleted(this, new GetNonstandardCategoryByStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNonstandardCategoryByStateAsync(int stateid, int selectedareaid) {
            this.GetNonstandardCategoryByStateAsync(stateid, selectedareaid, null);
        }
        
        public void GetNonstandardCategoryByStateAsync(int stateid, int selectedareaid, object userState) {
            if ((this.onBeginGetNonstandardCategoryByStateDelegate == null)) {
                this.onBeginGetNonstandardCategoryByStateDelegate = new BeginOperationDelegate(this.OnBeginGetNonstandardCategoryByState);
            }
            if ((this.onEndGetNonstandardCategoryByStateDelegate == null)) {
                this.onEndGetNonstandardCategoryByStateDelegate = new EndOperationDelegate(this.OnEndGetNonstandardCategoryByState);
            }
            if ((this.onGetNonstandardCategoryByStateCompletedDelegate == null)) {
                this.onGetNonstandardCategoryByStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNonstandardCategoryByStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetNonstandardCategoryByStateDelegate, new object[] {
                        stateid,
                        selectedareaid}, this.onEndGetNonstandardCategoryByStateDelegate, this.onGetNonstandardCategoryByStateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetNonstandardGroups(int selectedareaid, int stateid, int selectedgroupid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNonstandardGroups(selectedareaid, stateid, selectedgroupid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetNonstandardGroups(System.IAsyncResult result) {
            return base.Channel.EndGetNonstandardGroups(result);
        }
        
        private System.IAsyncResult OnBeginGetNonstandardGroups(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int selectedareaid = ((int)(inValues[0]));
            int stateid = ((int)(inValues[1]));
            int selectedgroupid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetNonstandardGroups(selectedareaid, stateid, selectedgroupid, callback, asyncState);
        }
        
        private object[] OnEndGetNonstandardGroups(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetNonstandardGroups(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNonstandardGroupsCompleted(object state) {
            if ((this.GetNonstandardGroupsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNonstandardGroupsCompleted(this, new GetNonstandardGroupsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNonstandardGroupsAsync(int selectedareaid, int stateid, int selectedgroupid) {
            this.GetNonstandardGroupsAsync(selectedareaid, stateid, selectedgroupid, null);
        }
        
        public void GetNonstandardGroupsAsync(int selectedareaid, int stateid, int selectedgroupid, object userState) {
            if ((this.onBeginGetNonstandardGroupsDelegate == null)) {
                this.onBeginGetNonstandardGroupsDelegate = new BeginOperationDelegate(this.OnBeginGetNonstandardGroups);
            }
            if ((this.onEndGetNonstandardGroupsDelegate == null)) {
                this.onEndGetNonstandardGroupsDelegate = new EndOperationDelegate(this.OnEndGetNonstandardGroups);
            }
            if ((this.onGetNonstandardGroupsCompletedDelegate == null)) {
                this.onGetNonstandardGroupsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNonstandardGroupsCompleted);
            }
            base.InvokeAsync(this.onBeginGetNonstandardGroupsDelegate, new object[] {
                        selectedareaid,
                        stateid,
                        selectedgroupid}, this.onEndGetNonstandardGroupsDelegate, this.onGetNonstandardGroupsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetPriceDisplayCodes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPriceDisplayCodes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetPriceDisplayCodes(System.IAsyncResult result) {
            return base.Channel.EndGetPriceDisplayCodes(result);
        }
        
        private System.IAsyncResult OnBeginGetPriceDisplayCodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetPriceDisplayCodes(callback, asyncState);
        }
        
        private object[] OnEndGetPriceDisplayCodes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetPriceDisplayCodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPriceDisplayCodesCompleted(object state) {
            if ((this.GetPriceDisplayCodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPriceDisplayCodesCompleted(this, new GetPriceDisplayCodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPriceDisplayCodesAsync() {
            this.GetPriceDisplayCodesAsync(null);
        }
        
        public void GetPriceDisplayCodesAsync(object userState) {
            if ((this.onBeginGetPriceDisplayCodesDelegate == null)) {
                this.onBeginGetPriceDisplayCodesDelegate = new BeginOperationDelegate(this.OnBeginGetPriceDisplayCodes);
            }
            if ((this.onEndGetPriceDisplayCodesDelegate == null)) {
                this.onEndGetPriceDisplayCodesDelegate = new EndOperationDelegate(this.OnEndGetPriceDisplayCodes);
            }
            if ((this.onGetPriceDisplayCodesCompletedDelegate == null)) {
                this.onGetPriceDisplayCodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPriceDisplayCodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetPriceDisplayCodesDelegate, null, this.onEndGetPriceDisplayCodesDelegate, this.onGetPriceDisplayCodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginGetProductImages(string productid, int supplierid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProductImages(productid, supplierid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndGetProductImages(System.IAsyncResult result) {
            return base.Channel.EndGetProductImages(result);
        }
        
        private System.IAsyncResult OnBeginGetProductImages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string productid = ((string)(inValues[0]));
            int supplierid = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginGetProductImages(productid, supplierid, callback, asyncState);
        }
        
        private object[] OnEndGetProductImages(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndGetProductImages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductImagesCompleted(object state) {
            if ((this.GetProductImagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductImagesCompleted(this, new GetProductImagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductImagesAsync(string productid, int supplierid) {
            this.GetProductImagesAsync(productid, supplierid, null);
        }
        
        public void GetProductImagesAsync(string productid, int supplierid, object userState) {
            if ((this.onBeginGetProductImagesDelegate == null)) {
                this.onBeginGetProductImagesDelegate = new BeginOperationDelegate(this.OnBeginGetProductImages);
            }
            if ((this.onEndGetProductImagesDelegate == null)) {
                this.onEndGetProductImagesDelegate = new EndOperationDelegate(this.OnEndGetProductImages);
            }
            if ((this.onGetProductImagesCompletedDelegate == null)) {
                this.onGetProductImagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductImagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductImagesDelegate, new object[] {
                        productid,
                        supplierid}, this.onEndGetProductImagesDelegate, this.onGetProductImagesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginCheckEstimateLockStatus(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckEstimateLockStatus(estimaterevisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndCheckEstimateLockStatus(System.IAsyncResult result) {
            return base.Channel.EndCheckEstimateLockStatus(result);
        }
        
        private System.IAsyncResult OnBeginCheckEstimateLockStatus(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginCheckEstimateLockStatus(estimaterevisionid, callback, asyncState);
        }
        
        private object[] OnEndCheckEstimateLockStatus(System.IAsyncResult result) {
            string retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndCheckEstimateLockStatus(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckEstimateLockStatusCompleted(object state) {
            if ((this.CheckEstimateLockStatusCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckEstimateLockStatusCompleted(this, new CheckEstimateLockStatusCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckEstimateLockStatusAsync(int estimaterevisionid) {
            this.CheckEstimateLockStatusAsync(estimaterevisionid, null);
        }
        
        public void CheckEstimateLockStatusAsync(int estimaterevisionid, object userState) {
            if ((this.onBeginCheckEstimateLockStatusDelegate == null)) {
                this.onBeginCheckEstimateLockStatusDelegate = new BeginOperationDelegate(this.OnBeginCheckEstimateLockStatus);
            }
            if ((this.onEndCheckEstimateLockStatusDelegate == null)) {
                this.onEndCheckEstimateLockStatusDelegate = new EndOperationDelegate(this.OnEndCheckEstimateLockStatus);
            }
            if ((this.onCheckEstimateLockStatusCompletedDelegate == null)) {
                this.onCheckEstimateLockStatusCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckEstimateLockStatusCompleted);
            }
            base.InvokeAsync(this.onBeginCheckEstimateLockStatusDelegate, new object[] {
                        estimaterevisionid}, this.onEndCheckEstimateLockStatusDelegate, this.onCheckEstimateLockStatusCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUnlockEstimate(int estimaterevisionid, int type, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUnlockEstimate(estimaterevisionid, type, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUnlockEstimate(System.IAsyncResult result) {
            base.Channel.EndUnlockEstimate(result);
        }
        
        private System.IAsyncResult OnBeginUnlockEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            int type = ((int)(inValues[1]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUnlockEstimate(estimaterevisionid, type, callback, asyncState);
        }
        
        private object[] OnEndUnlockEstimate(System.IAsyncResult result) {
            ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUnlockEstimate(result);
            return null;
        }
        
        private void OnUnlockEstimateCompleted(object state) {
            if ((this.UnlockEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UnlockEstimateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UnlockEstimateAsync(int estimaterevisionid, int type) {
            this.UnlockEstimateAsync(estimaterevisionid, type, null);
        }
        
        public void UnlockEstimateAsync(int estimaterevisionid, int type, object userState) {
            if ((this.onBeginUnlockEstimateDelegate == null)) {
                this.onBeginUnlockEstimateDelegate = new BeginOperationDelegate(this.OnBeginUnlockEstimate);
            }
            if ((this.onEndUnlockEstimateDelegate == null)) {
                this.onEndUnlockEstimateDelegate = new EndOperationDelegate(this.OnEndUnlockEstimate);
            }
            if ((this.onUnlockEstimateCompletedDelegate == null)) {
                this.onUnlockEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUnlockEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginUnlockEstimateDelegate, new object[] {
                        estimaterevisionid,
                        type}, this.onEndUnlockEstimateDelegate, this.onUnlockEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginValidateStudioMEstimate(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginValidateStudioMEstimate(estimaterevisionid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndValidateStudioMEstimate(System.IAsyncResult result) {
            return base.Channel.EndValidateStudioMEstimate(result);
        }
        
        private System.IAsyncResult OnBeginValidateStudioMEstimate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int estimaterevisionid = ((int)(inValues[0]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginValidateStudioMEstimate(estimaterevisionid, callback, asyncState);
        }
        
        private object[] OnEndValidateStudioMEstimate(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndValidateStudioMEstimate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnValidateStudioMEstimateCompleted(object state) {
            if ((this.ValidateStudioMEstimateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ValidateStudioMEstimateCompleted(this, new ValidateStudioMEstimateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ValidateStudioMEstimateAsync(int estimaterevisionid) {
            this.ValidateStudioMEstimateAsync(estimaterevisionid, null);
        }
        
        public void ValidateStudioMEstimateAsync(int estimaterevisionid, object userState) {
            if ((this.onBeginValidateStudioMEstimateDelegate == null)) {
                this.onBeginValidateStudioMEstimateDelegate = new BeginOperationDelegate(this.OnBeginValidateStudioMEstimate);
            }
            if ((this.onEndValidateStudioMEstimateDelegate == null)) {
                this.onEndValidateStudioMEstimateDelegate = new EndOperationDelegate(this.OnEndValidateStudioMEstimate);
            }
            if ((this.onValidateStudioMEstimateCompletedDelegate == null)) {
                this.onValidateStudioMEstimateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnValidateStudioMEstimateCompleted);
            }
            base.InvokeAsync(this.onBeginValidateStudioMEstimateDelegate, new object[] {
                        estimaterevisionid}, this.onEndValidateStudioMEstimateDelegate, this.onValidateStudioMEstimateCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.BeginUpdateItemAcceptance(string revisionestimatedetailsid, int accepted, int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateItemAcceptance(revisionestimatedetailsid, accepted, userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem.EndUpdateItemAcceptance(System.IAsyncResult result) {
            return base.Channel.EndUpdateItemAcceptance(result);
        }
        
        private System.IAsyncResult OnBeginUpdateItemAcceptance(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string revisionestimatedetailsid = ((string)(inValues[0]));
            int accepted = ((int)(inValues[1]));
            int userid = ((int)(inValues[2]));
            return ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).BeginUpdateItemAcceptance(revisionestimatedetailsid, accepted, userid, callback, asyncState);
        }
        
        private object[] OnEndUpdateItemAcceptance(System.IAsyncResult result) {
            bool retVal = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem)(this)).EndUpdateItemAcceptance(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateItemAcceptanceCompleted(object state) {
            if ((this.UpdateItemAcceptanceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateItemAcceptanceCompleted(this, new UpdateItemAcceptanceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateItemAcceptanceAsync(string revisionestimatedetailsid, int accepted, int userid) {
            this.UpdateItemAcceptanceAsync(revisionestimatedetailsid, accepted, userid, null);
        }
        
        public void UpdateItemAcceptanceAsync(string revisionestimatedetailsid, int accepted, int userid, object userState) {
            if ((this.onBeginUpdateItemAcceptanceDelegate == null)) {
                this.onBeginUpdateItemAcceptanceDelegate = new BeginOperationDelegate(this.OnBeginUpdateItemAcceptance);
            }
            if ((this.onEndUpdateItemAcceptanceDelegate == null)) {
                this.onEndUpdateItemAcceptanceDelegate = new EndOperationDelegate(this.OnEndUpdateItemAcceptance);
            }
            if ((this.onUpdateItemAcceptanceCompletedDelegate == null)) {
                this.onUpdateItemAcceptanceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateItemAcceptanceCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateItemAcceptanceDelegate, new object[] {
                        revisionestimatedetailsid,
                        accepted,
                        userid}, this.onEndUpdateItemAcceptanceDelegate, this.onUpdateItemAcceptanceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem CreateChannel() {
            return new RetailSystemClientChannel(this);
        }
        
        private class RetailSystemClientChannel : ChannelBase<Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem>, Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem {
            
            public RetailSystemClientChannel(System.ServiceModel.ClientBase<Metricon.Silverlight.MetriconRetailSystem.MRSService.IRetailSystem> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetContractDraftActionAvailability(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetContractDraftActionAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability EndGetContractDraftActionAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractDraftActionAvailability)(base.EndInvoke("GetContractDraftActionAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFinalContractActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = contractNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetFinalContractActionAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability EndGetFinalContractActionAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.FinalContractActionAvailability)(base.EndInvoke("GetFinalContractActionAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerSupportActionAvailability(int estimateRevisionId, string contractNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = contractNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerSupportActionAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability EndGetCustomerSupportActionAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerSupportActionAvailability)(base.EndInvoke("GetCustomerSupportActionAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalesEstimatorActionAvailability(int estimateRevisionId, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetSalesEstimatorActionAvailability", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability EndGetSalesEstimatorActionAvailability(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.SalesEstimatorActionAvailability)(base.EndInvoke("GetSalesEstimatorActionAvailability", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContractDraftCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetContractDraftCreationVisibility", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetContractDraftCreationVisibility(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetContractDraftCreationVisibility", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetFinalContractCreationVisibility(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetFinalContractCreationVisibility", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetFinalContractCreationVisibility(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetFinalContractCreationVisibility", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateRevisionStatus(Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateRevisionStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = status;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateRevisionStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndGetEstimateRevisionStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("GetEstimateRevisionStatus", _args, result);
            }
            
            public System.IAsyncResult BeginCreateSplitStudioMRevisions(int estimateRevisionId, string revisionTypeIds, string assignedToUserIds, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = estimateRevisionId;
                _args[1] = revisionTypeIds;
                _args[2] = assignedToUserIds;
                _args[3] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("CreateSplitStudioMRevisions", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateSplitStudioMRevisions(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateSplitStudioMRevisions", _args, result);
            }
            
            public System.IAsyncResult BeginMergeStudioMRevisions(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("MergeStudioMRevisions", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMergeStudioMRevisions(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MergeStudioMRevisions", _args, result);
            }
            
            public System.IAsyncResult BeginCreateContractDraft(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("CreateContractDraft", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateContractDraft(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateContractDraft", _args, result);
            }
            
            public System.IAsyncResult BeginCreateFinalContract(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("CreateFinalContract", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateFinalContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateFinalContract", _args, result);
            }
            
            public System.IAsyncResult BeginCreateCscVariation(int estimateRevisionId, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("CreateCscVariation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateCscVariation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateCscVariation", _args, result);
            }
            
            public System.IAsyncResult BeginCreateStudioMRevision(int estimateRevisionId, int ownerId, System.DateTime appointmentDateTime, int revisionTypeId, int createdbyId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = estimateRevisionId;
                _args[1] = ownerId;
                _args[2] = appointmentDateTime;
                _args[3] = revisionTypeId;
                _args[4] = createdbyId;
                System.IAsyncResult _result = base.BeginInvoke("CreateStudioMRevision", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCreateStudioMRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CreateStudioMRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateSetEstimateStatus(int estimateRevisionId, int nextRevisionTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = nextRevisionTypeId;
                System.IAsyncResult _result = base.BeginInvoke("ValidateSetEstimateStatus", _args, callback, asyncState);
                return _result;
            }
            
            public string EndValidateSetEstimateStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ValidateSetEstimateStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerDocumentType(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerDocumentType", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetCustomerDocumentType(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetCustomerDocumentType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateCustomerDocumentDetails(Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails document, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = document;
                System.IAsyncResult _result = base.BeginInvoke("UpdateCustomerDocumentDetails", _args, callback, asyncState);
                return _result;
            }
            
            public int EndUpdateCustomerDocumentDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("UpdateCustomerDocumentDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCustomerDocumentDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetCustomerDocumentDetails", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails EndGetCustomerDocumentDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.CustomerDocumentDetails)(base.EndInvoke("GetCustomerDocumentDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRelevantPAGFromOnePAG(string estimatedetailsid, string revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimatedetailsid;
                _args[1] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetRelevantPAGFromOnePAG", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> EndGetRelevantPAGFromOnePAG(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG>)(base.EndInvoke("GetRelevantPAGFromOnePAG", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateVariation(int estimateRevisionId, int revisionTypeId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = revisionTypeId;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("CreateVariation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCreateVariation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CreateVariation", _args, result);
            }
            
            public System.IAsyncResult BeginRejectVariation(int estimateRevisionId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("RejectVariation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRejectVariation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RejectVariation", _args, result);
            }
            
            public System.IAsyncResult BeginSaveSelectedItemsFromOptionTreeToEstimate(
                        string optionidstring, 
                        string standardinclusionidstring, 
                        string revisionid, 
                        string studiomanswer, 
                        string userid, 
                        string action, 
                        string derivedcost, 
                        string costbtpexcgststring, 
                        string costbtpoverwriteflagstring, 
                        string costdbcexcgststring, 
                        string costdbcoverwriteflagstring, 
                        string quantitystring, 
                        string pricestring, 
                        string isacceptedstring, 
                        string areaidstring, 
                        string groupidstring, 
                        string pricedisplaycodestring, 
                        string issiteworkstring, 
                        string productdescriptionstring, 
                        string additionalnotestring, 
                        string extradescriptionstring, 
                        string internaldescriptionstring, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[22];
                _args[0] = optionidstring;
                _args[1] = standardinclusionidstring;
                _args[2] = revisionid;
                _args[3] = studiomanswer;
                _args[4] = userid;
                _args[5] = action;
                _args[6] = derivedcost;
                _args[7] = costbtpexcgststring;
                _args[8] = costbtpoverwriteflagstring;
                _args[9] = costdbcexcgststring;
                _args[10] = costdbcoverwriteflagstring;
                _args[11] = quantitystring;
                _args[12] = pricestring;
                _args[13] = isacceptedstring;
                _args[14] = areaidstring;
                _args[15] = groupidstring;
                _args[16] = pricedisplaycodestring;
                _args[17] = issiteworkstring;
                _args[18] = productdescriptionstring;
                _args[19] = additionalnotestring;
                _args[20] = extradescriptionstring;
                _args[21] = internaldescriptionstring;
                System.IAsyncResult _result = base.BeginInvoke("SaveSelectedItemsFromOptionTreeToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("SaveSelectedItemsFromOptionTreeToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReplaceSaveSelectedItemsFromOptionTreeToEstimate(
                        string sourceEstimateRevisionDetailsId, 
                        string optionidstring, 
                        string standardinclusionidstring, 
                        string revisionid, 
                        string studiomanswer, 
                        string userid, 
                        string action, 
                        string derivedcost, 
                        string costbtpexcgst, 
                        string costdbcexcgst, 
                        string quantitystring, 
                        string pricestring, 
                        string isacceptedstring, 
                        string areaidstring, 
                        string groupidstring, 
                        string pricedisplaycodestring, 
                        string issiteworkstring, 
                        string productdescriptionstring, 
                        string additionalnotestring, 
                        string extradescriptionstring, 
                        string internaldescriptionstring, 
                        string copyquantity, 
                        string copyadditionalnotes, 
                        string copyextradescription, 
                        string copyinternalnotes, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[25];
                _args[0] = sourceEstimateRevisionDetailsId;
                _args[1] = optionidstring;
                _args[2] = standardinclusionidstring;
                _args[3] = revisionid;
                _args[4] = studiomanswer;
                _args[5] = userid;
                _args[6] = action;
                _args[7] = derivedcost;
                _args[8] = costbtpexcgst;
                _args[9] = costdbcexcgst;
                _args[10] = quantitystring;
                _args[11] = pricestring;
                _args[12] = isacceptedstring;
                _args[13] = areaidstring;
                _args[14] = groupidstring;
                _args[15] = pricedisplaycodestring;
                _args[16] = issiteworkstring;
                _args[17] = productdescriptionstring;
                _args[18] = additionalnotestring;
                _args[19] = extradescriptionstring;
                _args[20] = internaldescriptionstring;
                _args[21] = copyquantity;
                _args[22] = copyadditionalnotes;
                _args[23] = copyextradescription;
                _args[24] = copyinternalnotes;
                System.IAsyncResult _result = base.BeginInvoke("ReplaceSaveSelectedItemsFromOptionTreeToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndReplaceSaveSelectedItemsFromOptionTreeToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("ReplaceSaveSelectedItemsFromOptionTreeToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckRevisionTypeAllowToAddNSR(int revisontypeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisontypeid;
                System.IAsyncResult _result = base.BeginInvoke("CheckRevisionTypeAllowToAddNSR", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission EndCheckRevisionTypeAllowToAddNSR(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionTypePermission)(base.EndInvoke("CheckRevisionTypeAllowToAddNSR", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateAcceptFlagForRevision(int estimaterevisionid, int userroleid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimaterevisionid;
                _args[1] = userroleid;
                System.IAsyncResult _result = base.BeginInvoke("ValidateAcceptFlagForRevision", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateAcceptFlagForRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("ValidateAcceptFlagForRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateStudioMRevisions(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimaterevisionid;
                System.IAsyncResult _result = base.BeginInvoke("ValidateStudioMRevisions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateStudioMRevisions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("ValidateStudioMRevisions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginValidateAppointmentDate(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimaterevisionid;
                System.IAsyncResult _result = base.BeginInvoke("ValidateAppointmentDate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndValidateAppointmentDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ValidateAppointmentDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNextEstimateRevision(int estimateRevisionId, int statusId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = statusId;
                System.IAsyncResult _result = base.BeginInvoke("GetNextEstimateRevision", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> EndGetNextEstimateRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NextRevision>)(base.EndInvoke("GetNextEstimateRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAuditLogs(int revisionid, int revisiondetailid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = revisionid;
                _args[1] = revisiondetailid;
                System.IAsyncResult _result = base.BeginInvoke("GetAuditLogs", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> EndGetAuditLogs(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog>)(base.EndInvoke("GetAuditLogs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDeletedItems(int revisionid, Metricon.Silverlight.MetriconRetailSystem.MRSService.RESULT_TYPE resulttype, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = revisionid;
                _args[1] = resulttype;
                System.IAsyncResult _result = base.BeginInvoke("GetDeletedItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> EndGetDeletedItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DeletedItem>)(base.EndInvoke("GetDeletedItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReAddDeletedEstimateItem(int sourceEstimateRevisionId, int targetEstimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = sourceEstimateRevisionId;
                _args[1] = targetEstimateRevisionId;
                _args[2] = OptionId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReAddDeletedEstimateItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReAddDeletedEstimateItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReAddDeletedEstimateItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReAddDeletedMasterPromotionEstimateItem(int estimateRevisionId, int OptionId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = OptionId;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("ReAddDeletedMasterPromotionEstimateItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndReAddDeletedMasterPromotionEstimateItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ReAddDeletedMasterPromotionEstimateItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllFacadeFromRevisonID(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetAllFacadeFromRevisonID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetAllFacadeFromRevisonID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(base.EndInvoke("GetAllFacadeFromRevisonID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllAvailableHomeByState(int stateid, string searchText, bool showdisplayhomes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = stateid;
                _args[1] = searchText;
                _args[2] = showdisplayhomes;
                System.IAsyncResult _result = base.BeginInvoke("GetAllAvailableHomeByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetAllAvailableHomeByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(base.EndInvoke("GetAllAvailableHomeByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHomeFullNameByState(int stateid, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = stateid;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetHomeFullNameByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> EndGetHomeFullNameByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSHome>)(base.EndInvoke("GetHomeFullNameByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAreaNameWithAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAreaNameWithAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> EndGetAreaNameWithAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSArea>)(base.EndInvoke("GetAreaNameWithAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetGroupNameWithAll(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetGroupNameWithAll", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> EndGetGroupNameWithAll(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSGroup>)(base.EndInvoke("GetGroupNameWithAll", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckFacadeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionid;
                _args[1] = newfacadehomeid;
                _args[2] = effectivedate;
                System.IAsyncResult _result = base.BeginInvoke("CheckFacadeConfigurationDifference", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCheckFacadeConfigurationDifference(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("CheckFacadeConfigurationDifference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckHomeConfigurationDifference(int revisionid, int newfacadehomeid, string effectivedate, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionid;
                _args[1] = newfacadehomeid;
                _args[2] = effectivedate;
                System.IAsyncResult _result = base.BeginInvoke("CheckHomeConfigurationDifference", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCheckHomeConfigurationDifference(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("CheckHomeConfigurationDifference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeFacade(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = revisionid;
                _args[1] = newfacadehomeid;
                _args[2] = detailIDsSelected;
                _args[3] = detailOptionsSeleced;
                _args[4] = detailPricesSeleced;
                _args[5] = effectivedate;
                _args[6] = userid;
                System.IAsyncResult _result = base.BeginInvoke("ChangeFacade", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChangeFacade(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChangeFacade", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeHome(int revisionid, int newfacadehomeid, string detailIDsSelected, string detailOptionsSeleced, string detailPricesSeleced, string effectivedate, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = revisionid;
                _args[1] = newfacadehomeid;
                _args[2] = detailIDsSelected;
                _args[3] = detailOptionsSeleced;
                _args[4] = detailPricesSeleced;
                _args[5] = effectivedate;
                _args[6] = userid;
                System.IAsyncResult _result = base.BeginInvoke("ChangeHome", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndChangeHome(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ChangeHome", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContractType(string configCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = configCode;
                System.IAsyncResult _result = base.BeginInvoke("GetContractType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> EndGetContractType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractType>)(base.EndInvoke("GetContractType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateContractType(int revisionid, string contracttype, string jobflowtype, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = revisionid;
                _args[1] = contracttype;
                _args[2] = jobflowtype;
                _args[3] = userid;
                System.IAsyncResult _result = base.BeginInvoke("UpdateContractType", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateContractType(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateContractType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHomeName(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetHomeName", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetHomeName(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetHomeName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateHomeName(int revisionid, string homename, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionid;
                _args[1] = homename;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("UpdateHomeName", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateHomeName(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateHomeName", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyEstimateCheckDifference(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = sourceEstimatenumber;
                _args[1] = destinationEstimatenumber;
                System.IAsyncResult _result = base.BeginInvoke("CopyEstimateCheckDifference", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndCopyEstimateCheckDifference(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("CopyEstimateCheckDifference", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyEstimate(string sourceEstimatenumber, string destinationEstimatenumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = sourceEstimatenumber;
                _args[1] = destinationEstimatenumber;
                System.IAsyncResult _result = base.BeginInvoke("CopyEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCopyEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CopyEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAreaSurcharge(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetAreaSurcharge", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<decimal> EndGetAreaSurcharge(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<decimal> _result = ((System.Collections.ObjectModel.ObservableCollection<decimal>)(base.EndInvoke("GetAreaSurcharge", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPagByID(int estimaterevisionid, int optionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimaterevisionid;
                _args[1] = optionid;
                System.IAsyncResult _result = base.BeginInvoke("GetPagByID", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndGetPagByID(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(base.EndInvoke("GetPagByID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUpgradeOptionListForStandardInclusion(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimaterevisionid;
                _args[1] = originateoptionid;
                System.IAsyncResult _result = base.BeginInvoke("GetUpgradeOptionListForStandardInclusion", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> EndGetUpgradeOptionListForStandardInclusion(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SimplePAG>)(base.EndInvoke("GetUpgradeOptionListForStandardInclusion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStudioMQandA(int optionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = optionId;
                System.IAsyncResult _result = base.BeginInvoke("GetStudioMQandA", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStudioMQandA(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStudioMQandA", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSharepoint_GetFileList(string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = opportunityid;
                _args[1] = contractnumber;
                System.IAsyncResult _result = base.BeginInvoke("Sharepoint_GetFileList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> EndSharepoint_GetFileList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc>)(base.EndInvoke("Sharepoint_GetFileList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSharepoint_SharepointUploadFile(string filename, byte[] contents, string oldname, string opportunityid, string doccategory, string doctype, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = filename;
                _args[1] = contents;
                _args[2] = oldname;
                _args[3] = opportunityid;
                _args[4] = doccategory;
                _args[5] = doctype;
                System.IAsyncResult _result = base.BeginInvoke("Sharepoint_SharepointUploadFile", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSharepoint_SharepointUploadFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Sharepoint_SharepointUploadFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSharepoint_DeleteFileFromSharepointLibrary(Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDoc doc, string opportunityid, string contractnumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = doc;
                _args[1] = opportunityid;
                _args[2] = contractnumber;
                System.IAsyncResult _result = base.BeginInvoke("Sharepoint_DeleteFileFromSharepointLibrary", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSharepoint_DeleteFileFromSharepointLibrary(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("Sharepoint_DeleteFileFromSharepointLibrary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSharepoint_GetSalesDocumentType(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Sharepoint_GetSalesDocumentType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> EndSharepoint_GetSalesDocumentType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SharepointDocumentType>)(base.EndInvoke("Sharepoint_GetSalesDocumentType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendNotificationEmail(string templateobjectid, string actionuserfullname, string recipientfullname, string contractnumber, string templateobjecttype, string emailtype, string estimatenumber, string revisionnumber, string comments, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = templateobjectid;
                _args[1] = actionuserfullname;
                _args[2] = recipientfullname;
                _args[3] = contractnumber;
                _args[4] = templateobjecttype;
                _args[5] = emailtype;
                _args[6] = estimatenumber;
                _args[7] = revisionnumber;
                _args[8] = comments;
                System.IAsyncResult _result = base.BeginInvoke("SendNotificationEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendNotificationEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendNotificationEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendCrmEmail(System.Guid contractId, int recipientId, string subject, string body, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = contractId;
                _args[1] = recipientId;
                _args[2] = subject;
                _args[3] = body;
                System.IAsyncResult _result = base.BeginInvoke("SendCrmEmail", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSendCrmEmail(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SendCrmEmail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStudioMQuestionForAProduct(string pproductid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = pproductid;
                System.IAsyncResult _result = base.BeginInvoke("GetStudioMQuestionForAProduct", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetStudioMQuestionForAProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetStudioMQuestionForAProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetInLieuStandardPromotionItems(int estimaterevisionid, int originateoptionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimaterevisionid;
                _args[1] = originateoptionid;
                System.IAsyncResult _result = base.BeginInvoke("GetInLieuStandardPromotionItems", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> EndGetInLieuStandardPromotionItems(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG>)(base.EndInvoke("GetInLieuStandardPromotionItems", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRoleAccessModule(int roleid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleid;
                System.IAsyncResult _result = base.BeginInvoke("GetRoleAccessModule", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule EndGetRoleAccessModule(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.RoleAccessModule)(base.EndInvoke("GetRoleAccessModule", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemRemoveReason(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetItemRemoveReason", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> EndGetItemRemoveReason(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ItemRemoveReason>)(base.EndInvoke("GetItemRemoveReason", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetItemsNeedSetDefaultAnswer(string revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetItemsNeedSetDefaultAnswer", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> EndGetItemsNeedSetDefaultAnswer(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StudioMItem>)(base.EndInvoke("GetItemsNeedSetDefaultAnswer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetDefaultAnswerForEstimateRevision(string idstring, string studiomstring, string usercode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = idstring;
                _args[1] = studiomstring;
                _args[2] = usercode;
                System.IAsyncResult _result = base.BeginInvoke("SetDefaultAnswerForEstimateRevision", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetDefaultAnswerForEstimateRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetDefaultAnswerForEstimateRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRegisterEvent(string action, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = action;
                _args[1] = revisionid;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("RegisterEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRegisterEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("RegisterEvent", _args, result);
            }
            
            public System.IAsyncResult BeginGetStudioMAppointmentTime(string contractNumber, string eventNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = contractNumber;
                _args[1] = eventNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetStudioMAppointmentTime", _args, callback, asyncState);
                return _result;
            }
            
            public System.DateTime EndGetStudioMAppointmentTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.DateTime _result = ((System.DateTime)(base.EndInvoke("GetStudioMAppointmentTime", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEstimateDetailsDescription(System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> items, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = items;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateDetailsDescription", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateDetailsDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateDetailsDescription", _args, result);
            }
            
            public System.IAsyncResult BeginMoveEstimateDetailItem(int revisionDetailsIdSource, int revisionDetailsIdTarget, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionDetailsIdSource;
                _args[1] = revisionDetailsIdTarget;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("MoveEstimateDetailItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndMoveEstimateDetailItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("MoveEstimateDetailItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_GetDocumentInfo(string revisionid, string estimateid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = revisionid;
                _args[1] = estimateid;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_GetDocumentInfo", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> EndDocuSign_GetDocumentInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignDocStatusInfo>)(base.EndInvoke("DocuSign_GetDocumentInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_PushDocumentToTheProcessQueue(string revisionid, string printtype, string documenttype, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = revisionid;
                _args[1] = printtype;
                _args[2] = documenttype;
                _args[3] = userid;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_PushDocumentToTheProcessQueue", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDocuSign_PushDocumentToTheProcessQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DocuSign_PushDocumentToTheProcessQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisiondetailsid;
                System.IAsyncResult _result = base.BeginInvoke("GetPromotionProductByMasterPromotionRevisionDetailsID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetPromotionProductByMasterPromotionRevisionDetailsID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetExistingPromotionProductByMasterPromotionRevisionDetailsID(string revisiondetailsid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisiondetailsid;
                System.IAsyncResult _result = base.BeginInvoke("GetExistingPromotionProductByMasterPromotionRevisionDetailsID", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> EndGetExistingPromotionProductByMasterPromotionRevisionDetailsID(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PromotionPAG>)(base.EndInvoke("GetExistingPromotionProductByMasterPromotionRevisionDetailsID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateDetailsByIDString(string selectedrevisiondetailsid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = selectedrevisiondetailsid;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateDetailsByIDString", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetEstimateDetailsByIDString(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetEstimateDetailsByIDString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteMasterPromotionItem(string masterpromotionitemid, string selectedpromotionitemids, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = masterpromotionitemid;
                _args[1] = selectedpromotionitemids;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteMasterPromotionItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteMasterPromotionItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteMasterPromotionItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_RemoveDocumentFromTheProcessQueue(string integrationid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = integrationid;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_RemoveDocumentFromTheProcessQueue", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDocuSign_RemoveDocumentFromTheProcessQueue(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DocuSign_RemoveDocumentFromTheProcessQueue", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCRMContactForAccountAsSigner(System.Guid accountid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = accountid;
                System.IAsyncResult _result = base.BeginInvoke("GetCRMContactForAccountAsSigner", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> EndGetCRMContactForAccountAsSigner(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.CRMContact>)(base.EndInvoke("GetCRMContactForAccountAsSigner", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_GetEnvelopeHistory(string envelopeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = envelopeid;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_GetEnvelopeHistory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> EndDocuSign_GetEnvelopeHistory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory>)(base.EndInvoke("DocuSign_GetEnvelopeHistory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_GetEnvelopeHistoryByRevision(string revisionid, string versiontype, string printtype, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionid;
                _args[1] = versiontype;
                _args[2] = printtype;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_GetEnvelopeHistoryByRevision", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> EndDocuSign_GetEnvelopeHistoryByRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DocuSignHistory>)(base.EndInvoke("DocuSign_GetEnvelopeHistoryByRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDocuSign_ValidateSignerAndDocuemnt(string estimateid, string versionnumber, string recipientname, string recipienttype, string recipientaction, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = estimateid;
                _args[1] = versionnumber;
                _args[2] = recipientname;
                _args[3] = recipienttype;
                _args[4] = recipientaction;
                System.IAsyncResult _result = base.BeginInvoke("DocuSign_ValidateSignerAndDocuemnt", _args, callback, asyncState);
                return _result;
            }
            
            public string EndDocuSign_ValidateSignerAndDocuemnt(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("DocuSign_ValidateSignerAndDocuemnt", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchSpecificJob(string customernumber, string contractnumber, string SelectedSalesConsultantId, string LotNumber, string StreetName, string Suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = customernumber;
                _args[1] = contractnumber;
                _args[2] = SelectedSalesConsultantId;
                _args[3] = LotNumber;
                _args[4] = StreetName;
                _args[5] = Suburb;
                _args[6] = businessUnit;
                System.IAsyncResult _result = base.BeginInvoke("SearchSpecificJob", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndSearchSpecificJob(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(base.EndInvoke("SearchSpecificJob", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginResetEditEstimateUserID(int estimateRevisionId, int editEstimateUserID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionId;
                _args[1] = editEstimateUserID;
                System.IAsyncResult _result = base.BeginInvoke("ResetEditEstimateUserID", _args, callback, asyncState);
                return _result;
            }
            
            public int EndResetEditEstimateUserID(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("ResetEditEstimateUserID", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginApplyRounding(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("ApplyRounding", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndApplyRounding(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("ApplyRounding", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateDisclaimerUpdateDetails(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateDisclaimerUpdateDetails", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail EndGetEstimateDisclaimerUpdateDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDisclaimerUpdateDetail)(base.EndInvoke("GetEstimateDisclaimerUpdateDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveDisclaimerUpdateDetails(int revisionId, int typeId, int disclaimerNewId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = revisionId;
                _args[1] = typeId;
                _args[2] = disclaimerNewId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("SaveDisclaimerUpdateDetails", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveDisclaimerUpdateDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveDisclaimerUpdateDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBusinessUnits(int regionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = regionid;
                System.IAsyncResult _result = base.BeginInvoke("GetBusinessUnits", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> EndGetBusinessUnits(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.GenericClassCodeName>)(base.EndInvoke("GetBusinessUnits", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetBCForecastDate(string bcContractNumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = bcContractNumber;
                System.IAsyncResult _result = base.BeginInvoke("GetBCForecastDate", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetBCForecastDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetBCForecastDate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAcceptOriginalEstimate(int estimateId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateId;
                _args[1] = userId;
                System.IAsyncResult _result = base.BeginInvoke("AcceptOriginalEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAcceptOriginalEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AcceptOriginalEstimate", _args, result);
            }
            
            public System.IAsyncResult BeginAssignQueuedEstimate(int queueId, int userId, int ownerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = queueId;
                _args[1] = userId;
                _args[2] = ownerId;
                System.IAsyncResult _result = base.BeginInvoke("AssignQueuedEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public int EndAssignQueuedEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("AssignQueuedEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAssignWorkingEstimate(int estimateRevisionId, int userId, int ownerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = userId;
                _args[2] = ownerId;
                System.IAsyncResult _result = base.BeginInvoke("AssignWorkingEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAssignWorkingEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AssignWorkingEstimate", _args, result);
            }
            
            public System.IAsyncResult BeginCompleteEstimate(int revisionId, int userId, int statusId, int statusReasonId, int revisionTypeId, int ownerId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = revisionId;
                _args[1] = userId;
                _args[2] = statusId;
                _args[3] = statusReasonId;
                _args[4] = revisionTypeId;
                _args[5] = ownerId;
                System.IAsyncResult _result = base.BeginInvoke("CompleteEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndCompleteEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("CompleteEstimate", _args, result);
            }
            
            public System.IAsyncResult BeginGetQueuedEstimates(int revisionTypeId, int regionId, int roleId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = revisionTypeId;
                _args[1] = regionId;
                _args[2] = roleId;
                _args[3] = customerNumber;
                _args[4] = contractNumber;
                _args[5] = salesConsultantId;
                _args[6] = lotNumber;
                _args[7] = streetName;
                _args[8] = suburb;
                _args[9] = businessUnit;
                System.IAsyncResult _result = base.BeginInvoke("GetQueuedEstimates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndGetQueuedEstimates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(base.EndInvoke("GetQueuedEstimates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAssignedEstimates(int revisionTypeId, int roleId, int statusId, int userId, int regionId, string customerNumber, string contractNumber, int salesConsultantId, string lotNumber, string streetName, string suburb, string businessUnit, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[12];
                _args[0] = revisionTypeId;
                _args[1] = roleId;
                _args[2] = statusId;
                _args[3] = userId;
                _args[4] = regionId;
                _args[5] = customerNumber;
                _args[6] = contractNumber;
                _args[7] = salesConsultantId;
                _args[8] = lotNumber;
                _args[9] = streetName;
                _args[10] = suburb;
                _args[11] = businessUnit;
                System.IAsyncResult _result = base.BeginInvoke("GetAssignedEstimates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> EndGetAssignedEstimates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateGridItem>)(base.EndInvoke("GetAssignedEstimates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateHeader(int revisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateHeader", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader EndGetEstimateHeader(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader)(base.EndInvoke("GetEstimateHeader", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateDetails(int revisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetEstimateDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetEstimateDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimatesRevisions(int estimateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateId;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimatesRevisions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> EndGetEstimatesRevisions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader>)(base.EndInvoke("GetEstimatesRevisions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUndoThisRevision(int bcContractNumber, int estimateId, int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = bcContractNumber;
                _args[1] = estimateId;
                _args[2] = estimateRevisionId;
                _args[3] = userId;
                _args[4] = reasonComment;
                System.IAsyncResult _result = base.BeginInvoke("UndoThisRevision", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUndoThisRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UndoThisRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUndoThisRevisionValidate(int estimateId, int bcContractNumber, int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateId;
                _args[1] = bcContractNumber;
                _args[2] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("UndoThisRevisionValidate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> EndUndoThisRevisionValidate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeader>)(base.EndInvoke("UndoThisRevisionValidate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUndoCurrentMilestone(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = userId;
                _args[2] = reasonComment;
                System.IAsyncResult _result = base.BeginInvoke("UndoCurrentMilestone", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUndoCurrentMilestone(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UndoCurrentMilestone", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUndoSetAsContract(int estimateRevisionId, int userId, string reasonComment, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = userId;
                _args[2] = reasonComment;
                System.IAsyncResult _result = base.BeginInvoke("UndoSetAsContract", _args, callback, asyncState);
                return _result;
            }
            
            public string EndUndoSetAsContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("UndoSetAsContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEstimateDetails(
                        int revisionDetailsId, 
                        decimal price, 
                        decimal quantity, 
                        decimal totalprice, 
                        string productDescription, 
                        string extraDescription, 
                        string internalDescription, 
                        string additionalnotes, 
                        string studioManswer, 
                        int itemaccepted, 
                        int categoryid, 
                        int groupid, 
                        int pricedisplayid, 
                        int userId, 
                        int applyanswertoallgroup, 
                        string selectedimageid, 
                        bool issiteworkitem, 
                        string costbtp, 
                        string costdbc, 
                        System.AsyncCallback callback, 
                        object asyncState) {
                object[] _args = new object[19];
                _args[0] = revisionDetailsId;
                _args[1] = price;
                _args[2] = quantity;
                _args[3] = totalprice;
                _args[4] = productDescription;
                _args[5] = extraDescription;
                _args[6] = internalDescription;
                _args[7] = additionalnotes;
                _args[8] = studioManswer;
                _args[9] = itemaccepted;
                _args[10] = categoryid;
                _args[11] = groupid;
                _args[12] = pricedisplayid;
                _args[13] = userId;
                _args[14] = applyanswertoallgroup;
                _args[15] = selectedimageid;
                _args[16] = issiteworkitem;
                _args[17] = costbtp;
                _args[18] = costdbc;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateDetails", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateDetails", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteProduct(int revisionDetailsId, string reason, int reasonid, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = revisionDetailsId;
                _args[1] = reason;
                _args[2] = reasonid;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteProduct", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndDeleteProduct(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(base.EndInvoke("DeleteProduct", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertComment(int revisionId, string comment, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionId;
                _args[1] = comment;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("InsertComment", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertComment", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateComment(int estimateRevisionId, string comment, int userid, int variationnumber, string variationsummary, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = estimateRevisionId;
                _args[1] = comment;
                _args[2] = userid;
                _args[3] = variationnumber;
                _args[4] = variationsummary;
                System.IAsyncResult _result = base.BeginInvoke("UpdateComment", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateComment(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateComment", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateEstimateStatus(int revisionId, int statusId, int statusReasonId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = revisionId;
                _args[1] = statusId;
                _args[2] = statusReasonId;
                _args[3] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateStatus", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateStatus", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateEstimateDifficultyRating(int estimateRevisionId, int difficultyRatingId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = difficultyRatingId;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateDifficultyRating", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateDifficultyRating(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateDifficultyRating", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateQueueDifficultyRating(int queueId, int difficultyRatingId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = queueId;
                _args[1] = difficultyRatingId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateQueueDifficultyRating", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateQueueDifficultyRating(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateQueueDifficultyRating", _args, result);
            }
            
            public System.IAsyncResult BeginMarginReport_SaveDetails(int estimateRevisionId, int titledLand, int titledLandDays, int basePriceExtensionDays, System.DateTime effectiveDate, double bpeCharge, int requiredBPEChargeType, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[8];
                _args[0] = estimateRevisionId;
                _args[1] = titledLand;
                _args[2] = titledLandDays;
                _args[3] = basePriceExtensionDays;
                _args[4] = effectiveDate;
                _args[5] = bpeCharge;
                _args[6] = requiredBPEChargeType;
                _args[7] = userId;
                System.IAsyncResult _result = base.BeginInvoke("MarginReport_SaveDetails", _args, callback, asyncState);
                return _result;
            }
            
            public void EndMarginReport_SaveDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("MarginReport_SaveDetails", _args, result);
            }
            
            public System.IAsyncResult BeginMarginReport_GetDetails(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("MarginReport_GetDetails", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail EndMarginReport_GetDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.MarginReportDetail)(base.EndInvoke("MarginReport_GetDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateEstimateDueDate(int estimateRevisionId, System.DateTime duedate, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = duedate;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateDueDate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateDueDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateDueDate", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateEstimateAppointmentTime(int estimateRevisionId, System.DateTime appointmentTime, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = appointmentTime;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateAppointmentTime", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateAppointmentTime(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateAppointmentTime", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateQueueDueDate(int queueId, System.DateTime duedate, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = queueId;
                _args[1] = duedate;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("UpdateQueueDueDate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateQueueDueDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateQueueDueDate", _args, result);
            }
            
            public System.IAsyncResult BeginUpdateEstimateEffectiveDate(int estimateRevisionId, int priceId, int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = estimateRevisionId;
                _args[1] = priceId;
                _args[2] = userId;
                System.IAsyncResult _result = base.BeginInvoke("UpdateEstimateEffectiveDate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUpdateEstimateEffectiveDate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UpdateEstimateEffectiveDate", _args, result);
            }
            
            public System.IAsyncResult BeginGetUsersByRegionAndRole(int regionId, int roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = regionId;
                _args[1] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersByRegionAndRole", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> EndGetUsersByRegionAndRole(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User>)(base.EndInvoke("GetUsersByRegionAndRole", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsersByRegionAndRevisionType(int regionId, int revisionTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = regionId;
                _args[1] = revisionTypeId;
                System.IAsyncResult _result = base.BeginInvoke("GetUsersByRegionAndRevisionType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> EndGetUsersByRegionAndRevisionType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.User>)(base.EndInvoke("GetUsersByRegionAndRevisionType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCurrentUser(string loginName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = loginName;
                System.IAsyncResult _result = base.BeginInvoke("GetCurrentUser", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.User EndGetCurrentUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.User _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.User)(base.EndInvoke("GetCurrentUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserRoles(int userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetUserRoles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> EndGetUserRoles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.UserRole>)(base.EndInvoke("GetUserRoles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateStatuses(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateStatuses", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> EndGetEstimateStatuses(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateStatus>)(base.EndInvoke("GetEstimateStatuses", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStatusReasons(int statusId, int revisionTypeId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = statusId;
                _args[1] = revisionTypeId;
                System.IAsyncResult _result = base.BeginInvoke("GetStatusReasons", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> EndGetStatusReasons(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.StatusReason>)(base.EndInvoke("GetStatusReasons", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetDifficultyRatings(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetDifficultyRatings", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> EndGetDifficultyRatings(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.DifficultyRating>)(base.EndInvoke("GetDifficultyRatings", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRevisionTypeAccess(int roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("GetRevisionTypeAccess", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> EndGetRevisionTypeAccess(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.RevisionType>)(base.EndInvoke("GetRevisionTypeAccess", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHomePrices(int estimateRevisionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateRevisionId;
                System.IAsyncResult _result = base.BeginInvoke("GetHomePrices", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> EndGetHomePrices(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.HomePrice>)(base.EndInvoke("GetHomePrices", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAuditTrail(int estimateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateId;
                System.IAsyncResult _result = base.BeginInvoke("GetAuditTrail", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> EndGetAuditTrail(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.AuditLog>)(base.EndInvoke("GetAuditTrail", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCompareEstimateDetails(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionIdA;
                _args[1] = estimateRevisionIdB;
                System.IAsyncResult _result = base.BeginInvoke("CompareEstimateDetails", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> EndCompareEstimateDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetailsComparison>)(base.EndInvoke("CompareEstimateDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCompareEstimateHeader(int estimateRevisionIdA, int estimateRevisionIdB, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateRevisionIdA;
                _args[1] = estimateRevisionIdB;
                System.IAsyncResult _result = base.BeginInvoke("CompareEstimateHeader", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> EndCompareEstimateHeader(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateHeaderComparison>)(base.EndInvoke("CompareEstimateHeader", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetLatestEstimateRevisionId(int estimateId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimateId;
                System.IAsyncResult _result = base.BeginInvoke("GetLatestEstimateRevisionId", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetLatestEstimateRevisionId(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetLatestEstimateRevisionId", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetResubmittedEstimateCount(int userId, int regionId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = regionId;
                System.IAsyncResult _result = base.BeginInvoke("GetResubmittedEstimateCount", _args, callback, asyncState);
                return _result;
            }
            
            public int EndGetResubmittedEstimateCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("GetResubmittedEstimateCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOptionTreeFromMasterHome(string regionid, string homeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = regionid;
                _args[1] = homeid;
                System.IAsyncResult _result = base.BeginInvoke("GetOptionTreeFromMasterHome", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromMasterHome(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(base.EndInvoke("GetOptionTreeFromMasterHome", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckValidProductByRevision(int revisionId, string productId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = revisionId;
                _args[1] = productId;
                System.IAsyncResult _result = base.BeginInvoke("CheckValidProductByRevision", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCheckValidProductByRevision(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CheckValidProductByRevision", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(string revisionId, string areaName, string groupName, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionId;
                _args[1] = areaName;
                _args[2] = groupName;
                System.IAsyncResult _result = base.BeginInvoke("GetOptionTreeAsOptionTreeProductsForEstimateItemReplace", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeAsOptionTreeProductsForEstimateItemReplace(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(base.EndInvoke("GetOptionTreeAsOptionTreeProductsForEstimateItemReplace", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOptionTreeAsOptionTreeProducts(string revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetOptionTreeAsOptionTreeProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeAsOptionTreeProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(base.EndInvoke("GetOptionTreeAsOptionTreeProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOptionTreeFromAllProducts(string regionid, string searchText, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = regionid;
                _args[1] = searchText;
                System.IAsyncResult _result = base.BeginInvoke("GetOptionTreeFromAllProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromAllProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(base.EndInvoke("GetOptionTreeFromAllProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOptionTreeFromAllProductsExtended(int stateid, string regionid, int homeid, string productname, string productdesc, int areaid, int groupid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = stateid;
                _args[1] = regionid;
                _args[2] = homeid;
                _args[3] = productname;
                _args[4] = productdesc;
                _args[5] = areaid;
                _args[6] = groupid;
                System.IAsyncResult _result = base.BeginInvoke("GetOptionTreeFromAllProductsExtended", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> EndGetOptionTreeFromAllProductsExtended(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.OptionTreeProducts>)(base.EndInvoke("GetOptionTreeFromAllProductsExtended", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSelectedPAG(string estimateid, string revisionnumber, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimateid;
                _args[1] = revisionnumber;
                System.IAsyncResult _result = base.BeginInvoke("GetSelectedPAG", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> EndGetSelectedPAG(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PAG>)(base.EndInvoke("GetSelectedPAG", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCommentsForAnEstimate(string revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("GetCommentsForAnEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> EndGetCommentsForAnEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateComments>)(base.EndInvoke("GetCommentsForAnEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAccessPermission(string revisionid, string userid, string roleid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionid;
                _args[1] = userid;
                _args[2] = roleid;
                System.IAsyncResult _result = base.BeginInvoke("GetAccessPermission", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndGetAccessPermission(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("GetAccessPermission", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEstimateCount(int userId, int roleId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userId;
                _args[1] = roleId;
                System.IAsyncResult _result = base.BeginInvoke("GetEstimateCount", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<int> EndGetEstimateCount(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<int> _result = ((System.Collections.ObjectModel.ObservableCollection<int>)(base.EndInvoke("GetEstimateCount", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveSelectedItem(int selectedid, int revisionid, int pagid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = selectedid;
                _args[1] = revisionid;
                _args[2] = pagid;
                _args[3] = userid;
                System.IAsyncResult _result = base.BeginInvoke("SaveSelectedItem", _args, callback, asyncState);
                return _result;
            }
            
            public int EndSaveSelectedItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                int _result = ((int)(base.EndInvoke("SaveSelectedItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveEditItemDetails(int selectedid, int revisionid, decimal qty, decimal sellprice, string productdescription, string extradescription, string internaldescription, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = selectedid;
                _args[1] = revisionid;
                _args[2] = qty;
                _args[3] = sellprice;
                _args[4] = productdescription;
                _args[5] = extradescription;
                _args[6] = internaldescription;
                System.IAsyncResult _result = base.BeginInvoke("SaveEditItemDetails", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveEditItemDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveEditItemDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveItem(int selectedid, int estimateid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = selectedid;
                _args[1] = estimateid;
                System.IAsyncResult _result = base.BeginInvoke("RemoveItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyItemFromOptionTreeToEstimate(int estimatedetailsid, int revisiondetailsid, int revisionid, int productareagroupid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = estimatedetailsid;
                _args[1] = revisiondetailsid;
                _args[2] = revisionid;
                _args[3] = productareagroupid;
                _args[4] = userid;
                System.IAsyncResult _result = base.BeginInvoke("CopyItemFromOptionTreeToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromOptionTreeToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(base.EndInvoke("CopyItemFromOptionTreeToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyItemFromMasterHomeToEstimate(int regionid, int optionid, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = regionid;
                _args[1] = optionid;
                _args[2] = revisionid;
                _args[3] = userid;
                System.IAsyncResult _result = base.BeginInvoke("CopyItemFromMasterHomeToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromMasterHomeToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(base.EndInvoke("CopyItemFromMasterHomeToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyItemFromAllProductsToEstimate(int regionid, string productid, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = regionid;
                _args[1] = productid;
                _args[2] = revisionid;
                _args[3] = userid;
                System.IAsyncResult _result = base.BeginInvoke("CopyItemFromAllProductsToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails EndCopyItemFromAllProductsToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails _result = ((Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails)(base.EndInvoke("CopyItemFromAllProductsToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSynchronizeNewOptionToEstimate(int revisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = revisionid;
                System.IAsyncResult _result = base.BeginInvoke("SynchronizeNewOptionToEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSynchronizeNewOptionToEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SynchronizeNewOptionToEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAdditionalNotesTemplateAndProducts(int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = revisionid;
                _args[1] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetAdditionalNotesTemplateAndProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAdditionalNotesTemplateAndProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetAdditionalNotesTemplateAndProducts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAdditionalNotesTemplateAndProductsByRegion(string templatename, string subregionid, int userid, int active, int selectedroleid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = templatename;
                _args[1] = subregionid;
                _args[2] = userid;
                _args[3] = active;
                _args[4] = selectedroleid;
                System.IAsyncResult _result = base.BeginInvoke("GetAdditionalNotesTemplateAndProductsByRegion", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAdditionalNotesTemplateAndProductsByRegion(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetAdditionalNotesTemplateAndProductsByRegion", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNoteTemplate(int templateid, string templatename, int status, int userid, string action, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = templateid;
                _args[1] = templatename;
                _args[2] = status;
                _args[3] = userid;
                _args[4] = action;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNoteTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateNoteTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateNoteTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckNewNoteTemplateNameExists(int templateid, string templatename, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = templateid;
                _args[1] = templatename;
                System.IAsyncResult _result = base.BeginInvoke("CheckNewNoteTemplateNameExists", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCheckNewNoteTemplateNameExists(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CheckNewNoteTemplateNameExists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddAdditonalNotesTemplate(string templatename, int revisionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = templatename;
                _args[1] = revisionid;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("AddAdditonalNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddAdditonalNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddAdditonalNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSQSConfiguration(string configCode, string codeValue, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = configCode;
                _args[1] = codeValue;
                System.IAsyncResult _result = base.BeginInvoke("GetSQSConfiguration", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> EndGetSQSConfiguration(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSConfiguration>)(base.EndInvoke("GetSQSConfiguration", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSalesRegionByState(string stateid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = stateid;
                System.IAsyncResult _result = base.BeginInvoke("GetSalesRegionByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> EndGetSalesRegionByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion>)(base.EndInvoke("GetSalesRegionByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPriceRegionByState(string stateid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = stateid;
                System.IAsyncResult _result = base.BeginInvoke("GetPriceRegionByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> EndGetPriceRegionByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.SQSSalesRegion>)(base.EndInvoke("GetPriceRegionByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateSalesEstimateLog(string username, Metricon.Silverlight.MetriconRetailSystem.MRSService.MRSLogAction action, int estimateRevisionId, string extraDescription, int reasonCode, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = username;
                _args[1] = action;
                _args[2] = estimateRevisionId;
                _args[3] = extraDescription;
                _args[4] = reasonCode;
                System.IAsyncResult _result = base.BeginInvoke("CreateSalesEstimateLog", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateSalesEstimateLog(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateSalesEstimateLog", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSetContractStatus(string username, int estimateRevisionId, Metricon.Silverlight.MetriconRetailSystem.MRSService.ContractStatus status, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = username;
                _args[1] = estimateRevisionId;
                _args[2] = status;
                System.IAsyncResult _result = base.BeginInvoke("SetContractStatus", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSetContractStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SetContractStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveItemFromNotesTemplate(string templateid, string productareagroupid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = templateid;
                _args[1] = productareagroupid;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("RemoveItemFromNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveItemFromNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveItemFromNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableItemsForNotesTemplate(string templateid, string searchtext, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = templateid;
                _args[1] = searchtext;
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableItemsForNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> EndGetAvailableItemsForNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.EstimateDetails>)(base.EndInvoke("GetAvailableItemsForNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddItemToNotesTemplate(string templateid, string selecteditemids, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = templateid;
                _args[1] = selecteditemids;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("AddItemToNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddItemToNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddItemToNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddNewNotesTemplate(string templatename, string regionid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = templatename;
                _args[1] = regionid;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("AddNewNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndAddNewNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("AddNewNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRemoveNotesTemplate(string templateid, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = templateid;
                _args[1] = userid;
                System.IAsyncResult _result = base.BeginInvoke("RemoveNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndRemoveNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("RemoveNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCopyNotesTemplate(string templatename, string regionid, int userid, string templateid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = templatename;
                _args[1] = regionid;
                _args[2] = userid;
                _args[3] = templateid;
                System.IAsyncResult _result = base.BeginInvoke("CopyNotesTemplate", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCopyNotesTemplate(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CopyNotesTemplate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCreateTaskForContract(string contractid, int revisionid, string subject, System.DateTime duedate, string category, string notes, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[6];
                _args[0] = contractid;
                _args[1] = revisionid;
                _args[2] = subject;
                _args[3] = duedate;
                _args[4] = category;
                _args[5] = notes;
                System.IAsyncResult _result = base.BeginInvoke("CreateTaskForContract", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndCreateTaskForContract(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("CreateTaskForContract", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateNotesTemplateItem(string templateid, string productareagroupid, decimal quanitity, decimal price, string extradescription, string internaldescription, string additionalinfo, int userid, bool usedefaultquantity, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = templateid;
                _args[1] = productareagroupid;
                _args[2] = quanitity;
                _args[3] = price;
                _args[4] = extradescription;
                _args[5] = internaldescription;
                _args[6] = additionalinfo;
                _args[7] = userid;
                _args[8] = usedefaultquantity;
                System.IAsyncResult _result = base.BeginInvoke("UpdateNotesTemplateItem", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateNotesTemplateItem(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateNotesTemplateItem", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSynchroniseCustomerDetails(string contractNo, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contractNo;
                System.IAsyncResult _result = base.BeginInvoke("SynchroniseCustomerDetails", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSynchroniseCustomerDetails(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SynchroniseCustomerDetails", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNonstandardCategory(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNonstandardCategory", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> EndGetNonstandardCategory(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory>)(base.EndInvoke("GetNonstandardCategory", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNonstandardCategoryByState(int stateid, int selectedareaid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = stateid;
                _args[1] = selectedareaid;
                System.IAsyncResult _result = base.BeginInvoke("GetNonstandardCategoryByState", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> EndGetNonstandardCategoryByState(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardCategory>)(base.EndInvoke("GetNonstandardCategoryByState", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNonstandardGroups(int selectedareaid, int stateid, int selectedgroupid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = selectedareaid;
                _args[1] = stateid;
                _args[2] = selectedgroupid;
                System.IAsyncResult _result = base.BeginInvoke("GetNonstandardGroups", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> EndGetNonstandardGroups(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.NonStandardGroup>)(base.EndInvoke("GetNonstandardGroups", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPriceDisplayCodes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPriceDisplayCodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> EndGetPriceDisplayCodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.PriceDisplayCode>)(base.EndInvoke("GetPriceDisplayCodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProductImages(string productid, int supplierid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = productid;
                _args[1] = supplierid;
                System.IAsyncResult _result = base.BeginInvoke("GetProductImages", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> EndGetProductImages(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ProductImage>)(base.EndInvoke("GetProductImages", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCheckEstimateLockStatus(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimaterevisionid;
                System.IAsyncResult _result = base.BeginInvoke("CheckEstimateLockStatus", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCheckEstimateLockStatus(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CheckEstimateLockStatus", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUnlockEstimate(int estimaterevisionid, int type, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = estimaterevisionid;
                _args[1] = type;
                System.IAsyncResult _result = base.BeginInvoke("UnlockEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public void EndUnlockEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("UnlockEstimate", _args, result);
            }
            
            public System.IAsyncResult BeginValidateStudioMEstimate(int estimaterevisionid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = estimaterevisionid;
                System.IAsyncResult _result = base.BeginInvoke("ValidateStudioMEstimate", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> EndValidateStudioMEstimate(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage> _result = ((System.Collections.ObjectModel.ObservableCollection<Metricon.Silverlight.MetriconRetailSystem.MRSService.ValidationErrorMessage>)(base.EndInvoke("ValidateStudioMEstimate", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginUpdateItemAcceptance(string revisionestimatedetailsid, int accepted, int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = revisionestimatedetailsid;
                _args[1] = accepted;
                _args[2] = userid;
                System.IAsyncResult _result = base.BeginInvoke("UpdateItemAcceptance", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndUpdateItemAcceptance(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("UpdateItemAcceptance", _args, result)));
                return _result;
            }
        }
    }
}
